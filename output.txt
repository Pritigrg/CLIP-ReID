2025-04-03 13:06:25,339 transreid INFO: Saving model in the path :output
2025-04-03 13:06:25,339 transreid INFO: Namespace(config_file='configs/person/cnn_clipreid.yml', local_rank=0, opts=['TEST.WEIGHT', 'output/Market1501_clipreid_RN50_120.pth'])
2025-04-03 13:06:25,340 transreid INFO: Loaded configuration file configs/person/cnn_clipreid.yml
2025-04-03 13:06:25,342 transreid INFO: 
MODEL:
  PRETRAIN_CHOICE: 'imagenet'
  METRIC_LOSS_TYPE: 'triplet'
  IF_LABELSMOOTH: 'on'
  IF_WITH_CENTER: 'no'
  NAME: 'RN50'
  ID_LOSS_WEIGHT : 1.0
  TRIPLET_LOSS_WEIGHT : 1.0
  I2T_LOSS_WEIGHT : 1.0

INPUT:
  SIZE_TRAIN: [256, 128]
  SIZE_TEST: [256, 128]
  PROB: 0.5 # random horizontal flip
  RE_PROB: 0.5 # random erasing
  PADDING: 10
  PIXEL_MEAN: [0.485, 0.456, 0.406]
  PIXEL_STD: [0.229, 0.224, 0.225]

DATALOADER:
  SAMPLER: 'softmax_triplet'
  NUM_INSTANCE: 4
  NUM_WORKERS: 8

SOLVER:
  STAGE1:
    IMS_PER_BATCH: 64
    OPTIMIZER_NAME: "Adam"
    BASE_LR: 0.00035
    WARMUP_LR_INIT: 0.00001
    LR_MIN: 1e-6
    WARMUP_METHOD: 'linear'
    WEIGHT_DECAY:  1e-4
    WEIGHT_DECAY_BIAS: 1e-4
    MAX_EPOCHS: 60
    CHECKPOINT_PERIOD: 60
    LOG_PERIOD: 50
    WARMUP_EPOCHS: 5

  STAGE2:
    IMS_PER_BATCH: 64
    OPTIMIZER_NAME: "Adam"
    BASE_LR: 0.00035
    WARMUP_METHOD: 'linear'
    WARMUP_ITERS: 10
    WARMUP_FACTOR: 0.01
    WEIGHT_DECAY:  0.0005
    WEIGHT_DECAY_BIAS: 0.0005
    LARGE_FC_LR: False
    MAX_EPOCHS: 120
    CHECKPOINT_PERIOD: 120
    LOG_PERIOD: 50
    EVAL_PERIOD: 120
    BIAS_LR_FACTOR: 2
    
    STEPS: [40, 70]
    GAMMA: 0.1

TEST:
  EVAL: True
  IMS_PER_BATCH: 64
  RE_RANKING: False
  WEIGHT: './output/Market1501_clipreid_RN50_120.pth'
  NECK_FEAT: 'before'
  FEAT_NORM: 'yes'

DATASETS:
   NAMES: ('market1501')
   ROOT_DIR: ('data')
OUTPUT_DIR: 'output'

# NAMES: ('dukemtmc')
#   ROOT_DIR: ('')
# OUTPUT_DIR: ''

#   NAMES: ('occ_duke')
#   ROOT_DIR: ('')
# OUTPUT_DIR: ''

#   NAMES: ('msmt17')
#   ROOT_DIR: ('')
# OUTPUT_DIR: ''

# CUDA_VISIBLE_DEVICES=1 python train_clipreid.py --config_file configs/person/res_clipreid.yml

2025-04-03 13:06:25,343 transreid INFO: Running with config:
DATALOADER:
  NUM_INSTANCE: 4
  NUM_WORKERS: 8
  SAMPLER: softmax_triplet
DATASETS:
  NAMES: market1501
  ROOT_DIR: data
INPUT:
  PADDING: 10
  PIXEL_MEAN: [0.485, 0.456, 0.406]
  PIXEL_STD: [0.229, 0.224, 0.225]
  PROB: 0.5
  RE_PROB: 0.5
  SIZE_TEST: [256, 128]
  SIZE_TRAIN: [256, 128]
MODEL:
  ATT_DROP_RATE: 0.0
  COS_LAYER: False
  DEVICE: cuda
  DEVICE_ID: 0
  DIST_TRAIN: False
  DROP_OUT: 0.0
  DROP_PATH: 0.1
  I2T_LOSS_WEIGHT: 1.0
  ID_LOSS_TYPE: softmax
  ID_LOSS_WEIGHT: 1.0
  IF_LABELSMOOTH: on
  IF_WITH_CENTER: no
  LAST_STRIDE: 1
  METRIC_LOSS_TYPE: triplet
  NAME: RN50
  NECK: bnneck
  NO_MARGIN: False
  PRETRAIN_CHOICE: imagenet
  PRETRAIN_PATH: 
  SIE_CAMERA: False
  SIE_COE: 3.0
  SIE_VIEW: False
  STRIDE_SIZE: [16, 16]
  TRANSFORMER_TYPE: None
  TRIPLET_LOSS_WEIGHT: 1.0
OUTPUT_DIR: output
SOLVER:
  MARGIN: 0.3
  SEED: 1234
  STAGE1:
    BASE_LR: 0.00035
    CHECKPOINT_PERIOD: 60
    COSINE_MARGIN: 0.5
    COSINE_SCALE: 30
    EVAL_PERIOD: 10
    IMS_PER_BATCH: 64
    LOG_PERIOD: 50
    LR_MIN: 1e-06
    MAX_EPOCHS: 60
    MOMENTUM: 0.9
    OPTIMIZER_NAME: Adam
    WARMUP_EPOCHS: 5
    WARMUP_FACTOR: 0.01
    WARMUP_ITERS: 500
    WARMUP_LR_INIT: 1e-05
    WARMUP_METHOD: linear
    WEIGHT_DECAY: 0.0001
    WEIGHT_DECAY_BIAS: 0.0001
  STAGE2:
    BASE_LR: 0.00035
    BIAS_LR_FACTOR: 2
    CENTER_LOSS_WEIGHT: 0.0005
    CENTER_LR: 0.5
    CHECKPOINT_PERIOD: 120
    COSINE_MARGIN: 0.5
    COSINE_SCALE: 30
    EVAL_PERIOD: 120
    GAMMA: 0.1
    IMS_PER_BATCH: 64
    LARGE_FC_LR: False
    LOG_PERIOD: 50
    LR_MIN: 1.6e-05
    MAX_EPOCHS: 120
    MOMENTUM: 0.9
    OPTIMIZER_NAME: Adam
    STEPS: (40, 70)
    WARMUP_EPOCHS: 5
    WARMUP_FACTOR: 0.01
    WARMUP_ITERS: 10
    WARMUP_LR_INIT: 0.01
    WARMUP_METHOD: linear
    WEIGHT_DECAY: 0.0005
    WEIGHT_DECAY_BIAS: 0.0005
TEST:
  DIST_MAT: dist_mat.npy
  EVAL: True
  FEAT_NORM: yes
  IMS_PER_BATCH: 64
  NECK_FEAT: before
  RE_RANKING: False
  WEIGHT: output/Market1501_clipreid_RN50_120.pth
=> Market1501 loaded
Dataset statistics:
  ----------------------------------------
  subset   | # ids | # images | # cameras
  ----------------------------------------
  train    |   751 |    12936 |         6
  query    |     1 |        1 |         1
  gallery  |     5 |       84 |         6
  ----------------------------------------
Resized position embedding: %s to %s torch.Size([50, 2048]) torch.Size([129, 2048])
Position embedding resize to height:16 width: 8
using triplet loss with margin:0.3
label smooth on, numclasses: 751
2025-04-03 13:06:28,217 transreid.train INFO: start training
2025-04-03 13:06:28,240 transreid.train INFO: model: build_transformer(
  (classifier): Linear(in_features=2048, out_features=751, bias=False)
  (classifier_proj): Linear(in_features=1024, out_features=751, bias=False)
  (bottleneck): BatchNorm1d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bottleneck_proj): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (image_encoder): ModifiedResNet(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (relu): ReLU(inplace=True)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (avgpool): Identity()
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (attnpool): AttentionPool2d(
      (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
      (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
      (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
      (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
    )
  )
  (prompt_learner): PromptLearner()
  (text_encoder): TextEncoder(
    (transformer): Transformer(
      (resblocks): Sequential(
        (0): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (1): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (2): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (3): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (4): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (5): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (6): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (7): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (8): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (9): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (10): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (11): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
)
label tensor([264, 410, 401, 147, 650, 479,  77, 475, 378, 395, 732, 663, 353, 240,
        575, 647, 122,  26,  56, 416, 206, 660, 701, 503, 332, 508,  44, 179,
        187, 385, 538, 293, 287, 405, 530,  92, 156, 171, 637,   0, 252, 589,
        741, 505, 316, 339, 507,  67, 713, 667, 236, 643, 674, 352, 463, 527,
        416, 675, 643,  72, 403, 574, 557, 744], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2722,  0.2385, -0.2654,  ..., -0.0733,  0.1981,  0.0156],
        [ 0.3381, -0.0688,  0.4836,  ...,  0.2927,  0.1517,  0.0117],
        [-0.2834,  0.2373, -0.3284,  ..., -0.2646,  0.1461, -0.0365],
        ...,
        [ 0.2925, -0.0113, -0.2522,  ..., -0.3967,  0.2151,  0.1083],
        [ 0.4114, -0.0546,  0.2073,  ..., -0.0578, -0.0006,  0.0512],
        [ 0.2683,  0.0413,  0.3418,  ..., -0.3591,  0.1561,  0.0789]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([506, 240, 115,   0,  98, 513, 575, 167, 502, 401,  84, 737,  20, 373,
        184, 132, 386, 124, 627, 568, 366, 190, 306, 259, 314, 228, 327, 702,
        327, 103, 687, 522, 653, 545,  12,  76, 714,  44, 339, 566, 105, 564,
        306, 500, 236, 416, 341, 597, 401, 391, 486, 411,  33, 504, 176, 154,
        290, 121, 679, 739, 660, 244, 213, 323], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3088,  0.1089, -0.1858,  ..., -0.1764,  0.2446,  0.0874],
        [ 0.1113, -0.0076, -0.2771,  ..., -0.0130, -0.1816, -0.1495],
        [ 0.2942,  0.2482, -0.1164,  ...,  0.0262,  0.0290,  0.1803],
        ...,
        [ 0.1777, -0.0485,  0.1356,  ...,  0.1334,  0.0133, -0.1711],
        [-0.0517,  0.0616, -0.1329,  ..., -0.0106,  0.3142,  0.0389],
        [-0.1538,  0.1033,  0.0871,  ...,  0.0068,  0.3616,  0.0971]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([374, 407, 539, 565, 297,  61, 171, 379, 475, 231, 153, 147, 537, 741,
         45, 167, 732, 104,  97, 603, 314, 135,  93, 629, 569, 302, 196, 476,
        326, 223, 121, 612, 733, 484, 392, 247,   3, 392, 272,  80, 251,   6,
        468,  72, 110, 481, 372, 227, 385, 516, 509, 171, 717, 603, 241,  33,
        352, 397, 653, 129, 200, 247, 248, 446], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.6206,  0.0626,  0.3398,  ..., -0.2600, -0.6616, -0.0208],
        [ 0.0591, -0.0956, -0.0196,  ..., -0.1351, -0.0784,  0.0703],
        [ 0.5132,  0.2142,  0.0718,  ...,  0.0720,  0.1007,  0.0601],
        ...,
        [ 0.4238,  0.0643, -0.1014,  ...,  0.1069, -0.2073,  0.2988],
        [ 0.1809,  0.3108,  0.3455,  ..., -0.0955,  0.1508, -0.2493],
        [ 0.4937,  0.1365,  0.2311,  ...,  0.1375,  0.0041, -0.0738]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([611, 326,  59, 104,   6,  72, 133,  33, 278, 256, 698,   6, 234, 432,
        158, 407, 165, 317, 283, 317, 566, 353, 166, 610, 577, 287, 323, 428,
        425, 594, 650, 683, 116, 450, 436, 177, 171, 676,  45, 620, 411, 717,
        723, 736,  44, 491, 187, 232,  86, 744, 223, 315, 374,  98, 653, 323,
        427, 586, 385, 503, 166, 689, 548, 446], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2561,  0.1112,  0.3042,  ...,  0.1076,  0.2476, -0.0911],
        [ 0.0660,  0.1149,  0.0479,  ..., -0.1956,  0.1177,  0.0039],
        [ 0.2500,  0.2888,  0.2629,  ...,  0.1588, -0.1410,  0.2830],
        ...,
        [ 0.3899, -0.0111,  0.1927,  ..., -0.2302, -0.2465, -0.0058],
        [ 0.2759, -0.0642,  0.2260,  ...,  0.0384, -0.0363, -0.1041],
        [ 0.4766,  0.1404,  0.2292,  ...,  0.1235, -0.0026, -0.0562]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([136, 389, 121, 302,  84, 366, 727, 260, 360, 114, 656, 530, 209, 329,
          3, 535,   0, 267,  69,  18, 702, 167, 565, 293, 398, 290, 376, 122,
        213, 225,   6, 175, 513, 120, 395, 179,  27, 575, 357, 373, 140, 508,
        353, 255, 673, 475, 115, 546, 661, 165,  13, 163, 630, 686, 332, 429,
        703,  98,  89, 147, 434, 743, 691, 687], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1131,  0.1270, -0.1309,  ..., -0.3420,  0.2133, -0.0402],
        [-0.1530, -0.1547,  0.3269,  ...,  0.0043,  0.0010, -0.4143],
        [ 0.1665,  0.1644,  0.0495,  ..., -0.1498,  0.1343,  0.1919],
        ...,
        [ 0.4861, -0.2944, -0.2147,  ...,  0.1111,  0.1156,  0.0163],
        [ 0.5122, -0.0854, -0.1439,  ..., -0.0143, -0.0251,  0.1121],
        [ 0.5391,  0.0622, -0.2264,  ..., -0.0658,  0.0862,  0.0863]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([260, 471, 702, 138, 346, 329, 360, 343, 653, 153,  67, 661, 428, 736,
        618, 113, 234, 596, 400, 427, 357, 357, 345, 364,  41, 115, 618, 663,
        543, 528, 597, 446, 315, 248, 244, 298, 647, 121, 515, 654, 645,  76,
        275, 265, 597, 135, 708, 654, 561,  48, 282, 381, 609,  76, 534, 318,
         71, 572, 314, 522, 176, 289, 418,  44], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3789,  0.2032, -0.1426,  ..., -0.1559,  0.3159,  0.4888],
        [ 0.4495,  0.2751, -0.1613,  ...,  0.0240, -0.1533,  0.0196],
        [ 0.2090, -0.0641,  0.0330,  ..., -0.2379,  0.0684,  0.1963],
        ...,
        [ 0.1255,  0.5933,  0.1908,  ..., -0.0526,  0.2312,  0.2578],
        [ 0.0736,  0.1642,  0.0576,  ..., -0.0310,  0.0392, -0.5044],
        [ 0.7593,  0.0726,  0.2678,  ...,  0.0770,  0.2001,  0.0841]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([521, 543, 260, 745, 649, 383, 706, 512, 638, 386, 699,   0, 135, 479,
        184, 433, 261,  94, 649, 130, 243, 657, 435, 213, 533, 205, 426, 265,
        280, 653, 554, 221,  63, 141, 296, 361, 296,  48, 442, 129, 572, 389,
        567, 228, 479, 537, 299, 676, 289, 703,  48, 169,  12, 239, 114, 237,
        423, 553, 630, 676,  22, 479, 405, 353], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2184,  0.2028, -0.1963,  ..., -0.3010, -0.0957,  0.0362],
        [ 0.1277,  0.3435,  0.1812,  ..., -0.0828,  0.0238,  0.1886],
        [ 0.3784,  0.1907, -0.1379,  ..., -0.1514,  0.3225,  0.4800],
        ...,
        [ 0.2893,  0.0322,  0.1736,  ...,  0.1335, -0.1995, -0.3433],
        [ 0.1313, -0.0114,  0.2939,  ..., -0.0793, -0.3105,  0.2487],
        [ 0.2040,  0.1091,  0.2461,  ..., -0.1929,  0.1995,  0.3115]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([155, 149, 386, 342, 109, 543, 188, 527, 377,  94, 649, 293, 368, 287,
        121, 373, 589, 416, 614, 480, 385,  45, 701, 569,  54, 410,   0, 556,
        564, 326,  53, 510, 531, 601, 467, 679, 176, 613, 345,  97, 459, 500,
        708, 424,  33,  91,  30,  27, 268, 474, 383,  24, 382, 131, 292, 253,
          8, 609,  12, 375, 351, 102, 628,  15], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2915,  0.3928,  0.0640,  ...,  0.0462,  0.2067,  0.3140],
        [ 0.0275,  0.0534, -0.7573,  ...,  0.1058,  0.1156, -0.2290],
        [ 0.3958, -0.0392, -0.2202,  ..., -0.0187,  0.1221,  0.1909],
        ...,
        [ 0.2205,  0.0182, -0.1481,  ...,  0.3811,  0.2905,  0.1643],
        [ 0.2981, -0.1617,  0.1694,  ..., -0.0303,  0.1389, -0.1699],
        [ 0.0238,  0.0811,  0.3274,  ...,  0.0335, -0.1415, -0.2490]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([342, 533, 153,  55,  46,   0,  11, 403, 408, 492, 103, 408,  94, 256,
        483, 126, 506, 662, 588, 438, 294, 132,  33, 336, 395, 484, 129,  23,
         50, 426, 672,  18, 527, 745, 411, 167, 495, 625, 356, 714, 536, 593,
        145, 427, 695, 131, 737, 630, 744, 718, 115, 479, 688,  44, 316, 736,
         19, 436, 349, 637, 353, 422, 724, 360], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0805,  0.0707,  0.0264,  ...,  0.0336, -0.0831,  0.0859],
        [ 0.2764,  0.2690,  0.4915,  ..., -0.0266,  0.0253, -0.2913],
        [ 0.0780,  0.0911, -0.0273,  ...,  0.2389,  0.0090,  0.0588],
        ...,
        [ 0.3342,  0.2512, -0.2130,  ...,  0.1403,  0.2220,  0.2842],
        [-0.3547,  0.2383,  0.0635,  ..., -0.2563,  0.1831,  0.1167],
        [ 0.1824, -0.0699,  0.3357,  ...,  0.2299, -0.0868,  0.1277]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([427, 427, 645, 395, 167, 363, 201, 305, 120, 557, 414, 369, 365, 118,
        115, 221, 722, 105, 676, 499, 535, 750, 314,  26, 306, 357, 569, 666,
        411, 209, 130, 225, 585, 714,  77, 516,  70, 132, 701, 353,  33,  30,
        365, 285, 312, 132, 424, 131, 724, 372, 224,  33, 622, 259, 411, 679,
         77, 601, 125, 630, 365, 128, 377, 654], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3477,  0.5327, -0.1040,  ...,  0.3296, -0.2173,  0.1191],
        [ 0.3477,  0.5327, -0.1040,  ...,  0.3296, -0.2173,  0.1191],
        [ 0.4919,  0.0253,  0.2961,  ..., -0.3052,  0.2966,  0.2108],
        ...,
        [ 0.1851,  0.0049,  0.0810,  ...,  0.1372,  0.0186,  0.1136],
        [ 0.6060,  0.0140, -0.1923,  ...,  0.2167,  0.0038,  0.0053],
        [ 0.3657, -0.0477, -0.0551,  ...,  0.0528, -0.1432,  0.0326]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([633, 122, 682, 427, 166,  63, 588, 122, 428,   6,  38, 344, 643, 416,
        635, 314, 717,  38, 301, 231, 160, 256, 195, 343, 715, 398, 748, 728,
        708, 418, 130, 243, 491, 112, 668, 112, 341, 406,  13,  29, 748, 470,
        425, 389, 433, 492, 297,  85, 111, 463, 220, 606, 120, 628, 101, 299,
        225,  48, 353, 676, 366, 418,   6, 366], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.2773, -0.2493,  0.3533,  ..., -0.0360,  0.1310, -0.2844],
        [ 0.2827,  0.2917,  0.0457,  ..., -0.0705,  0.0573,  0.1387],
        [ 0.3774,  0.3037, -0.0573,  ...,  0.3884, -0.1472, -0.0063],
        ...,
        [ 0.0216,  0.0975,  0.0648,  ...,  0.0182,  0.1183, -0.3716],
        [ 0.2373,  0.0667, -0.0464,  ...,  0.0395,  0.1245,  0.0796],
        [ 0.4836, -0.1805,  0.2188,  ...,  0.0632, -0.1323,  0.3257]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([306, 392, 371, 315, 630,  53, 527, 511, 609, 217,  57, 138, 718, 204,
        353,  47, 713, 353, 134, 137, 167,  50, 731, 508, 440, 477, 486, 327,
        144, 154, 287, 152, 423, 392, 129, 672, 357, 600, 166, 581, 647, 502,
        337, 490, 433,  47, 173, 525,  13,  40,   4, 236, 298, 317, 468, 315,
        700, 143, 564, 628, 668, 603, 547,  73], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0324, -0.0373, -0.3213,  ..., -0.2891, -0.0654, -0.0545],
        [ 0.2092, -0.0385,  0.1221,  ...,  0.2379, -0.0261,  0.0429],
        [ 0.2964,  0.4905,  0.0430,  ..., -0.0370, -0.0791, -0.0313],
        ...,
        [-0.0861,  0.1672,  0.2201,  ...,  0.0970,  0.0155, -0.0063],
        [ 0.2812,  0.2113,  0.0030,  ..., -0.1655, -0.0220, -0.0156],
        [ 0.2180, -0.0206, -0.1639,  ..., -0.0872, -0.2522, -0.2145]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([466, 261, 343, 668, 177, 479, 440, 339, 198, 328, 356,  61, 376, 301,
        647,   0, 648, 331, 592,  35, 606,  88, 289, 244, 143, 397, 136, 427,
        289, 104,  18,  57, 384, 367,   6, 400, 722,  17, 534, 109, 682, 487,
        121, 315, 724, 407, 289, 272, 554, 668, 703, 180, 226, 127,  63, 652,
        586,  12, 408, 646, 426, 609, 382,  67], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2922, -0.0346, -0.2817,  ...,  0.0935, -0.1362, -0.0934],
        [ 0.3704,  0.1964, -0.1971,  ...,  0.1664, -0.1952,  0.2000],
        [-0.1004,  0.1483, -0.2411,  ...,  0.0223, -0.0527,  0.2769],
        ...,
        [ 0.3159, -0.0577,  0.3535,  ...,  0.0347, -0.1790,  0.1592],
        [ 0.0685,  0.2930, -0.0089,  ...,  0.1606,  0.1106,  0.1146],
        [ 0.0839, -0.1245, -0.3157,  ..., -0.0542, -0.0550, -0.1431]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([105, 578, 131, 745, 190, 284, 358,  70, 411, 648,  45, 176, 547, 523,
        359, 438, 677, 637, 316, 212,  46, 625, 124, 649, 381, 445, 145, 378,
        249, 373, 519, 198, 682, 458, 233,  59, 627, 287, 356, 462, 328, 583,
          8,  46, 557, 251, 315, 100, 442, 487, 429, 736, 249, 359, 301,  97,
        534,  47,  67,  24, 506, 372, 352, 429], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2135, -0.1075, -0.3074,  ...,  0.1287, -0.3188, -0.1144],
        [ 0.4143,  0.1918, -0.0219,  ...,  0.1603,  0.1075,  0.1719],
        [ 0.2583,  0.1725,  0.0099,  ...,  0.2759,  0.1833,  0.2852],
        ...,
        [ 0.2920,  0.3394, -0.0459,  ..., -0.1122, -0.2400,  0.2676],
        [ 0.3733,  0.2668,  0.4338,  ..., -0.4312, -0.0014, -0.2062],
        [ 0.1006,  0.3188,  0.1070,  ..., -0.0865,  0.1209,  0.0692]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([708, 654,  39, 626, 327, 128, 259, 244, 162, 516, 407, 607, 296, 181,
        104, 578, 221, 380, 685, 192, 362, 712, 524, 642, 749,  67,  46,  33,
        215, 487, 526,   4, 563, 529, 511, 396, 465, 188,  30, 262, 653, 625,
        698, 385, 615, 166,  33, 241, 409, 566, 535, 601, 332, 366, 216, 742,
        213, 578, 512, 319,  77, 115, 250,  46], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2102, -0.1254,  0.2336,  ..., -0.2754,  0.2267,  0.0907],
        [ 0.3464, -0.0341, -0.0765,  ...,  0.0448, -0.1506,  0.0049],
        [ 0.4666, -0.2317, -0.0563,  ...,  0.1102,  0.2800,  0.1965],
        ...,
        [ 0.3677,  0.1346, -0.1008,  ...,  0.0763,  0.0345,  0.1125],
        [ 0.1045,  0.1539,  0.2112,  ..., -0.0692, -0.0303,  0.0919],
        [-0.0437,  0.2791, -0.1052,  ..., -0.2147,  0.2820,  0.2866]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([193, 380, 618, 339, 337,  33, 661, 179, 724,  63,  82,  37, 518, 113,
         53, 229, 566, 417, 133, 246,  55, 154, 173, 309, 407, 279, 285, 147,
        129, 211, 496, 223, 560, 286, 422, 298, 566,  91,  53, 398, 366, 320,
        251, 412, 220, 597, 475, 379,  78, 153, 290, 611, 656, 359, 164, 675,
        717,  87, 582, 198, 362, 207,  45,  67], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0039, -0.1041,  0.3730,  ...,  0.0946, -0.1793, -0.2068],
        [ 0.1155, -0.2427,  0.1066,  ...,  0.0427,  0.2908,  0.2715],
        [ 0.0797,  0.0846, -0.6006,  ..., -0.1753,  0.0720, -0.0855],
        ...,
        [ 0.4773,  0.2367,  0.0061,  ...,  0.0655,  0.0353,  0.1422],
        [-0.0810,  0.4663,  0.2888,  ..., -0.0098,  0.0598,  0.1169],
        [ 0.1041, -0.1272, -0.3279,  ..., -0.0608, -0.0453, -0.1619]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([427, 469, 580, 532, 479, 564, 378, 747, 383, 323, 622, 720, 584, 317,
        476, 642,  46, 597, 731, 725, 109, 220, 375, 478, 590, 527, 297, 490,
        113, 567, 316, 578, 330, 514, 109,  28, 227,  83, 416, 545, 540, 385,
        584, 558, 226, 721, 401, 145, 212, 749, 140, 533, 366,  87, 636, 401,
        207, 358, 534, 281, 693,  28, 219,  27], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3696,  0.5010, -0.0723,  ...,  0.3521, -0.2362,  0.0932],
        [ 0.5605,  0.0982,  0.1594,  ..., -0.1506,  0.3203,  0.2142],
        [ 0.0200,  0.3032,  0.1515,  ...,  0.0069,  0.1367, -0.1036],
        ...,
        [-0.0037,  0.1394,  0.1737,  ...,  0.1171,  0.0875,  0.0454],
        [ 0.1425, -0.1405,  0.2279,  ..., -0.2130, -0.0550,  0.1965],
        [-0.0804, -0.0489, -0.1122,  ...,  0.1606,  0.1979, -0.1786]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 67, 587, 446, 135, 646, 129, 390, 704, 602, 179,  30, 525,  82, 692,
        386, 507, 284,  89, 147, 554, 205,  53, 187, 648, 182, 491, 131, 112,
        350, 600, 532, 166, 352, 226, 603, 188, 723, 520, 700, 617, 446, 129,
        715, 639, 640, 436, 292, 134, 112, 428, 369,  77, 327, 111, 412, 597,
         97, 531, 565,  25, 474, 197, 441, 293], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 1.1871e-01, -1.3171e-01, -3.3276e-01,  ..., -6.6101e-02,
         -3.0273e-02, -1.7297e-01],
        [ 8.4351e-02,  2.8491e-01, -6.5369e-02,  ...,  4.1016e-02,
          5.8075e-02,  1.9409e-02],
        [ 3.6279e-01,  1.1035e-01,  2.7856e-01,  ...,  1.0858e-01,
         -2.7481e-02, -4.8401e-02],
        ...,
        [ 2.2681e-01,  1.6882e-01, -1.5640e-04,  ...,  1.7810e-01,
          9.3445e-02, -1.2347e-01],
        [-1.5088e-01,  2.1997e-01,  1.2720e-01,  ...,  1.3098e-01,
          1.4748e-02,  1.7212e-01],
        [-1.8250e-01,  2.5342e-01,  6.9336e-01,  ..., -2.8662e-01,
          1.0419e-01,  7.1777e-02]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([132, 246, 208,  11,  30, 403, 299,  46, 342, 409, 113, 378, 406, 740,
        424, 677, 280, 234, 664, 140,  52, 456, 643,  57,  11, 394, 733, 685,
        475, 448, 613, 602, 170,  89,  33, 144, 223, 229, 562, 608, 341, 223,
         46, 606, 212, 667, 585, 629, 599, 542, 110,  58,  56, 375, 121, 488,
        557, 570, 389, 481, 174, 715, 581, 682], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2181,  0.0872,  0.0929,  ...,  0.0832,  0.1357,  0.1322],
        [ 0.7090,  0.0566,  0.2886,  ...,  0.3201,  0.0032,  0.2014],
        [ 0.1631, -0.0303, -0.1008,  ...,  0.1522, -0.1549, -0.1528],
        ...,
        [ 0.1005,  0.2081, -0.0562,  ...,  0.1169, -0.1271,  0.1235],
        [ 0.3696, -0.1483,  0.0565,  ...,  0.2043,  0.1704,  0.2686],
        [ 0.4426,  0.3806, -0.1417,  ...,  0.3496, -0.1282,  0.0790]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([657, 260, 353, 414, 581, 441, 385, 532,  74, 559, 421, 480, 230, 104,
        737, 229, 636, 135, 473, 590, 401, 136, 169, 479, 689, 663, 411, 487,
        724, 400,  53, 421, 667, 434, 385, 464, 140, 353, 446,  72, 543,  41,
        556, 166, 589,  13, 305, 571, 422, 414, 212, 542, 289, 401,  94, 376,
        281, 112, 391, 181, 461, 696, 111, 220], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3892, -0.0217,  0.0751,  ...,  0.2952, -0.0437, -0.0866],
        [ 0.3389,  0.1853, -0.1648,  ..., -0.1884,  0.3235,  0.4976],
        [ 0.0872,  0.0997,  0.2681,  ..., -0.3125,  0.1466,  0.4194],
        ...,
        [ 0.4512, -0.1027,  0.2839,  ..., -0.0853,  0.0505, -0.0227],
        [ 0.1423,  0.0310,  0.0953,  ..., -0.1329,  0.4656, -0.0080],
        [ 0.2272,  0.0541,  0.2128,  ...,  0.2600,  0.1131,  0.0777]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([129,  72, 154, 289, 167, 132, 576, 181, 275,   9, 121, 194, 687, 426,
         99, 650, 133, 152, 136, 654, 553, 136, 280, 649, 683, 484,  37, 708,
        115, 120, 220, 650,  22, 188, 426, 547, 362, 532, 498, 381, 398, 306,
        741, 289, 167, 353, 136, 278, 157, 311,  89, 476, 398, 293, 576,  49,
        344, 373, 594, 585, 459, 738, 189, 336], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4761,  0.1454,  0.5166,  ...,  0.3647, -0.0439, -0.4199],
        [ 0.3743, -0.1149,  0.1425,  ..., -0.1700,  0.0380,  0.2377],
        [ 0.3574,  0.2522,  0.2040,  ...,  0.0111,  0.2091,  0.1115],
        ...,
        [ 0.2477, -0.1576,  0.1448,  ...,  0.1866,  0.0516,  0.1755],
        [ 0.3862,  0.1182,  0.0528,  ...,  0.1193, -0.2246,  0.0924],
        [ 0.5186,  0.1906,  0.0854,  ...,  0.0089, -0.1954,  0.2690]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([651, 414, 525,   7, 439, 709, 675,  15,  26, 173, 689, 508, 204, 412,
        374, 308, 619, 179, 119, 129, 671, 342, 429, 122, 419, 301, 176, 338,
        398, 599, 497,  87, 594, 181, 167, 179, 571, 117, 488, 168, 147, 434,
        140,  72,   6, 355,   2, 317,   6, 217, 256,  46, 515, 136, 360, 117,
        602,   8, 378, 570, 188, 151, 378, 658], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1830,  0.4417, -0.0359,  ...,  0.0595,  0.0408,  0.0325],
        [ 0.1968,  0.0047,  0.0547,  ...,  0.0007,  0.3398,  0.1851],
        [-0.2113,  0.3938,  0.1549,  ...,  0.1443, -0.0726,  0.1577],
        ...,
        [ 0.3027, -0.2186,  0.2805,  ...,  0.0059,  0.0856, -0.0005],
        [ 0.2452,  0.1329, -0.0823,  ...,  0.0903, -0.3308, -0.1637],
        [ 0.3682,  0.1959,  0.2177,  ..., -0.4062,  0.1837,  0.0812]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([690, 295,  77, 310,  53, 173,  63,  50, 295, 485,  41, 610, 714, 178,
        207, 601, 245, 191, 520, 112, 158, 113, 135, 269, 308, 239, 269, 150,
        467, 457, 166, 718,  46, 621, 504, 519,   6, 114, 637, 469, 221,  25,
        118, 316, 554,  93, 132, 440, 298,  45, 346, 518, 310, 423, 235, 510,
        146, 248, 324, 212, 298, 198, 645, 647], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1025,  0.1273, -0.2527,  ...,  0.0779, -0.0969, -0.0799],
        [ 0.0581,  0.1373,  0.5332,  ..., -0.1774, -0.0686,  0.2404],
        [ 0.4570,  0.3174,  0.0621,  ..., -0.0775,  0.1647,  0.2905],
        ...,
        [ 0.2316, -0.1277,  0.5396,  ...,  0.1267,  0.3958,  0.1224],
        [ 0.5415,  0.0015,  0.2876,  ..., -0.3257,  0.2688,  0.1572],
        [ 0.1382, -0.1273,  0.1311,  ...,  0.1127,  0.0432, -0.1627]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 45, 182, 342, 694,  54, 368, 259, 520, 398, 314, 608, 561, 198, 520,
        144, 300, 600, 633, 647, 507, 422, 235, 111, 240, 620, 372, 695,  46,
        509,  77, 414, 314, 322, 724, 580, 567, 115, 499, 323, 479, 420, 314,
        134, 391, 153,   0, 467, 692, 720, 103, 315, 422, 151,  67,  33, 144,
        535, 432, 279, 416, 737, 378, 212,   9], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0909,  0.4548,  0.2803,  ..., -0.0114,  0.0770,  0.1310],
        [ 0.0731,  0.1830, -0.2839,  ...,  0.0849,  0.2583, -0.0605],
        [ 0.1046, -0.0410,  0.0524,  ...,  0.0320, -0.0485,  0.1356],
        ...,
        [ 0.2539,  0.1432, -0.0859,  ...,  0.0836, -0.3372, -0.1565],
        [ 0.4067,  0.0856, -0.0787,  ...,  0.0373, -0.0869,  0.3599],
        [ 0.2395,  0.0977,  0.1323,  ..., -0.3010,  0.3337,  0.0183]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([600, 356, 105, 157,  96, 340, 565, 167, 331, 482, 570, 155, 270, 700,
        360, 536, 591, 152, 614, 268, 147, 587, 505, 272, 744, 157, 150, 744,
        100, 492, 474, 203, 166, 352, 131, 153, 472, 170, 358, 544, 170, 539,
        314, 319,  77, 248,   0,  67,  52, 139, 100, 160, 382,  76, 675, 569,
        261, 343, 319, 288, 351, 648, 363, 315], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3733, -0.1321,  0.1094,  ...,  0.0114,  0.0477,  0.3022],
        [-0.0660, -0.0077,  0.0218,  ...,  0.2006, -0.0544,  0.1250],
        [ 0.2159, -0.1295, -0.3027,  ...,  0.1346, -0.3389, -0.1136],
        ...,
        [ 0.1591,  0.1699, -0.2124,  ..., -0.1760, -0.2217, -0.1327],
        [-0.2051, -0.0945, -0.3035,  ...,  0.0807,  0.8921, -0.2732],
        [ 0.3503, -0.0717,  0.0584,  ...,  0.2153,  0.2114,  0.2491]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([654, 335, 317, 423, 496,  46, 720, 642, 706, 478, 390, 329, 643, 623,
        700, 727,  50, 595, 166, 262, 254, 362,  45, 729, 147, 367, 590, 409,
         88,  46, 455, 353, 539, 301,   9, 472, 203, 343, 434, 214,  27, 587,
        431, 360, 174,  13,  46,  24, 131, 452, 182, 493, 160, 708, 177, 101,
         45, 615, 393, 597, 366, 381, 399, 247], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 3.7061e-01, -4.9774e-02, -8.2886e-02,  ...,  2.4109e-02,
         -1.5247e-01, -2.8519e-02],
        [ 4.7266e-01,  5.9265e-02,  1.8591e-01,  ...,  2.6413e-02,
          3.6865e-01, -2.4155e-02],
        [ 1.5076e-01, -1.8970e-01,  4.9591e-02,  ..., -2.3584e-01,
         -2.0483e-01, -1.0547e-01],
        ...,
        [ 3.1763e-01, -8.8989e-02,  2.1936e-01,  ...,  1.7428e-04,
          1.3342e-01,  1.8738e-01],
        [ 3.1152e-01, -5.2582e-02,  1.1499e-01,  ..., -2.8076e-01,
          5.7800e-02,  2.2058e-01],
        [ 4.7852e-01,  1.8448e-02, -9.2773e-02,  ...,  1.0132e-01,
         -1.6907e-01,  2.6514e-01]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([617, 367, 110, 319, 167, 652, 429, 291, 501, 633, 289, 705, 355, 558,
        102, 390, 176,  33, 157, 541, 506, 685, 371,  55, 361, 294, 419, 206,
        378, 175,  48, 498, 670,  65,  54, 190, 113,  39, 734, 228, 201, 431,
        496, 213, 239, 339, 636, 496,  11, 429, 594, 540, 135, 588, 408, 414,
        187,  45, 165, 210, 269, 213, 647, 732], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2573,  0.0440, -0.2494,  ..., -0.0825, -0.0134, -0.1136],
        [ 0.0401,  0.3179, -0.0375,  ..., -0.2915,  0.0705, -0.0473],
        [ 0.4351, -0.0850, -0.1508,  ..., -0.0333, -0.0380,  0.4199],
        ...,
        [-0.0151, -0.0542, -0.1530,  ...,  0.0589,  0.2296, -0.0953],
        [ 0.1406, -0.1249,  0.1279,  ...,  0.1506,  0.0479, -0.1431],
        [ 0.2529, -0.0429, -0.2230,  ...,  0.2374,  0.1075, -0.2224]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 88, 507, 127, 472, 633, 173, 402, 506, 353, 104, 364, 247, 608, 434,
        690, 353, 248, 340, 361, 458,  90, 653, 578, 320, 687, 724, 132, 361,
        160,  98, 607, 101, 743, 336, 312,  25, 732, 367, 120,  40, 233,  89,
        284, 335, 335, 218, 314,  63,  72, 481, 314, 595, 517, 213,  76, 727,
        666, 312, 121, 151, 427,  66, 529, 479], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1361,  0.0595, -0.1320,  ..., -0.0955, -0.2255, -0.0281],
        [ 0.2229, -0.0608, -0.0036,  ..., -0.0428,  0.3176, -0.0474],
        [ 0.0279, -0.1743,  0.2920,  ...,  0.0675, -0.0518, -0.2111],
        ...,
        [-0.3022,  0.0892,  0.2568,  ...,  0.1777,  0.2644,  0.1536],
        [ 0.2808, -0.3313, -0.3813,  ..., -0.0087, -0.2520,  0.0660],
        [ 0.2479, -0.0102,  0.1387,  ...,  0.1434, -0.2251, -0.3606]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([472, 424, 597, 609,  79, 643, 739, 319,  49, 390, 137, 513,  41,  46,
        120, 524, 729, 229, 109, 597, 131, 529, 353, 201, 593, 175, 681, 414,
        638, 578, 704, 693, 101,  52, 132, 288, 306, 601, 344, 227, 417,  98,
        602, 678, 308, 541, 133, 267, 257, 650, 424, 109, 492, 121,   0,  60,
        191, 315, 742, 398, 629,  54, 578,  13], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0955,  0.1781,  0.2632,  ...,  0.1075,  0.0712,  0.2003],
        [ 0.1382,  0.2737, -0.0847,  ..., -0.0631,  0.4968,  0.1470],
        [ 0.4612,  0.1508, -0.2932,  ...,  0.0576, -0.3215, -0.0305],
        ...,
        [ 0.1320, -0.4187,  0.1847,  ..., -0.2140,  0.4766,  0.1740],
        [ 0.4180,  0.1647, -0.1698,  ...,  0.0984,  0.0114,  0.2502],
        [ 0.0614, -0.2629,  0.2893,  ...,  0.0997,  0.0648,  0.0355]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([651,  77, 105,  86, 443, 389, 725, 122, 159, 637, 260, 592,  12, 350,
        537, 654, 402,  59, 739,  54, 392, 178, 299, 400, 516, 480,   2, 400,
        305, 228, 647, 687, 459, 416, 584, 163, 415, 205, 364, 587, 664, 121,
        156, 406, 355, 671, 673, 405,  26, 499, 407, 240, 162, 208, 714, 486,
        670, 513, 715, 367, 133,  98, 362, 212], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1558,  0.3418, -0.1197,  ...,  0.0444,  0.0282,  0.0653],
        [ 0.4578,  0.3171,  0.0505,  ..., -0.0682,  0.1610,  0.2957],
        [ 0.2255, -0.1145, -0.2952,  ...,  0.1394, -0.3469, -0.1105],
        ...,
        [-0.0331,  0.4854, -0.2974,  ...,  0.1664,  0.1196,  0.1865],
        [ 0.1002,  0.1987, -0.2059,  ...,  0.1254,  0.0291,  0.0874],
        [ 0.4651,  0.0938, -0.0451,  ...,  0.0383,  0.0019,  0.2759]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([252,  18, 108, 474,  70, 500, 320, 306, 131, 500, 131, 133, 700, 537,
        299, 651, 122, 166, 513,  74, 147, 602, 701,  36, 366, 554, 644, 103,
        513,  53, 343, 587, 427, 428, 283, 436,  53, 420, 153, 597, 434, 642,
        152,  93,  54, 432, 505, 553, 556, 392, 459, 402, 411, 293, 336, 597,
        173, 226, 379, 411, 213, 147,  91, 158], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2332, -0.0297, -0.2401,  ...,  0.3489,  0.0257,  0.1033],
        [ 0.6299,  0.3284,  0.1587,  ...,  0.1461,  0.0010,  0.0346],
        [ 0.3047,  0.2739,  0.2913,  ...,  0.1000, -0.2253,  0.0613],
        ...,
        [ 0.1188,  0.2180,  0.0361,  ...,  0.4165,  0.1749, -0.0119],
        [ 0.2272, -0.3843, -0.0762,  ..., -0.0136,  0.1180,  0.1390],
        [ 0.1085, -0.0009,  0.0726,  ..., -0.0067, -0.0443,  0.0906]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([333, 740, 414,   9, 100, 660, 262, 209,   7, 648, 395, 637,  46, 515,
        481, 408, 528,  13, 675, 697, 748, 545, 310, 469, 373,  92, 104, 190,
        540, 392, 299, 105, 708, 106,  47, 625,  98, 214, 369, 385, 581, 742,
        749, 165, 642, 307, 636,  72,  25,  93, 318, 701, 191, 703, 292, 102,
        391, 678, 286, 643, 177, 579,  14, 186], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3499, -0.1115, -0.1691,  ..., -0.0906, -0.0410, -0.0811],
        [ 0.2433, -0.1462,  0.2190,  ...,  0.1882,  0.1696,  0.1615],
        [ 0.3000,  0.0091,  0.1218,  ...,  0.0628,  0.4099,  0.2198],
        ...,
        [ 0.3940,  0.2676, -0.0367,  ...,  0.1541,  0.0182, -0.0548],
        [ 0.1774,  0.0285, -0.3992,  ..., -0.1331, -0.0939,  0.0279],
        [ 0.5854,  0.0892,  0.5049,  ..., -0.1292,  0.0082,  0.0753]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([298, 368, 316, 463, 577, 424, 748, 589, 648, 125, 446,  30, 694, 381,
         39, 206, 305, 703,  96, 110, 470, 128, 398, 426, 468, 225, 167, 287,
        526, 245,  46, 609, 172,  14, 565, 330, 210, 438, 417, 611, 491,  33,
        576, 541, 548, 136, 336, 209,  50, 573, 708, 320,  45, 439, 498, 674,
        494, 121, 421, 668, 112, 416, 655, 252], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2135,  0.3513, -0.1276,  ...,  0.1377,  0.2554,  0.0692],
        [ 0.4221,  0.2131,  0.1242,  ..., -0.2825,  0.3091, -0.1206],
        [ 0.2654,  0.0777, -0.0607,  ..., -0.0901,  0.0288,  0.1713],
        ...,
        [ 0.0348, -0.1225,  0.0641,  ...,  0.1873,  0.2510, -0.0345],
        [ 0.4353,  0.0997,  0.0787,  ..., -0.0941, -0.0274,  0.2527],
        [ 0.2407, -0.0324, -0.2627,  ...,  0.3545,  0.0400,  0.1113]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([602, 326, 199, 431, 630, 628, 204, 258, 121, 348, 364, 630, 394, 745,
        115, 251, 304, 157, 132,  36, 590, 342, 709, 696,  44,   6, 400, 130,
        478, 151, 467, 147, 637, 677, 539,  61, 167, 138, 209, 745,  98, 389,
        660, 282, 342,  25, 503, 350, 359, 314, 161, 639, 182, 239,  18, 511,
         89, 746, 416, 109, 267, 366, 468, 416], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0065, -0.2227,  0.4189,  ..., -0.0440,  0.2479,  0.1740],
        [ 0.0626,  0.1600,  0.1194,  ..., -0.1047,  0.1603, -0.0453],
        [ 0.3015,  0.0219,  0.3623,  ...,  0.0823, -0.5195,  0.0309],
        ...,
        [ 0.4666, -0.2122,  0.2393,  ...,  0.0467, -0.1671,  0.2286],
        [ 0.0136, -0.0764, -0.0930,  ..., -0.2744, -0.1027, -0.0778],
        [ 0.0384, -0.1086,  0.0524,  ...,  0.1846,  0.2515, -0.0347]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([594, 599, 154, 616, 359, 247, 411, 267, 608, 385, 407,  87, 131, 748,
         98, 273, 397, 173, 146, 284, 331, 382, 121, 584, 720, 147, 479, 308,
        391, 695, 476, 318, 531, 378, 647, 727, 528, 231, 678, 623, 572, 342,
         44, 513, 614, 691, 109, 104, 119, 379,  33, 133,  26, 366, 629, 237,
         86, 433, 613, 268, 255,  97,  79, 408], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1414,  0.3247,  0.3889,  ...,  0.1885, -0.4807,  0.1636],
        [ 0.0277,  0.0857,  0.0191,  ...,  0.1294, -0.1267,  0.0294],
        [ 0.3569,  0.2676,  0.2571,  ...,  0.0198,  0.2072,  0.0645],
        ...,
        [ 0.2090, -0.0703,  0.2338,  ..., -0.0396, -0.0243,  0.0353],
        [ 0.5513, -0.1527,  0.2290,  ..., -0.1333, -0.0065,  0.2751],
        [-0.1567,  0.3860,  0.2837,  ..., -0.0938, -0.1783,  0.2247]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([461,  84, 402, 234, 111, 695, 237, 540,  96,  44,  25, 293, 128, 511,
        165, 507, 137, 675, 419, 635, 239, 340, 520, 327, 708, 446, 132, 505,
        424,  48, 354, 327, 280, 221,  96, 335, 470, 114, 533, 575, 667, 359,
        393, 425, 416, 167, 729, 327, 746, 266, 136, 212,   7, 223, 450, 440,
        262, 580,  32,  68, 701, 385, 190, 405], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4663,  0.3955, -0.0776,  ...,  0.2163,  0.1750,  0.1713],
        [ 0.0560,  0.3630, -0.1157,  ...,  0.3958,  0.0093,  0.5015],
        [ 0.2644,  0.1788,  0.7876,  ...,  0.0833,  0.0318, -0.0146],
        ...,
        [ 0.1614, -0.3506, -0.0847,  ..., -0.4526,  0.0070,  0.1240],
        [ 0.1312,  0.0363,  0.0358,  ...,  0.3621, -0.1841, -0.2294],
        [ 0.0659,  0.0242,  0.2874,  ..., -0.1277, -0.3381,  0.2612]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 85, 272, 708, 366, 379, 343, 697, 503, 533, 657, 319, 528, 701, 681,
        354, 167, 255, 677, 739, 597, 650, 384, 731, 332, 662, 454, 424, 125,
        718, 309, 640,  26, 344, 411, 696, 177, 133, 699, 373, 470, 210, 479,
        191, 314, 410,  45, 480, 344, 319, 177, 692, 120, 597, 141, 303, 410,
        379, 470, 315, 121, 409, 424, 694, 531], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2366, -0.2308,  0.0101,  ...,  0.0964,  0.2096, -0.1462],
        [ 0.0493,  0.0632,  0.2488,  ..., -0.0533,  0.0903,  0.1284],
        [ 0.1700, -0.0714, -0.0667,  ..., -0.0392,  0.0437,  0.2385],
        ...,
        [ 0.1473,  0.3003, -0.1362,  ..., -0.0593,  0.4526,  0.1610],
        [ 0.1187, -0.0442,  0.3491,  ..., -0.2324,  0.3767,  0.0800],
        [ 0.2032,  0.0103,  0.0556,  ..., -0.1840,  0.1216, -0.0270]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([430, 534, 210, 484, 368, 593, 527, 172, 154, 113, 678,  76, 581, 616,
        187,   3,  63, 127,  44, 318, 215, 229, 594, 389, 236, 583,  48, 118,
        255, 717, 322, 585, 446, 596, 476, 617, 568, 284, 638, 329, 162, 343,
        316, 293, 454,  32, 609, 112, 610, 105,  48, 127, 133, 186,  46, 428,
        425, 197, 611, 667, 132, 373, 429, 622], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4207, -0.0731, -0.0373,  ..., -0.0768,  0.0293, -0.2042],
        [ 0.1339, -0.2781, -0.0051,  ...,  0.0025,  0.1812, -0.1119],
        [-0.1351,  0.0446,  0.2455,  ..., -0.1118, -0.0095,  0.3606],
        ...,
        [ 0.0689,  0.0969,  0.1137,  ..., -0.1637, -0.0045,  0.4226],
        [ 0.3032,  0.2524,  0.2097,  ...,  0.0275,  0.0608, -0.0500],
        [ 0.0727, -0.2766, -0.1553,  ..., -0.1493,  0.6406,  0.0711]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([372, 675, 646, 603, 495, 656, 152, 371, 367, 425, 675, 400, 363,  57,
        305, 403, 628, 256, 573, 290, 411, 653, 392, 576, 627, 594, 666, 702,
        375, 244,  41, 623, 218, 173,  16, 289,  36, 612, 344, 144, 114, 294,
        173, 134, 646, 745, 137, 290,   6, 408, 212, 194, 429, 132, 336, 623,
        522, 442, 414, 397,  63, 481, 255, 387], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3059,  0.2981,  0.0466,  ..., -0.0082, -0.3921,  0.3235],
        [ 0.2996,  0.1449, -0.1741,  ...,  0.0870,  0.0906,  0.0554],
        [ 0.1058,  0.1229, -0.0892,  ..., -0.3701, -0.3840, -0.1782],
        ...,
        [ 0.0203,  0.0728, -0.1127,  ...,  0.0342,  0.1453, -0.0947],
        [ 0.4790, -0.0840,  0.1843,  ..., -0.0266,  0.1874,  0.0068],
        [ 0.4526, -0.0440,  0.2590,  ..., -0.1814,  0.5000,  0.0436]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 45, 176, 391, 228, 647,  83, 279, 379, 166, 658, 104, 529, 256, 592,
        288,  46, 397, 531, 487, 640, 426, 233, 436, 636,  88, 164, 209, 543,
        732, 457, 511, 385, 222, 649, 518, 532,  72, 235, 407, 395, 259, 405,
        536, 210, 592, 127, 391, 400, 423,  54, 746, 586, 637, 168, 701, 247,
        266, 129, 593,  25, 588, 104, 724, 376], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.1246,  0.3594,  0.2937,  ..., -0.0208,  0.1384,  0.2014],
        [ 0.0804, -0.2085, -0.3247,  ..., -0.1633,  0.1171, -0.0641],
        [ 0.5332,  0.1091,  0.1163,  ..., -0.0088, -0.0298, -0.0626],
        ...,
        [ 0.4832,  0.2258,  0.1586,  ...,  0.0260, -0.2373,  0.2100],
        [-0.3611,  0.1685,  0.1884,  ..., -0.2362,  0.2551,  0.1469],
        [ 0.4072,  0.1796,  0.0335,  ...,  0.1477,  0.0353,  0.1190]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([176, 177, 373, 259, 222, 600,   1, 282, 252, 319, 415, 620, 152, 167,
        147, 387, 581, 636, 136, 602, 498, 560,  63,  92, 457, 151, 353, 284,
        213, 292, 154, 575, 167, 183, 118, 518, 560, 735,  90, 251, 244, 296,
        128, 414, 199, 470, 127, 603, 488, 140, 178, 201, 578, 646, 744,  44,
         67, 467, 481, 446, 648, 725, 391, 368], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0805, -0.2084, -0.3296,  ..., -0.1621,  0.1169, -0.0648],
        [ 0.1292,  0.4531, -0.0412,  ..., -0.1514,  0.1299,  0.2856],
        [ 0.0677,  0.0860,  0.1038,  ..., -0.1575,  0.0046,  0.4070],
        ...,
        [ 0.0376,  0.2200, -0.0087,  ..., -0.0529, -0.2125,  0.4988],
        [ 0.5273,  0.1110,  0.1141,  ..., -0.0112, -0.0382, -0.0749],
        [ 0.3811,  0.1843,  0.1177,  ..., -0.2849,  0.3147, -0.1584]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([465, 388, 119, 614,  77, 344, 452, 593, 425, 409, 172, 339, 429,  57,
         45, 105,  37, 343, 497, 105, 287, 602, 421, 501, 658, 226, 317, 407,
        399, 509, 244,  23, 580, 111, 167, 386,  30, 480, 715,  70, 387, 344,
        479, 184, 344, 243, 246, 600, 594, 687, 198, 575, 329,  70,  72, 598,
         27, 633, 475, 450, 513, 597, 590, 403], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1530,  0.2766, -0.2139,  ..., -0.1288,  0.1465,  0.1638],
        [ 0.4292, -0.0026, -0.4043,  ..., -0.0795, -0.0620,  0.0132],
        [ 0.3333,  0.1311,  0.0294,  ...,  0.0975,  0.1565, -0.0404],
        ...,
        [ 0.5098,  0.1328, -0.2010,  ...,  0.0349, -0.3254,  0.0356],
        [ 0.5029,  0.1044,  0.1131,  ...,  0.3354, -0.0771, -0.0514],
        [ 0.1877,  0.2412,  0.0156,  ..., -0.0938,  0.0900,  0.2517]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([140, 346, 557,  53,  26, 729, 483,  51, 227, 434, 537, 104, 227,  14,
         77, 482, 179, 288, 295, 738,  46, 407, 366, 386, 140, 645, 142, 166,
        395, 249, 173,  72, 366,   1, 347, 221, 675, 173, 284, 446, 480, 301,
        699, 313, 255, 189, 203, 714, 111, 381, 305,  85, 735, 701, 425, 248,
         33, 528, 306, 185, 147, 554,  44, 119], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0570,  0.2810, -0.2054,  ...,  0.0634, -0.0904, -0.0869],
        [-0.0693,  0.0265,  0.1128,  ...,  0.1667, -0.0368, -0.1317],
        [ 0.4216, -0.0230,  0.1836,  ..., -0.0106,  0.0218,  0.2057],
        ...,
        [ 0.2979, -0.1312, -0.0648,  ...,  0.0143,  0.0751, -0.0357],
        [ 0.8081, -0.0207,  0.2153,  ...,  0.0952,  0.1920,  0.0406],
        [ 0.3318,  0.1318,  0.0364,  ...,  0.1027,  0.1625, -0.0387]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([270, 296, 319,  26,  63, 397, 343, 734, 589, 323, 308, 373, 630, 600,
        649, 318, 131, 606,   6, 306, 177, 338, 310, 488, 306, 248, 347, 180,
        674, 393, 213, 477, 505, 352, 651, 586, 601, 624, 361, 277, 212, 426,
        599, 645,  89, 660, 171, 141,  70, 201,  57, 297,  85,  80,  51, 215,
        520, 543,  67, 618, 137, 336, 479, 365], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3381,  0.0029,  0.0947,  ..., -0.1942,  0.0725,  0.2446],
        [ 0.1980, -0.0662,  0.3286,  ...,  0.0769,  0.2625, -0.0507],
        [ 0.2279,  0.2830, -0.0281,  ...,  0.0173,  0.3801, -0.1561],
        ...,
        [ 0.4629,  0.1665,  0.0473,  ...,  0.0014, -0.1567,  0.2061],
        [ 0.2249, -0.0552,  0.1394,  ...,  0.1155, -0.2198, -0.3665],
        [ 0.2445, -0.3435,  0.0302,  ...,  0.1853,  0.0548,  0.3218]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([366, 105, 221, 376, 661,  73, 522, 262, 265, 208, 349, 247, 361, 747,
        533, 626, 137, 368, 427, 420, 481, 187, 670, 479, 714, 123, 667, 143,
        362, 115, 630,  67, 678, 704,  63, 104, 452, 158, 157, 597,  37, 167,
        417, 736, 486, 135, 179, 486, 114, 700, 169, 376, 691, 544, 650, 305,
         41, 407, 141, 391, 284,   1, 165,  70], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4890, -0.1591,  0.2271,  ...,  0.1247, -0.1628,  0.2065],
        [ 0.2708, -0.0600, -0.2854,  ...,  0.1396, -0.3701, -0.0950],
        [ 0.2346, -0.0386,  0.2576,  ...,  0.0709,  0.1328, -0.0211],
        ...,
        [ 0.1896, -0.0883,  0.4360,  ..., -0.0383, -0.0258, -0.2231],
        [ 0.0981,  0.1655,  0.1159,  ...,  0.0631,  0.0995,  0.0801],
        [ 0.0433, -0.0991,  0.3005,  ...,  0.0638,  0.0297, -0.1526]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 63, 311, 699, 678, 286, 395, 154, 250, 580,  63, 118, 198, 168, 266,
        545, 295, 360, 180, 601, 401, 121, 727, 258, 314, 379, 375, 135, 199,
        101, 577, 446,  67, 369, 180,  77, 708, 357, 391, 617,   6, 741, 299,
         59, 327, 442, 589,  57, 150, 250, 650, 706, 706,  93, 566, 528, 289,
        674, 144, 233, 605, 340, 536, 425, 215], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1753,  0.4155,  0.4868,  ...,  0.1328, -0.1907,  0.4419],
        [ 0.5151,  0.1747,  0.1410,  ...,  0.0537,  0.1465,  0.2203],
        [ 0.3318,  0.2737,  0.1376,  ...,  0.1392,  0.0552,  0.2109],
        ...,
        [ 0.4412,  0.1666,  0.2566,  ...,  0.0901,  0.1398,  0.0686],
        [ 0.4966, -0.0583,  0.7314,  ...,  0.1753, -0.0333,  0.1903],
        [ 0.0441,  0.1265, -0.0018,  ...,  0.0570,  0.3281,  0.2664]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 79, 398, 416,  17, 507, 618, 547, 149, 327, 356, 290, 136, 136, 160,
        213,  11, 598, 296, 122, 497, 185, 176, 640,  57, 148, 433, 362,  76,
        573, 730, 149, 411, 332, 648, 180, 112, 506,  46, 587, 182, 556, 668,
        141, 677, 527, 677, 385, 740,  63, 180, 678, 575, 307, 361, 221, 694,
        375, 555, 120, 615, 212,  42, 554,  97], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5796, -0.1665,  0.2363,  ..., -0.2303, -0.0436,  0.3713],
        [ 0.5430,  0.0469, -0.1125,  ...,  0.0425,  0.2598, -0.1536],
        [ 0.0881,  0.0162, -0.0584,  ...,  0.1912,  0.2222, -0.0042],
        ...,
        [ 0.3809, -0.0899,  0.1154,  ...,  0.0156,  0.0857, -0.1593],
        [ 0.3252, -0.1327, -0.0769,  ...,  0.0108,  0.0822, -0.0313],
        [ 0.2172, -0.0854,  0.2325,  ..., -0.0129, -0.0459,  0.0140]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([172, 185, 147,  47, 116, 660, 191, 414, 695, 252, 616, 315,  67, 136,
        547, 173, 435, 589,  44, 111, 162,  63, 520, 293,  67, 372, 701, 155,
         52, 474, 109, 613,  51,   6,   0, 688, 165, 569, 651,  96, 442, 678,
        403, 132, 524, 630, 306, 446, 213, 212, 440,  59, 167, 258, 597, 258,
        691, 671, 284, 721,  97, 233, 268, 364], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.2465,  0.0846,  0.1366,  ...,  0.1052, -0.3047,  0.0311],
        [ 0.3528,  0.0718,  0.3621,  ..., -0.1736, -0.1393,  0.0873],
        [ 0.0963,  0.1707, -0.0086,  ...,  0.3352,  0.2878,  0.0059],
        ...,
        [ 0.4819,  0.3689, -0.0093,  ...,  0.1877,  0.2051, -0.0878],
        [ 0.5757, -0.4026, -0.0113,  ...,  0.3887, -0.0473,  0.5371],
        [ 0.0891, -0.0920, -0.0223,  ...,  0.0546,  0.2350,  0.0728]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([  6, 137, 546, 221, 315, 211, 365,  39, 237, 496, 251, 327, 318, 713,
        115, 174, 631, 382, 153, 462,  93, 155,  11,   6, 289, 101, 167,  89,
        154, 293, 666, 495, 269, 702, 411, 747, 226, 184, 185, 133, 301, 146,
        426, 742, 133, 511, 235, 633, 143, 594,  44, 516, 476,  82, 261, 347,
        376,  50, 167, 226, 733, 135, 517, 628], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1017,  0.0460, -0.0218,  ..., -0.0198,  0.1411, -0.0477],
        [-0.1453,  0.2065, -0.0006,  ...,  0.1118,  0.4497,  0.1011],
        [ 0.1050,  0.4316,  0.4082,  ...,  0.2422,  0.2861,  0.1869],
        ...,
        [-0.1060,  0.1099,  0.2166,  ...,  0.2502, -0.2321,  0.2849],
        [ 0.1284,  0.0471,  0.1584,  ...,  0.0500, -0.0794,  0.0618],
        [ 0.3369, -0.0249,  0.1747,  ..., -0.0133,  0.1738, -0.0379]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([730, 274, 639, 268, 746, 571, 386, 272, 748, 748,   0, 695,  80, 679,
         87, 136, 345, 326, 429, 363, 577, 343, 540, 544, 147, 141,  66,  17,
        454, 349, 691, 339, 147, 305, 470, 586, 227,  74, 455,  33, 173, 297,
        708, 436, 147, 369, 588, 361, 330, 351,  47,  77, 684, 403, 198, 748,
        365, 481,  86, 292, 565, 312, 374, 478], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.6665,  0.2050, -0.3430,  ..., -0.0469, -0.2374,  0.1758],
        [ 0.2133,  0.0586,  0.2021,  ...,  0.0971, -0.3076,  0.1195],
        [ 0.3118, -0.0153, -0.5039,  ...,  0.0318, -0.0677,  0.0075],
        ...,
        [ 0.2693,  0.3528,  0.0148,  ...,  0.1991,  0.3174,  0.0781],
        [ 0.6348, -0.0240,  0.3452,  ..., -0.1390, -0.5986, -0.1093],
        [ 0.1493, -0.1461, -0.0861,  ...,  0.0475,  0.2427,  0.0075]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
2025-04-03 13:08:02,749 transreid.train INFO: Epoch[1] Iteration[50/203] Loss: 8.602, Base Lr: 7.80e-05
label tensor([512, 280, 578, 708, 665,  28, 371, 425, 257, 319, 710, 745, 301, 152,
        717, 584, 350, 673,   7, 726, 396, 308, 635, 191,  33, 211, 114, 481,
        380, 187, 129, 717, 171, 217, 250, 376, 259, 309, 361, 499, 169,  54,
        126, 336, 587, 503, 398,  89, 137, 626, 496, 310,   6, 404,  89, 239,
        397, 112,  67,  98, 647, 454, 464, 425], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2419,  0.0010, -0.0007,  ..., -0.2480, -0.0547,  0.0532],
        [-0.1021,  0.1611,  0.4285,  ...,  0.0469, -0.1510,  0.1040],
        [ 0.3752,  0.1372, -0.1179,  ...,  0.1155,  0.0387,  0.2472],
        ...,
        [ 0.0427, -0.1516, -0.1133,  ...,  0.0667,  0.2168, -0.1465],
        [ 0.0646,  0.0888, -0.3750,  ...,  0.0774, -0.0300, -0.0281],
        [ 0.4946, -0.1261,  0.6997,  ...,  0.2015, -0.0012,  0.2166]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([525, 243, 471, 371, 138, 707, 201,  76, 658,   6,  61,   6, 272, 195,
        322, 261, 327, 385, 428, 327, 592, 182, 483, 160, 140, 250, 277, 628,
        416, 315, 299, 415, 332, 708, 742,  72, 359, 218, 497, 504, 741, 432,
        482, 612, 363, 714, 437, 639, 157, 233,  30, 129, 416, 566, 419,  65,
        261,   1,  70,  98, 558, 389, 344, 419], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.2507,  0.3716,  0.0847,  ...,  0.1102, -0.0109,  0.1357],
        [ 0.3115,  0.2128,  0.1864,  ...,  0.0286,  0.2350,  0.1730],
        [ 0.5137,  0.3689, -0.2030,  ...,  0.1283, -0.1294, -0.0228],
        ...,
        [-0.0860, -0.4478,  0.2632,  ..., -0.0736,  0.0922, -0.2893],
        [ 0.0773,  0.2085, -0.2947,  ..., -0.1062, -0.0487,  0.2825],
        [ 0.0385,  0.1417, -0.1981,  ..., -0.0479,  0.5200,  0.2812]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([313, 601,   0, 315, 724, 416, 128, 135, 650, 397, 373, 500, 141, 255,
        414, 331,  65,  93,  67,  50,  53, 376, 147, 160, 460,  11, 318, 338,
        260, 695, 108,  46,  54, 115, 131, 611, 272, 212, 185, 717, 735, 128,
         19, 312,  48,  92,  33,  95, 335, 600, 635, 385, 641, 548, 503, 103,
        161, 403, 122,  91, 115, 487, 519, 374], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2218, -0.1416, -0.0610,  ..., -0.2188,  0.3193,  0.1013],
        [ 0.1869, -0.1046, -0.3706,  ..., -0.0598, -0.0939,  0.2820],
        [ 0.3352,  0.1881, -0.0438,  ...,  0.0933,  0.4143, -0.1831],
        ...,
        [ 0.3472,  0.0046,  0.4724,  ..., -0.1328, -0.2340,  0.3362],
        [ 0.2683, -0.0296,  0.0641,  ..., -0.1248,  0.0789, -0.2832],
        [ 0.6328, -0.0075,  0.3657,  ..., -0.1415, -0.5942, -0.1005]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 70, 241, 407, 619, 207, 113,  53,   6, 430, 320, 688,  95, 460, 272,
        474, 605, 197, 383, 679, 151, 659,  96, 677, 198, 266, 289, 210, 136,
        207, 327, 182, 104, 331, 414, 212, 530, 380, 323, 117, 266, 384,  59,
        378, 347, 614, 205, 511, 176, 102, 554, 368, 285,  72, 412, 708, 113,
        414, 503, 471, 495, 617, 112, 263, 653], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0395, -0.0945,  0.2949,  ...,  0.1255, -0.0817, -0.0500],
        [ 0.3889, -0.3586, -0.2263,  ..., -0.1400,  0.0188,  0.2247],
        [ 0.3003,  0.0768,  0.1451,  ..., -0.1898, -0.0193,  0.0825],
        ...,
        [ 0.0640, -0.2603,  0.2646,  ...,  0.1571,  0.5273,  0.0907],
        [ 0.6509, -0.1832,  0.0315,  ..., -0.0906,  0.1573,  0.5029],
        [ 0.2839,  0.1410, -0.2664,  ..., -0.0042,  0.1768, -0.2437]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([730, 541, 204, 428, 256, 488, 132, 206, 162,  97, 418, 343, 749, 661,
        257, 341, 697, 226, 231, 741, 325, 377, 565,  76, 264, 459, 708, 486,
        389, 645,   6, 301,  25, 126, 607, 653, 616, 571, 721, 207, 693, 473,
        489, 653,  93, 518, 550, 436, 637, 177, 348, 649, 511, 576, 403, 134,
        440,  13, 316, 586, 491, 608, 486, 429], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 6.6748e-01,  2.9004e-01, -4.1528e-01,  ..., -5.5054e-02,
         -1.5271e-01,  2.6831e-01],
        [ 3.2764e-01,  3.8696e-01, -9.3384e-02,  ...,  6.7627e-02,
          4.9133e-02,  2.7173e-01],
        [ 4.9512e-01, -9.2041e-02,  1.6113e-01,  ...,  2.2522e-01,
         -3.4155e-01,  2.8345e-01],
        ...,
        [ 7.4524e-02,  1.2720e-01,  4.5166e-01,  ...,  2.4078e-02,
          1.5308e-01,  3.1152e-01],
        [ 2.6367e-01, -1.7738e-04, -1.0541e-01,  ...,  2.1545e-01,
          1.4722e-01,  1.0535e-01],
        [ 3.3130e-01,  2.4927e-01,  2.2119e-01,  ...,  1.8969e-03,
          5.0446e-02, -6.4819e-02]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([135, 463, 387,  25, 189, 627, 745, 247, 266, 708, 386, 486, 120,  50,
        211, 576,  48, 633, 725, 368, 438, 475, 391, 511,  48, 563, 176, 440,
        398, 724, 127, 318, 601, 149, 227, 224, 381, 597,  93, 584, 252, 168,
        233, 364, 167, 299, 613, 322,  63, 173, 112, 141, 155, 166, 318, 488,
         91, 581,  12, 316, 367,  12, 332, 522], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.1562,  0.0941,  0.2072,  ...,  0.2705, -0.2086,  0.2915],
        [-0.0210, -0.1218,  0.2415,  ..., -0.0174,  0.1609, -0.0990],
        [ 0.4150,  0.0962,  0.3459,  ..., -0.0255,  0.3889,  0.0630],
        ...,
        [ 0.1395, -0.2681, -0.4761,  ...,  0.0456, -0.5435,  0.0067],
        [ 0.0544,  0.1575,  0.3708,  ..., -0.0628,  0.2742,  0.3293],
        [-0.0224,  0.4922,  0.2466,  ..., -0.0764,  0.2612,  0.2002]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([603,  12, 475, 720, 213, 288, 120, 193, 343, 319,  48,  44, 113,  88,
        434, 401, 414, 568, 695, 321, 295, 257, 594,  30, 120, 738, 609, 376,
        419, 717, 508, 409, 104, 145, 447, 526, 661, 533, 432, 262,  18, 370,
         66, 318,  87, 613, 418, 391,  33,  82, 295, 246, 436, 565, 120, 361,
        199, 104, 343, 294, 164, 171, 425,  93], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0811,  0.1367,  0.2118,  ...,  0.1527,  0.0809, -0.0454],
        [ 0.1467, -0.2683, -0.4783,  ...,  0.0462, -0.5425,  0.0071],
        [ 0.2220,  0.3413,  0.2332,  ..., -0.3149,  0.0871, -0.0665],
        ...,
        [ 0.3787,  0.1766,  0.1555,  ...,  0.0591,  0.1078,  0.2773],
        [ 0.4565, -0.1481,  0.6719,  ...,  0.1606,  0.0160,  0.2111],
        [-0.1912,  0.0613,  0.2874,  ...,  0.1083,  0.1121,  0.1317]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([507,  78, 107, 669, 362, 370, 527, 256,  26, 154, 389, 395,   7, 513,
        153, 440,  72, 748, 382, 609, 211,  24, 246, 139, 392, 609, 391, 287,
         66, 248, 554, 510, 557, 486, 400, 723, 411, 408, 417, 503, 386, 321,
        699, 237, 146, 618,  33, 154, 585, 344,  56, 601, 592, 565, 375, 150,
        676, 186, 349, 661, 233, 375, 647, 550], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1752, -0.1255,  0.0475,  ..., -0.0490,  0.3420, -0.1108],
        [ 0.2078,  0.0936,  0.0940,  ...,  0.0186,  0.1389,  0.0668],
        [ 0.0429,  0.0166,  0.4375,  ..., -0.2534,  0.0516,  0.2454],
        ...,
        [ 0.4226,  0.1760, -0.0900,  ..., -0.1915,  0.0999, -0.0201],
        [ 0.2089, -0.0151,  0.2798,  ...,  0.1888,  0.0654, -0.0522],
        [-0.1790,  0.1425,  0.3354,  ..., -0.3206,  0.5132,  0.1448]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([280, 234, 495, 630, 165, 246,  32, 611,  47, 253, 284, 520,  98, 114,
        441,  57, 723,  46, 303, 587, 434,  15,  67, 308, 212, 292,  59, 151,
        529,  51, 399, 584, 748, 345, 152,  72, 165, 373, 600, 379, 649, 737,
        391,  44,  76,   2, 136, 518, 429, 504, 637, 314, 308, 315, 264, 414,
        446, 690, 340, 154,  50,  54, 592, 545], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0609,  0.1884,  0.4302,  ...,  0.0834, -0.1390,  0.1032],
        [ 0.0331,  0.1591,  0.1465,  ...,  0.0896,  0.2330, -0.0073],
        [ 0.1617,  0.0578, -0.3699,  ...,  0.4153,  0.0074, -0.1553],
        ...,
        [ 0.1432, -0.4094,  0.2065,  ..., -0.3918,  0.3057,  0.1678],
        [ 0.5947,  0.3464,  0.1713,  ..., -0.0392,  0.0670, -0.0609],
        [ 0.2805, -0.2517,  0.1698,  ..., -0.1486,  0.2878,  0.1570]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([131, 690, 338, 168, 686, 651, 304, 535,  76, 171, 505, 372, 594, 735,
        153, 167, 719, 497, 358, 217, 513,  21, 525, 163, 508, 376, 293, 329,
         72, 362, 327, 483, 385, 326, 325, 397, 390,  98, 158,  34, 171, 315,
         74,  46, 112, 709,  92, 346, 654,  17, 522, 120, 171,  25, 356, 498,
        479, 480, 356, 233, 219, 490, 177, 402], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 3.1836e-01,  2.2888e-01,  1.8143e-02,  ...,  7.8430e-02,
          9.0820e-02,  2.2644e-01],
        [ 1.3318e-01,  9.8206e-02, -2.0911e-01,  ...,  5.0201e-02,
          4.9477e-03,  2.7156e-04],
        [ 7.5806e-02, -1.5771e-01, -2.0740e-01,  ...,  3.4027e-02,
          2.1753e-01, -2.0422e-01],
        ...,
        [ 5.8258e-02, -2.3352e-01,  1.9913e-02,  ..., -1.2354e-01,
         -4.5563e-02,  2.3901e-01],
        [ 1.3232e-01,  4.8438e-01, -2.5070e-02,  ..., -1.5527e-01,
          1.4258e-01,  3.0615e-01],
        [ 2.7197e-01,  1.9800e-01,  7.7148e-01,  ...,  1.0754e-01,
          3.6377e-02,  1.0963e-02]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([383, 696, 365, 314, 694, 415, 485, 427, 324, 189, 434, 657, 302, 102,
         30, 717,   8,  33, 739, 526, 284, 643,  39, 745, 578, 134, 280, 306,
        301, 549, 167, 660, 422,  90, 113, 304, 498, 231, 708, 135, 143, 558,
        315, 510, 136, 468, 229, 429, 538, 587, 119, 302, 401, 710, 272, 115,
        731,  97,  98, 423, 580, 308, 442, 373], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2664, -0.1641,  0.0576,  ..., -0.1414, -0.2216, -0.0629],
        [ 0.0814, -0.0905,  0.0591,  ..., -0.1156,  0.0529, -0.2336],
        [ 0.1467, -0.2749,  0.0549,  ...,  0.1812,  0.0116,  0.2969],
        ...,
        [ 0.0646, -0.1061,  0.5015,  ...,  0.1177,  0.1211,  0.1198],
        [ 0.2869,  0.1179,  0.2012,  ..., -0.0769,  0.2842,  0.4712],
        [ 0.1667, -0.0424,  0.1885,  ..., -0.0825,  0.1021,  0.1864]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([624, 541, 656, 287, 494, 326, 355, 427, 651, 403, 747, 555, 162, 391,
        357, 292, 166, 162,  56,   7,  67, 611, 115, 227, 529, 153, 663, 478,
        375, 536, 314, 287, 286, 414, 685, 542, 428,  48, 272, 134, 713, 541,
        537, 615, 217, 114, 547,  96, 136, 705, 364, 398, 293, 309, 248, 101,
        383, 486, 320, 374,  33, 111, 293, 663], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3540, -0.2722, -0.4048,  ...,  0.3630, -0.2837, -0.2183],
        [ 0.3206,  0.5396, -0.3401,  ..., -0.0162,  0.0553,  0.1353],
        [ 0.0703,  0.3604,  0.0255,  ...,  0.0328,  0.0789, -0.2683],
        ...,
        [ 0.2939,  0.0970,  0.3020,  ..., -0.0016,  0.3181, -0.0329],
        [-0.1205,  0.1478,  0.7217,  ..., -0.2386,  0.1367, -0.0353],
        [ 0.6284,  0.1857,  0.1164,  ...,  0.0665, -0.1272,  0.1516]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([661, 714,  98, 305, 359, 197, 591, 135, 371, 525, 377, 293, 594, 531,
        402, 689, 521, 676, 748, 670, 342, 576, 256, 651, 563, 508, 141, 712,
        233, 238,  67, 416, 686, 173, 385, 332, 379, 202,  19, 344, 229,  30,
        380, 227, 608, 293, 718, 488, 429, 140,  67, 391, 474, 475,  30, 486,
        373, 136, 401,  72, 140, 270, 665, 223], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3259, -0.2288, -0.1482,  ..., -0.2900, -0.0098,  0.1971],
        [-0.0334,  0.3616, -0.1359,  ...,  0.0169, -0.0606,  0.2537],
        [-0.0427,  0.5405, -0.1971,  ...,  0.1526,  0.1010,  0.3159],
        ...,
        [ 0.4678,  0.0626,  0.2725,  ..., -0.2020,  0.0056,  0.1779],
        [ 0.3325, -0.2529,  0.2734,  ..., -0.0781,  0.0456, -0.1038],
        [ 0.7124, -0.1976,  0.5493,  ..., -0.3027, -0.1494, -0.0670]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 73, 632, 299, 709, 234,  88, 136, 298,  18, 411, 217, 104, 360, 232,
        129,  81, 421,  57, 702, 144, 404, 177, 456, 567,  57, 439, 746, 201,
        539,  51, 575, 140, 695, 367, 167,  39, 305, 178, 260, 663, 403,  25,
        620, 736, 597,  53, 129, 130, 166, 280, 596, 265, 407, 598, 421, 191,
        554, 615, 433, 652, 708, 400, 520, 357], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3318, -0.0767, -0.0157,  ...,  0.0492, -0.4221, -0.0100],
        [ 0.0736,  0.4434, -0.2590,  ...,  0.1360,  0.0366,  0.1707],
        [-0.1958, -0.0703,  0.3049,  ...,  0.0620,  0.1840,  0.0158],
        ...,
        [ 0.3813, -0.0677, -0.2302,  ..., -0.2308,  0.2136, -0.0448],
        [ 0.1495,  0.0456,  0.0259,  ..., -0.1605,  0.5947, -0.0533],
        [ 0.5469,  0.3657,  0.2979,  ...,  0.1313,  0.1626, -0.1403]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([383, 402, 130, 381, 361,  57,  98,  44, 528,   5, 620, 574, 255, 486,
        679, 649, 429, 186, 286,   9, 613, 386, 624, 542, 553, 327, 392, 366,
        223,  93, 588, 113, 148, 660, 463, 352, 104, 507, 705, 699, 165, 140,
        133, 600, 343, 712, 523, 328, 323, 244, 248, 114, 130, 563,  72, 292,
        137, 177, 385, 275, 748, 481,  89,  63], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2957, -0.2064,  0.0812,  ..., -0.1073, -0.2373, -0.0317],
        [ 0.2986,  0.1893,  0.7842,  ...,  0.0956,  0.0193, -0.0133],
        [ 0.2783,  0.1292,  0.3787,  ..., -0.0457,  0.2010,  0.2023],
        ...,
        [ 0.1107,  0.0334, -0.0920,  ...,  0.0766,  0.0722, -0.1243],
        [ 0.0968, -0.0395, -0.1810,  ...,  0.0508,  0.2393,  0.2561],
        [ 0.2321,  0.3904,  0.4949,  ...,  0.1486, -0.6201,  0.3083]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([332, 581, 514, 541, 472,  18, 646, 565, 639, 163, 341, 278, 158, 227,
        608, 591, 559, 389, 150, 213, 516, 420, 212, 196, 121, 649, 269, 617,
        578, 601, 659, 136, 476, 171,  37, 556, 147,  70, 422, 136, 501, 390,
        269,  98, 111,  30, 183, 313, 246, 198, 635, 289, 213, 488, 572, 177,
        356, 594, 109, 675, 277, 672, 567, 521], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0650,  0.2683,  0.2634,  ..., -0.1809,  0.2642,  0.3020],
        [ 0.3677,  0.0252,  0.1815,  ...,  0.0562, -0.0032,  0.1343],
        [ 0.0661, -0.1724,  0.0249,  ...,  0.3657,  0.3464,  0.1349],
        ...,
        [ 0.1638,  0.0903, -0.3005,  ...,  0.3091, -0.0256, -0.0205],
        [ 0.1054,  0.1153,  0.2086,  ...,  0.0123, -0.0873,  0.0063],
        [ 0.2245,  0.2749, -0.2184,  ..., -0.3694, -0.0551,  0.0992]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([715, 381, 134, 604, 334, 582,  44, 352,  77, 248, 115,  11,  18, 586,
        577, 400, 314, 312, 317, 332, 310, 101, 230, 477, 429, 386, 568, 496,
        436, 130, 210,  72, 162, 273, 297, 287, 379, 730, 592, 386, 182, 396,
        269, 579, 583, 139, 262, 634, 433, 607, 606, 643, 742, 483, 255, 573,
         94, 257, 522, 388, 357, 684, 578, 217], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0102,  0.1558, -0.1020,  ...,  0.0966, -0.1505,  0.1453],
        [ 0.1993, -0.0480,  0.3540,  ..., -0.0497,  0.1586, -0.0883],
        [ 0.4436,  0.2178,  0.4119,  ...,  0.3108,  0.0348,  0.0671],
        ...,
        [ 0.3159,  0.0950,  0.4453,  ...,  0.0515, -0.2759,  0.0643],
        [ 0.3447,  0.0471, -0.0146,  ...,  0.1492,  0.0807,  0.2173],
        [ 0.3767, -0.0582,  0.1656,  ..., -0.0931, -0.1367,  0.0054]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([737, 556, 416, 315, 556, 551,  18, 424,  21, 520, 649, 545, 312, 501,
        167, 204, 691, 630,  19, 416,  53, 383, 217, 713, 397, 129, 379, 221,
        257, 305, 671, 293, 411, 150, 637, 472, 401,  45, 362,  17, 557, 152,
        603, 467, 146,  92, 643, 301, 310, 573, 120, 657, 617,  46, 544, 677,
          7, 618, 579, 215, 647, 151,  30, 271], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3792, -0.1556,  0.0598,  ..., -0.1749,  0.0384, -0.0676],
        [ 0.5918,  0.1976, -0.0790,  ..., -0.0674, -0.0826,  0.1127],
        [ 0.1023, -0.0851, -0.0316,  ...,  0.2737,  0.1016,  0.0343],
        ...,
        [ 0.2603, -0.2064,  0.2075,  ..., -0.0900,  0.1677, -0.0234],
        [ 0.3594, -0.1357, -0.2620,  ..., -0.3899,  0.1945, -0.0265],
        [ 0.3340,  0.3567, -0.6704,  ..., -0.0471,  0.0789,  0.2520]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([167, 259, 424, 533, 289, 342, 533, 397, 383, 444, 647,  66, 630, 376,
        278, 443, 580, 218, 246, 711, 375, 500, 618, 620, 305, 484, 425,  76,
        274, 354, 591, 311, 584, 399, 485, 521, 496,  53, 124, 240, 167, 635,
        367, 153, 643,  95,  86, 238, 232, 591,  67, 503, 325, 122, 446, 741,
        534, 593, 324, 191, 511, 373, 133, 330], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1969,  0.0203, -0.1190,  ..., -0.1627,  0.2069,  0.1007],
        [ 0.0477, -0.1102, -0.0129,  ..., -0.3442,  0.2681, -0.2156],
        [ 0.0925,  0.3113, -0.3733,  ..., -0.0251,  0.1256,  0.3943],
        ...,
        [ 0.2224,  0.0334,  0.1935,  ..., -0.2028,  0.0620,  0.2159],
        [ 0.2430,  0.1841,  0.0487,  ...,  0.1188, -0.0696,  0.1740],
        [ 0.2329,  0.7031, -0.1963,  ..., -0.1411, -0.2357,  0.2001]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([746, 397, 616, 677, 315,  89,  88,  76,  45,  44, 194, 609, 725, 607,
        606, 306, 121, 689, 408, 493, 376, 293, 736, 632, 566,  30, 134, 639,
        207, 104, 665, 479, 444, 564, 347, 624,  63, 202, 104, 566, 749, 109,
        607, 364, 356, 194,   6, 384, 136,  93, 646, 415,  73, 594, 517, 314,
        221, 439, 524, 434, 659,  26, 382, 237], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1530,  0.2859, -0.0885,  ...,  0.0525, -0.0950,  0.3279],
        [ 0.0383,  0.2600,  0.4351,  ...,  0.0453,  0.1781,  0.3662],
        [ 0.0732, -0.0160,  0.1929,  ..., -0.0654, -0.1061, -0.0894],
        ...,
        [-0.0627,  0.2207,  0.0198,  ...,  0.2445,  0.1401, -0.5298],
        [ 0.1589,  0.0630, -0.0654,  ...,  0.1505,  0.0799, -0.1504],
        [ 0.4111,  0.4011,  0.1150,  ...,  0.0394,  0.1129,  0.2546]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 30, 317, 480, 152,  30, 347,  63,  81, 558, 523, 581, 600, 472, 181,
        226, 526, 487, 121, 584, 716, 250, 481, 141, 651, 302, 136,  92, 147,
        392, 343,  54, 391, 170, 172, 378, 204, 597, 167, 693,  76, 368,  48,
        301,  38, 184,   6, 103, 581, 736, 166, 155, 397, 579, 436, 201,  90,
        387, 301, 722, 642, 636, 378, 244, 579], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3452, -0.1371, -0.2661,  ..., -0.3977,  0.2062, -0.0318],
        [ 0.2278, -0.1091,  0.1545,  ..., -0.1904, -0.2108, -0.1692],
        [ 0.4243,  0.1118,  0.0298,  ...,  0.0136,  0.4214,  0.1687],
        ...,
        [ 0.2678,  0.1733, -0.1718,  ...,  0.1385, -0.2825, -0.0233],
        [ 0.2286, -0.0864,  0.1505,  ...,  0.1152,  0.0807, -0.1359],
        [ 0.3689,  0.0509, -0.1152,  ...,  0.2041, -0.0089,  0.0750]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([209, 285, 607, 628, 113, 180, 170, 666, 748, 717, 436, 385, 247, 714,
         67, 335, 112, 554, 658, 609, 251, 430,  69, 500, 123, 677, 429,   6,
        229, 130, 634, 513, 350, 414,  72,  63, 345, 161,   7, 634, 633, 541,
        617, 203,  88, 316, 335, 382, 116, 677, 224, 289, 489, 668, 397, 386,
        267,  72, 180,  97, 359, 483, 383, 105], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.2556,  0.1242,  0.3521,  ...,  0.1578,  0.2056,  0.2228],
        [ 0.6943,  0.1553, -0.0877,  ..., -0.1290, -0.2333,  0.0330],
        [ 0.3367,  0.0151,  0.0747,  ..., -0.1078,  0.0501, -0.1699],
        ...,
        [ 0.1669, -0.2839, -0.0933,  ..., -0.1230, -0.2686,  0.3271],
        [ 0.3433, -0.3159,  0.1393,  ..., -0.0330, -0.2883,  0.0255],
        [ 0.3206, -0.0235, -0.2722,  ...,  0.1401, -0.3694, -0.0792]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([335, 115, 523, 522, 579, 201, 668, 129, 487, 694, 630, 723,  97, 680,
         34, 149, 582, 392, 696, 437, 246, 124, 707, 515, 496, 231, 479,  70,
        275, 214, 511, 150, 571, 401,  46,  53, 197, 299, 715, 719,  76,  45,
        144, 368, 383,   0,  57, 102, 723, 542, 168, 375, 654, 521, 525, 363,
        259, 113, 132, 181, 610,  58, 391, 618], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3196,  0.2422,  0.2009,  ...,  0.0582,  0.1061, -0.0649],
        [ 0.2917,  0.1503, -0.1108,  ...,  0.0164,  0.0691,  0.0565],
        [-0.0894,  0.0500,  0.1298,  ...,  0.3887, -0.0206, -0.1208],
        ...,
        [ 0.5347, -0.1261,  0.6162,  ..., -0.0120,  0.0180, -0.0710],
        [ 0.5381,  0.1038,  0.1222,  ..., -0.0626, -0.0416, -0.1050],
        [ 0.1018, -0.0694, -0.7588,  ..., -0.2220,  0.0746, -0.0763]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([346, 379, 372, 556, 613, 701,  37, 626, 648, 114,  27, 372, 199,  81,
        371, 657, 656, 367, 469, 104, 115, 328,  10, 180, 630, 691, 305,  27,
        398, 209, 606, 384, 578, 507,  42, 661, 145,  54, 449, 693, 327, 194,
        289,  70,  93, 434, 322, 246, 218, 179, 105, 670, 709,  48, 672, 601,
        102, 578, 661, 635, 271, 308, 649, 620], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0121, -0.0107,  0.1451,  ...,  0.1486, -0.0668, -0.1754],
        [ 0.0144, -0.0182,  0.0055,  ..., -0.1078,  0.0640, -0.1608],
        [ 0.3506,  0.2754,  0.0136,  ..., -0.0268, -0.4905,  0.2681],
        ...,
        [ 0.1147, -0.1559,  0.5879,  ...,  0.1416,  0.1155,  0.0565],
        [ 0.4700, -0.0330,  0.1868,  ..., -0.1334,  0.3140, -0.0246],
        [ 0.2903,  0.2335,  0.1385,  ..., -0.2152,  0.2173,  0.0980]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 34,  46, 695, 212, 365, 650, 308, 160, 716, 398, 701, 372, 251, 363,
        359, 594, 545,  98, 650, 374,  27, 595, 329, 535, 446,  40, 486,  33,
        243, 560,  96, 440, 157,  30,  93, 412, 275, 351,  65, 390, 147, 632,
        192, 135, 217, 696,  50, 473, 123, 212, 241, 116, 601, 463, 495, 306,
        441, 295, 388, 366, 480, 244, 338, 284], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5625,  0.1364, -0.0739,  ...,  0.0923,  0.0092, -0.1711],
        [ 0.0086,  0.1196, -0.1653,  ..., -0.2222,  0.4463,  0.3123],
        [ 0.2590, -0.1909,  0.0039,  ..., -0.1571,  0.1375,  0.3210],
        ...,
        [ 0.2429, -0.1129,  0.1509,  ...,  0.1078,  0.0931, -0.1293],
        [ 0.0587, -0.1399, -0.2098,  ...,  0.0319,  0.2026, -0.2654],
        [ 0.1567,  0.2029,  0.0418,  ..., -0.0617,  0.0997,  0.0978]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([298, 329, 268,  94, 116, 111, 344, 276, 740,   0, 143, 136, 383,  96,
        299, 537,  45, 414, 608, 115, 402, 403,  46, 267, 282, 666, 398, 300,
        102, 436, 528, 186, 670, 219, 186,   0,  32, 703, 727,  27, 241, 480,
        361, 316, 467, 422, 688, 562, 179, 320, 398, 277, 248,  65, 335, 387,
        115, 332,  11, 153, 444,  45, 663, 499], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5161,  0.3948, -0.0466,  ...,  0.1064,  0.2908,  0.2690],
        [-0.1053,  0.0075, -0.0662,  ..., -0.1887, -0.1305, -0.0065],
        [ 0.5654, -0.4302,  0.0942,  ...,  0.3811, -0.1046,  0.4590],
        ...,
        [-0.1036,  0.3179,  0.3445,  ..., -0.1471,  0.1295,  0.2852],
        [ 0.5986,  0.3159,  0.0016,  ...,  0.0901, -0.1105,  0.1697],
        [ 0.1331, -0.2007, -0.2114,  ..., -0.1572, -0.4136,  0.1559]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([516, 133, 393, 226,   0, 178, 461, 152, 654, 460,  76, 211,   7, 605,
        572, 179, 243, 373, 197, 233, 144, 561,  22,  67, 718, 505, 371, 573,
         92,  98, 294,  53, 374, 630, 198, 426, 350, 507, 419, 404, 315,  79,
        578, 210, 149, 675,  57, 167, 693, 160,  67, 141, 587, 598, 194, 678,
        649, 147, 552, 474,  44, 587, 408, 290], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0437,  0.1827,  0.1056,  ..., -0.1348,  0.1234,  0.1561],
        [ 0.2339,  0.1836,  0.0310,  ...,  0.1094, -0.0994,  0.1688],
        [ 0.3438,  0.1327, -0.0790,  ...,  0.1737,  0.1226,  0.0831],
        ...,
        [ 0.1866,  0.1947,  0.0087,  ...,  0.0198, -0.0185, -0.0374],
        [-0.2681,  0.2388, -0.0323,  ..., -0.0582, -0.0963,  0.0499],
        [ 0.4819, -0.0729,  0.0759,  ...,  0.0893, -0.0795,  0.0367]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 46, 166, 526, 374, 353, 531, 682, 136, 144, 688, 721, 364,  45, 701,
        526, 146, 392, 168,  50, 174, 433, 702, 157, 146, 486, 129, 104, 533,
        314, 593, 747,  27,  61, 134,  48, 151, 442, 529, 104, 645, 149, 558,
        533, 315, 467, 182, 141, 696, 714, 638, 105, 387, 608, 632, 330, 414,
        630, 183, 741, 721, 673, 324,  44, 637], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0056,  0.0912, -0.1517,  ..., -0.2313,  0.4519,  0.3093],
        [ 0.5747,  0.1482,  0.0781,  ..., -0.0229,  0.2085,  0.2179],
        [ 0.5078, -0.1902,  0.0302,  ...,  0.1797, -0.1908,  0.1351],
        ...,
        [ 0.2795,  0.4541, -0.0131,  ..., -0.0317,  0.3203,  0.3125],
        [ 0.8325, -0.2103,  0.1110,  ...,  0.1799,  0.1675, -0.0569],
        [ 0.2184, -0.4241,  0.0934,  ...,  0.0778,  0.2280,  0.1233]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([497,  26, 201, 254, 174, 347, 229,  63, 213, 392, 129, 111, 399,   6,
        441, 255,   0, 258, 110, 112, 131, 423, 601, 702, 434, 244, 401, 428,
        361, 462, 356, 589, 202, 532, 374, 531, 652, 689, 434, 183, 179, 320,
        656, 531, 181, 220, 533, 152, 166, 287, 729, 340, 245, 198, 464, 642,
        698, 228, 492, 668, 647, 537, 105, 221], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1309,  0.0235, -0.1658,  ..., -0.2595, -0.1329,  0.1896],
        [-0.1025,  0.1932,  0.0938,  ...,  0.2524,  0.1832, -0.6162],
        [ 0.0431, -0.0575,  0.1515,  ..., -0.0419, -0.3708, -0.0690],
        ...,
        [ 0.0401,  0.0488,  0.0452,  ...,  0.1028, -0.2457,  0.1257],
        [ 0.3337, -0.0104, -0.2585,  ...,  0.1274, -0.3789, -0.0650],
        [ 0.2639,  0.0398,  0.1315,  ...,  0.1191,  0.2213,  0.0161]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([495, 670, 170, 478,  54, 415, 256, 310, 499, 185, 420, 589, 315, 509,
        362, 128, 302, 136, 141, 508, 549, 531, 677, 505, 194, 486, 239, 402,
          6,  84, 401,   6, 694, 179, 145, 741, 182,  46, 359, 167, 523, 739,
        704, 135, 131, 322,  61, 499, 399, 115, 590, 411,  92, 474, 101, 369,
        385, 458, 219, 136, 518, 124, 280, 405], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2549,  0.1309, -0.4004,  ...,  0.4001, -0.0071, -0.1069],
        [ 0.3948, -0.0673, -0.2163,  ...,  0.1233, -0.1031, -0.0118],
        [ 0.1968,  0.2194, -0.1293,  ...,  0.0679,  0.1803,  0.1307],
        ...,
        [ 0.5103,  0.0132,  0.0107,  ...,  0.1302,  0.1571, -0.1292],
        [ 0.1285,  0.1772,  0.4092,  ...,  0.1757, -0.2131,  0.1686],
        [ 0.1108,  0.0818,  0.2664,  ..., -0.0851, -0.3464,  0.2642]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([629, 319, 437, 699, 712, 297,  46, 577, 185, 569, 707, 407, 538, 314,
        573, 684, 522, 314, 610,   3, 152, 681, 232, 342, 133, 224, 606,  90,
        445, 402, 514, 640, 259, 475, 720, 422, 403, 315, 597, 712, 713, 526,
        591, 232, 677, 152, 293, 411, 105, 457, 129, 172, 651, 335,  45, 136,
        616, 535, 310, 557, 116, 407, 219, 601], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3760, -0.1312,  0.1287,  ..., -0.0806, -0.2632,  0.2427],
        [ 0.2440,  0.2686,  0.1331,  ...,  0.0237,  0.2480, -0.1881],
        [ 0.3403, -0.1788,  0.4756,  ...,  0.4656, -0.3140,  0.3279],
        ...,
        [ 0.2952,  0.0634,  0.1382,  ..., -0.1637, -0.0161,  0.1080],
        [ 0.2146,  0.0401,  0.2993,  ..., -0.1661, -0.0233,  0.2913],
        [ 0.1802,  0.0063, -0.3994,  ..., -0.0856, -0.1553,  0.3584]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([325, 239, 224, 503, 688, 115, 642, 730, 230, 428, 731, 452, 313,  57,
        302, 606, 674, 244, 589, 330, 304, 391,  84,  46, 221, 678, 678, 475,
        218, 315, 373, 416, 369, 501, 325, 533, 222, 306, 575,  53, 408, 243,
        334, 281, 211, 135, 573, 267, 400,  48, 411, 345,  53, 465, 499, 603,
          7, 541, 523, 263, 529, 145, 630, 669], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 1.9446e-01,  9.6512e-03, -9.9487e-02,  ..., -9.5487e-05,
          8.1482e-03, -1.0999e-01],
        [ 3.8940e-02, -1.6138e-01,  9.7961e-03,  ...,  1.1176e-01,
          4.1797e-01,  4.1962e-02],
        [ 4.3555e-01, -2.4109e-01,  3.1860e-01,  ..., -1.3928e-01,
         -4.9219e-01,  1.3359e-02],
        ...,
        [ 7.7026e-02,  3.8525e-01, -9.5337e-02,  ..., -1.2646e-01,
          1.4587e-01,  1.9055e-01],
        [ 2.7246e-01, -2.2156e-01,  1.0901e-01,  ...,  1.9714e-01,
          1.3318e-01,  4.8804e-01],
        [ 1.0205e-01, -2.6831e-01, -6.4514e-02,  ...,  3.9581e-02,
         -4.3823e-01,  4.3848e-01]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([543,  45, 350, 740, 695, 483, 140, 411, 595, 365, 289, 273, 362, 551,
        246, 423, 264, 696, 492,  63, 479, 456, 428, 445, 386, 620, 384,  46,
         44, 245, 104,  21, 425,  96, 427, 475,  76, 553, 280, 427, 495, 148,
         18, 367, 464, 122, 333, 110, 306, 344, 131, 375, 425, 189, 523, 391,
        132, 429, 676, 684, 180, 321, 647,  98], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1603,  0.2419,  0.5220,  ...,  0.0020,  0.2157,  0.0930],
        [-0.0782,  0.2688,  0.3818,  ..., -0.1868,  0.0906,  0.2272],
        [ 0.3284,  0.2654,  0.0770,  ..., -0.0923,  0.0214,  0.2135],
        ...,
        [ 0.0643,  0.7021, -0.0092,  ..., -0.3779, -0.0014,  0.0214],
        [ 0.2620,  0.1277,  0.3645,  ...,  0.1765,  0.0677,  0.0171],
        [-0.0595,  0.4189, -0.1896,  ...,  0.1812,  0.1082,  0.2974]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([167,  27, 648, 327, 362, 182, 661,  97, 179, 167, 359, 127, 210, 229,
        613, 528, 172, 576, 668, 158, 374,  77, 662, 654, 213, 454, 363, 477,
        537, 615, 392, 632, 261, 109, 221, 707, 575, 132, 120,  53, 269, 352,
         68, 372, 434, 359, 321, 748, 618, 602, 534, 402,   4, 191, 137, 428,
        481, 711, 244, 551, 190, 616, 114, 115], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2456,  0.0470, -0.1227,  ..., -0.1691,  0.1720,  0.0701],
        [ 0.0544, -0.0241, -0.0204,  ...,  0.1051,  0.1052, -0.1192],
        [ 0.2177,  0.1259, -0.1102,  ..., -0.0973, -0.1785, -0.1133],
        ...,
        [ 0.0588, -0.0710,  0.2220,  ..., -0.0153, -0.0850, -0.1807],
        [ 0.3889,  0.0876,  0.2201,  ...,  0.0387, -0.1670, -0.2568],
        [ 0.2803,  0.1343, -0.1274,  ...,  0.0066,  0.0882,  0.0634]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([107, 299,  93, 741, 138, 266, 415, 646, 720, 231, 226,   6,  16, 724,
        352,  18, 411,  76, 554, 715, 563, 623, 402, 611,  20, 416, 478, 365,
         77, 400, 211, 255, 359, 504, 736, 498, 372, 703, 171, 492, 172,  44,
        104, 739, 558, 592, 130, 722, 152, 525, 131, 166, 436, 401, 320,   7,
        368, 520, 484, 158, 374, 380, 272,  51], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2119, -0.0632,  0.3948,  ..., -0.0705,  0.0903,  0.4014],
        [-0.1149, -0.0184,  0.2012,  ...,  0.0975,  0.2329, -0.0480],
        [-0.1392, -0.0945,  0.3994,  ...,  0.1321,  0.1503,  0.0747],
        ...,
        [-0.0366, -0.5537,  0.1454,  ...,  0.0687,  0.2957,  0.2097],
        [ 0.0756,  0.0938,  0.2615,  ..., -0.0222,  0.1758,  0.0811],
        [ 0.3447,  0.2803,  0.0487,  ...,  0.1183,  0.1555,  0.2947]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([710, 648, 341, 136, 610,  11, 137,  97, 688,  93,  66, 713, 136, 328,
        372,  93, 636, 103, 393, 301, 423, 212, 605,  18,  64, 238, 686,  98,
         30, 416, 747, 368, 279, 364, 160, 138, 289, 488, 130, 112, 160, 712,
        528, 134,  92, 569, 676, 382, 359, 615, 140, 407, 285, 106,  48, 104,
        149, 427, 536, 748, 401, 611, 475, 137], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2559,  0.1757, -0.3391,  ..., -0.0934, -0.0706,  0.0833],
        [ 0.2189,  0.1392, -0.1053,  ..., -0.0869, -0.1819, -0.1136],
        [ 0.4412,  0.1031,  0.2452,  ...,  0.2034,  0.3015,  0.0942],
        ...,
        [ 0.2125,  0.2996,  0.3962,  ...,  0.1189,  0.3032, -0.0166],
        [ 0.2321,  0.4126,  0.3232,  ..., -0.3198,  0.1454,  0.0529],
        [-0.2388,  0.1026,  0.0266,  ...,  0.0379,  0.2815,  0.0948]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([420, 272, 354, 498, 696, 685, 110, 470, 294, 167, 566, 678, 206, 420,
        425, 177,  14, 177, 153, 211, 565, 203,  98, 643, 400, 698, 171, 669,
        366, 485, 473, 254, 150, 475, 204, 259, 381, 353, 169, 103, 738, 436,
        693, 190, 400, 132, 365, 179, 315, 112, 203, 474,  46, 356, 590, 312,
        563, 120, 424, 407, 405, 397, 407, 227], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5005,  0.5620,  0.7295,  ..., -0.0182, -0.0277,  0.1628],
        [ 0.0686,  0.0850,  0.2659,  ..., -0.0243,  0.1719,  0.0827],
        [ 0.2333, -0.2131,  0.2598,  ...,  0.2434,  0.2358,  0.0396],
        ...,
        [-0.0313,  0.2307,  0.3098,  ...,  0.0239,  0.0742,  0.1991],
        [ 0.2917,  0.0509,  0.1714,  ..., -0.1459, -0.0291,  0.0947],
        [ 0.3313,  0.1261,  0.2654,  ...,  0.2661, -0.0461,  0.1373]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([399, 236, 112, 141, 129, 446, 357, 578, 411, 177, 299, 255, 129, 473,
        423, 541, 573, 319, 627, 329, 301, 144, 167, 139,  46, 672, 585, 450,
        429, 323, 293, 566, 354, 666, 709,  48, 213, 492, 113,   4, 111, 315,
        429, 649, 423, 613, 580, 363,  89,  21, 204, 616, 117, 578,  63, 601,
        174, 382,  25, 417, 481, 252, 573, 643], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0971, -0.1270,  0.0700,  ...,  0.1693, -0.0720,  0.2791],
        [-0.2156,  0.1489,  0.1105,  ...,  0.2810,  0.0557,  0.0665],
        [ 0.0056, -0.2881,  0.2898,  ...,  0.1729,  0.4688,  0.1519],
        ...,
        [ 0.3823, -0.0807, -0.3416,  ...,  0.2754,  0.0781,  0.0915],
        [ 0.2937, -0.1759,  0.1176,  ..., -0.0455,  0.2401, -0.0199],
        [ 0.0216,  0.4600, -0.1232,  ...,  0.0072,  0.0163,  0.0507]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([171, 406, 463,  11, 247, 201, 601, 332,  46, 603, 111, 607, 252, 366,
        511, 717, 416, 408, 246, 354, 616, 165, 596, 601, 593, 615, 287, 374,
        711,  89, 732, 633, 344, 379, 430, 416,  26, 662, 178, 191, 191, 497,
        398, 274,  67, 247, 433, 715, 643,  47, 364, 308, 643, 601,  63, 211,
        342, 403, 556, 237, 394, 344, 173, 540], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3215,  0.1603,  0.0589,  ...,  0.0706,  0.1011,  0.2428],
        [ 0.5581,  0.1802, -0.1333,  ..., -0.2267,  0.2178,  0.2136],
        [ 0.0185, -0.1605,  0.2168,  ...,  0.0717,  0.1344, -0.0552],
        ...,
        [ 0.0539,  0.1588, -0.2098,  ..., -0.1610,  0.0297,  0.3513],
        [ 0.4185,  0.0023,  0.2053,  ...,  0.4114, -0.4065,  0.1832],
        [ 0.4807, -0.3044,  0.4944,  ...,  0.1132,  0.0600, -0.0964]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([434, 158, 127, 617,  39, 427, 407, 569, 545, 139, 182, 630, 524, 688,
         72, 600, 351, 383, 358,  54, 131,  51, 186, 621, 369, 151,  86, 223,
        318, 508, 537, 415, 423, 666, 411, 365, 357, 210,  25, 327, 366, 673,
        582, 718,   6, 269,  30, 744, 421, 425, 147, 554, 647, 432, 601, 680,
        192, 737,  57, 394, 624,  50,  72, 321], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3838, -0.4680,  0.5562,  ...,  0.1420, -0.4194,  0.3633],
        [ 0.2059, -0.0365,  0.3809,  ...,  0.0106, -0.1215,  0.2048],
        [ 0.1174, -0.0353,  0.4299,  ...,  0.1489,  0.0703, -0.0552],
        ...,
        [ 0.0136, -0.0723, -0.0779,  ...,  0.1403, -0.1643,  0.0468],
        [ 0.2487,  0.0473, -0.0527,  ..., -0.2069, -0.1000,  0.1924],
        [ 0.0262,  0.7324, -0.0502,  ..., -0.3176,  0.0322,  0.1193]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([445, 282, 722, 362,  98, 427, 721, 369, 522, 103, 174, 314, 649, 550,
        399, 115,  46, 505, 595, 168,  90, 301, 198, 153, 638, 588, 237, 398,
        194, 313,  27, 725,  87, 504, 374, 482, 566,  26,  46, 383, 462, 284,
        474, 608, 337, 359, 262, 213, 600, 407,  33, 464,   6, 432, 233, 260,
        427, 408, 315, 194, 277,  65, 130, 480], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0568,  0.4253,  0.0391,  ..., -0.1605, -0.0221, -0.1930],
        [-0.0653, -0.2771,  0.2739,  ...,  0.1688,  0.2279,  0.1389],
        [ 0.0423,  0.1379, -0.0060,  ...,  0.1147, -0.1561,  0.0822],
        ...,
        [ 0.3408,  0.3186,  0.1548,  ...,  0.0038,  0.1237,  0.1135],
        [ 0.2556, -0.0383,  0.5015,  ...,  0.0581,  0.2268,  0.2473],
        [ 0.4912,  0.1057, -0.0387,  ..., -0.0076,  0.4062,  0.2177]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 72, 356, 626, 135, 556, 243, 177, 665, 733, 546, 401, 130, 308,   0,
        477, 158, 525, 364, 212, 436, 480, 723, 729, 660, 191, 698, 538,  59,
        491, 396, 569, 593, 185, 341, 121, 710,  67, 119,  72, 461, 705,  25,
        417, 130, 332, 260, 660, 601,  93, 241, 408, 707, 128, 403, 197,  46,
        153,  48, 112, 309, 743, 425, 690, 223], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2428,  0.0472, -0.0566,  ..., -0.2135, -0.0959,  0.2003],
        [-0.1031, -0.1037,  0.0338,  ...,  0.1877, -0.1876,  0.0367],
        [ 0.2979,  0.4680,  0.2177,  ..., -0.2241,  0.2141, -0.1704],
        ...,
        [ 0.4653, -0.2272,  0.4829,  ...,  0.1617,  0.0471,  0.2629],
        [ 0.0815,  0.1044, -0.1256,  ...,  0.1406,  0.0187,  0.0795],
        [ 0.6113, -0.2117,  0.5781,  ..., -0.3389, -0.1449, -0.1274]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([690,  30, 623, 240, 185, 184, 379, 198, 220, 134,  77, 719,  17, 730,
        653, 666, 537, 224, 113, 126, 374, 328, 141,  70, 373, 103, 298,  30,
        613, 359, 611, 559, 359, 334, 724, 600,  54, 293, 613, 677,  94, 451,
        150,   6, 359, 165, 503, 261, 315, 517, 617, 216,  48, 512, 331, 735,
        560, 513, 212, 521, 481,  78, 216, 518], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0822,  0.1042, -0.1265,  ...,  0.1411,  0.0202,  0.0769],
        [ 0.3525, -0.1626, -0.3455,  ..., -0.4158,  0.2244,  0.0081],
        [-0.1076,  0.3921,  0.2969,  ..., -0.3169, -0.2666,  0.2440],
        ...,
        [ 0.0436,  0.1154,  0.0546,  ..., -0.0132, -0.0024, -0.1793],
        [ 0.0698,  0.1649,  0.4280,  ..., -0.2781,  0.1578,  0.0057],
        [-0.0382,  0.3474, -0.0482,  ...,  0.0479,  0.0230, -0.2092]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([299, 671, 211, 147, 165, 127, 714, 691, 251, 558, 188, 663, 545, 258,
         76, 526, 343, 351, 389,   3, 578, 289, 614, 298, 401, 253, 423, 339,
        210, 170, 423, 540, 292, 417, 201, 504, 570, 621, 187,  27, 576, 709,
        500, 201, 397, 145, 422, 174, 398, 402,  59,  16, 486,  57, 216, 371,
        410, 344, 276, 129, 504, 681, 181, 626], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.1370, -0.0203,  0.1885,  ...,  0.0839,  0.2430, -0.0856],
        [ 0.0592,  0.2300, -0.4014,  ...,  0.1454,  0.3083,  0.0837],
        [ 0.0946, -0.2512,  0.5430,  ..., -0.1671,  0.1089,  0.0616],
        ...,
        [ 0.4690,  0.1400, -0.0128,  ..., -0.2211, -0.0693,  0.0347],
        [ 0.5469,  0.3250, -0.1677,  ...,  0.3425,  0.3135, -0.0771],
        [ 0.2671,  0.4739,  0.2161,  ..., -0.2346,  0.2015, -0.1708]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 21,  72, 418, 620, 332,  18, 663, 186, 445, 684, 232, 422, 337, 496,
        597, 495, 476, 238, 148, 639, 137, 317, 666, 115, 669, 303, 701, 325,
        267, 254, 577, 213, 201, 306, 177, 121, 717, 616, 730, 560, 538, 147,
        229, 321, 390,  67,  91, 518, 339, 708, 555, 204, 287, 142,  91, 425,
        336, 395, 524, 433, 671, 641, 364, 227], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5581,  0.0369,  0.0714,  ..., -0.1765,  0.2568,  0.1027],
        [ 0.2515,  0.0833, -0.0745,  ..., -0.2159, -0.0878,  0.1992],
        [ 0.1217,  0.0166,  0.2294,  ..., -0.0685,  0.1685, -0.1019],
        ...,
        [-0.0999,  0.2418,  0.2793,  ..., -0.0197,  0.1940,  0.2054],
        [ 0.1788, -0.0750, -0.0246,  ...,  0.0996,  0.2859,  0.0389],
        [ 0.1669,  0.3042,  0.2330,  ...,  0.1125, -0.1486,  0.1630]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([305, 630, 446, 363, 319, 221, 266, 541, 181, 420, 367, 332,  72, 419,
        686, 434,  25, 315, 158, 564, 115, 484, 344, 722,  88, 700, 502, 295,
        306, 681, 655, 345, 336, 154,  86, 246, 560, 724, 174, 440, 131, 739,
        271, 353,  71, 322, 704,  90, 115, 551, 177, 264, 505, 113, 403, 637,
        628, 138, 113, 319, 490,  12, 654, 215], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5718,  0.3013,  0.0691,  ...,  0.3250, -0.1357, -0.0270],
        [ 0.2981, -0.1915,  0.1068,  ...,  0.1770,  0.1035,  0.4971],
        [ 0.1996, -0.0634,  0.4531,  ...,  0.1794,  0.1932, -0.0228],
        ...,
        [ 0.2072, -0.2404, -0.4858,  ...,  0.0800, -0.4846, -0.0157],
        [ 0.4172, -0.1265, -0.1826,  ..., -0.0070, -0.1206, -0.0994],
        [-0.0019,  0.2214,  0.0764,  ...,  0.0087,  0.2515,  0.3552]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([628,  76, 719,  46, 426, 606, 295, 558, 329, 353, 612, 478, 387,  77,
         89, 301, 183, 289, 560, 607,  33, 343, 407, 318, 658, 258,  50, 522,
        731, 212, 342, 130, 635,  59, 181,  87,  75,  77, 262, 293, 254, 199,
        607, 512, 330, 380, 214, 144, 164, 224, 282, 611, 189, 388,  63, 479,
        115, 278, 247, 481, 292, 719, 269, 599], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2986, -0.1089,  0.2089,  ..., -0.0308,  0.1554, -0.0487],
        [-0.0734,  0.2249,  0.0811,  ..., -0.0192,  0.5557, -0.0776],
        [ 0.0390,  0.3613,  0.1322,  ..., -0.0041,  0.2688,  0.0867],
        ...,
        [ 0.0390,  0.3613,  0.1322,  ..., -0.0041,  0.2688,  0.0867],
        [ 0.3433, -0.0398,  0.0353,  ...,  0.1376, -0.2651,  0.0591],
        [ 0.1643, -0.0293,  0.1112,  ...,  0.0218, -0.2115, -0.0793]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([396, 492, 560, 115, 527, 305, 286, 345, 100, 203, 645,  54, 368, 114,
        710, 122, 321, 166, 653,  50, 220, 733, 403, 741, 151, 417, 361, 560,
        427, 234,  81, 457, 290,   4,  10, 420, 221, 489, 223, 422, 560, 135,
        401, 233, 238, 174, 696, 119, 226, 317, 516, 174, 603, 321,  98, 660,
        342, 597, 625, 427, 689, 607, 390,  27], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1393, -0.0872,  0.1793,  ...,  0.0507,  0.1257,  0.3965],
        [ 0.2435, -0.2173,  0.2424,  ...,  0.1348, -0.0083,  0.2455],
        [ 0.2273,  0.0230, -0.0316,  ..., -0.1481,  0.0096,  0.0612],
        ...,
        [ 0.3604,  0.0430,  0.0626,  ..., -0.0802,  0.0228, -0.1804],
        [ 0.3176, -0.1549,  0.3982,  ...,  0.1830, -0.0707, -0.2019],
        [ 0.2084, -0.0816,  0.0258,  ...,  0.1949,  0.0728,  0.0111]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([566, 508, 414, 434, 335, 149, 490, 717, 255, 667, 480,  68,  88, 171,
        578, 699, 102, 578,  87, 248, 354, 120, 368, 695,   1, 648, 325, 246,
        496, 426, 260, 567, 310, 420, 398, 663, 378, 172, 375, 639, 398, 253,
        204, 173, 531, 351, 496, 257,  25, 271,  44,  93, 584,  91, 587, 658,
        315, 321, 392, 206, 538, 238, 364, 227], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.1403,  0.1476,  0.0050,  ..., -0.0952, -0.0131,  0.2411],
        [-0.0037, -0.0621,  0.4280,  ...,  0.1396, -0.0715,  0.0948],
        [ 0.3718, -0.2330,  0.1375,  ...,  0.1979,  0.1041,  0.4380],
        ...,
        [-0.1899,  0.3975,  0.0982,  ..., -0.0599,  0.1633,  0.4282],
        [ 0.1819, -0.0710, -0.0270,  ...,  0.1063,  0.3018,  0.0288],
        [ 0.3523,  0.1096,  0.2566,  ...,  0.2776, -0.0527,  0.1246]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([612, 314,  45,  11, 480, 142, 504, 114, 237,   6, 153, 135, 216, 690,
        571, 406,   2, 495, 383, 183, 691, 176, 286,  26, 693, 504, 592, 701,
        726, 562,  72,  47, 185,  63,  67, 421, 147, 730, 133, 360, 299, 383,
         61, 545, 366, 660, 111, 493, 483, 724, 554, 160, 194, 686, 147, 567,
        140, 259, 405, 249, 727, 377, 683, 504], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.2031,  0.2952,  0.2013,  ...,  0.1006, -0.3093, -0.1726],
        [ 0.0235, -0.2356, -0.0588,  ...,  0.1698,  0.5986,  0.1650],
        [-0.0626,  0.2666,  0.4050,  ..., -0.2231,  0.1362,  0.2377],
        ...,
        [ 0.6665,  0.1514, -0.1841,  ...,  0.0988,  0.0851, -0.0983],
        [ 0.3274,  0.4158,  0.2334,  ..., -0.2078, -0.0999, -0.0394],
        [ 0.0842, -0.0400, -0.3457,  ..., -0.0754, -0.1514,  0.1558]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
2025-04-03 13:08:23,531 transreid.train INFO: Epoch[1] Iteration[100/203] Loss: 8.293, Base Lr: 7.80e-05
label tensor([158, 471, 737, 719,  67, 437, 403, 402, 299, 298, 103, 131, 567, 694,
        617, 734, 456,   2, 748, 527, 616, 387,   8, 318, 402, 520, 491, 403,
        177, 662, 570, 411, 494, 345, 544, 434, 559, 112, 425,  31, 486, 450,
        511, 374, 641, 141,  51, 658, 192, 367, 418, 597, 102, 378, 216, 308,
        571, 730, 620, 153, 606,   0, 653, 492], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1932, -0.0619,  0.3645,  ...,  0.0281, -0.0979,  0.2415],
        [ 0.2661, -0.0291, -0.1219,  ...,  0.1272, -0.2415,  0.1110],
        [ 0.5674, -0.0780, -0.0363,  ..., -0.3145, -0.0489, -0.0613],
        ...,
        [ 0.2725,  0.1142,  0.1216,  ...,  0.1194,  0.3564, -0.1898],
        [ 0.2438,  0.1592, -0.2549,  ..., -0.1462,  0.2583, -0.2117],
        [ 0.2195, -0.2477,  0.2350,  ...,  0.1517, -0.0388,  0.2335]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([404,  13, 702,  63, 352,  76, 341,  61, 101, 359,  20, 669, 699,  72,
        586, 215, 359, 622, 187, 326, 288, 273,  87,  45, 343, 649, 534, 719,
        221,  13, 328, 589, 525, 302, 197, 232, 152, 661,  54, 480, 112, 297,
        151,   8, 171, 378, 238, 352, 120, 683,  97, 314, 403, 131, 324,  25,
        114, 203, 211, 121, 359, 204, 529, 152], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5859,  0.2798,  0.1212,  ...,  0.2625,  0.0424,  0.2693],
        [-0.0288, -0.3364,  0.3694,  ...,  0.1659,  0.0197, -0.0301],
        [ 0.1776,  0.1818,  0.0487,  ..., -0.1118,  0.1155,  0.2281],
        ...,
        [ 0.4771, -0.0140,  0.1790,  ...,  0.0558,  0.0529,  0.1423],
        [ 0.2018, -0.4448, -0.2700,  ...,  0.0118, -0.1875,  0.1019],
        [ 0.1370,  0.0338, -0.6094,  ..., -0.1788, -0.0768,  0.0908]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([480, 110, 138, 727, 301, 591, 658, 513, 510, 153, 663, 331, 366, 215,
        661, 462, 614, 468, 386, 112, 118, 284,  12, 686, 301, 370, 246, 383,
        539, 483, 301,  10, 522, 716, 513, 205, 320, 662, 264, 471, 744, 462,
        121, 258, 575, 717, 428, 574,  91, 221, 228, 686, 267, 706,   9, 538,
        546,  76, 121, 506, 239, 329,  99,  43], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 5.4883e-01,  7.8552e-02, -3.0731e-02,  ..., -6.7444e-02,
          3.4131e-01,  1.1212e-01],
        [ 3.5498e-01, -1.3208e-01, -1.4941e-01,  ..., -1.0516e-01,
         -1.2634e-01,  4.7412e-01],
        [ 1.3527e-02,  4.5074e-02,  3.4332e-02,  ..., -1.4331e-01,
         -1.9287e-01,  1.0138e-01],
        ...,
        [-7.6782e-02, -1.4758e-01, -6.4819e-02,  ..., -2.6953e-01,
         -6.5308e-02, -4.6509e-02],
        [ 6.6223e-02,  2.9004e-01,  1.3770e-01,  ..., -3.1787e-01,
          4.5288e-02, -7.0923e-02],
        [-2.3758e-04,  1.4685e-01, -1.5479e-01,  ...,  1.1615e-01,
         -2.4216e-02, -2.4524e-01]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([743, 667, 278, 522, 341, 606, 416, 294,  26, 154, 105, 112, 132, 586,
        609, 474,  18, 249, 694, 174,  45,  63,   7, 398, 281, 710, 608, 336,
        504, 411, 103,  45, 637, 443, 547, 103, 594, 308, 179, 346, 356, 616,
        254, 506, 732, 747, 173, 588,  67, 287, 165, 744, 306, 120, 268,  92,
        244, 151, 403, 553, 135, 598, 325,   8], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3582, -0.3210, -0.1799,  ..., -0.1812,  0.1506, -0.0292],
        [ 0.3645, -0.0350,  0.0369,  ...,  0.2389,  0.0275,  0.5269],
        [ 0.2913,  0.1947,  0.4504,  ..., -0.0897, -0.1150, -0.1317],
        ...,
        [ 0.0543, -0.1486,  0.2366,  ..., -0.1946, -0.2415, -0.2277],
        [ 0.2732,  0.0385, -0.1857,  ..., -0.0800, -0.0563, -0.1660],
        [ 0.3967,  0.1953, -0.2607,  ..., -0.1621, -0.3049,  0.1797]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([232, 463,  45, 668, 538, 692, 624, 678,  97, 740, 578, 104, 152, 387,
        502, 645, 276, 217, 736, 315, 666, 613,   0, 332, 498, 132,  66, 630,
        657,  59, 113, 168, 427, 293, 150, 432, 325, 374,  56, 436, 582, 745,
        513,  98, 299, 293, 295,  87, 113, 612, 374, 152, 503, 131,  77, 100,
        328, 490, 609, 104, 566, 381, 105, 135], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3162,  0.0085,  0.2097,  ..., -0.1520,  0.0797, -0.4321],
        [-0.0035, -0.0116,  0.1422,  ...,  0.0197,  0.0912, -0.1146],
        [-0.0527,  0.2058,  0.3997,  ..., -0.2096,  0.1643,  0.2229],
        ...,
        [ 0.0903, -0.0345,  0.4199,  ...,  0.0007,  0.0802, -0.0810],
        [ 0.4597, -0.0518, -0.2527,  ...,  0.1455, -0.2920, -0.0646],
        [-0.2413,  0.0254,  0.2130,  ...,  0.2330, -0.0337,  0.1990]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([488, 396, 647, 570, 503, 353, 554, 460, 171, 578, 651, 449, 416, 326,
        114, 312, 367, 233, 112,   0, 696, 387, 160, 315, 710, 296, 255, 662,
        699,  94, 386, 154, 405, 598, 517, 130, 148, 288, 709, 576, 638, 286,
         54, 699, 607, 729, 101,  26,   8, 138,  47, 227, 366, 639, 486, 677,
        191, 539,  54, 104, 611,  43, 407, 197], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5938, -0.3594,  0.0230,  ..., -0.1981,  0.1068, -0.0103],
        [ 0.1619, -0.0772,  0.1984,  ...,  0.0523,  0.1812,  0.3792],
        [ 0.2230,  0.0496,  0.3132,  ...,  0.1510,  0.0271, -0.0255],
        ...,
        [-0.0146,  0.1501, -0.3430,  ...,  0.1714, -0.0173, -0.3403],
        [ 0.2573,  0.0233,  0.2139,  ..., -0.0133, -0.0734,  0.1083],
        [ 0.4492, -0.0342, -0.1499,  ...,  0.2837,  0.1155, -0.0700]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([311, 590, 127, 549, 133, 642, 134, 293, 397, 478, 572, 686, 444, 293,
        657, 321, 483, 375, 251, 529, 748, 429, 155,  13, 473, 537, 436, 367,
        576, 643, 547, 658, 135, 144, 537, 696, 634, 175,  63,  73, 153, 388,
        126, 244, 392, 393, 158, 301, 590, 684, 614, 368, 383, 166,   3,  77,
         31, 586, 193,  57, 136, 345, 670, 295], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5015,  0.2374,  0.1125,  ...,  0.0378,  0.1057,  0.2399],
        [ 0.2117,  0.1591,  0.1709,  ...,  0.3584,  0.1846, -0.0955],
        [ 0.1249, -0.0534,  0.4915,  ...,  0.1719,  0.0781, -0.0269],
        ...,
        [-0.2341,  0.0806, -0.5376,  ..., -0.1517,  0.1641, -0.0370],
        [ 0.4377, -0.0296, -0.2255,  ...,  0.3213, -0.1923,  0.0017],
        [-0.0973,  0.0023,  0.7505,  ..., -0.0181,  0.1556,  0.0826]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([226,  47, 570, 248, 497,  44, 605, 221, 547, 748, 639,  34, 643, 456,
         33, 409, 209,  22, 714, 429, 508, 658, 252, 441,  87, 715,  27, 364,
        209, 250,  18,  97, 428, 270, 333, 293, 649, 322, 113, 279, 362, 501,
         16, 115, 688, 472, 747, 708, 604, 267, 306, 426, 144, 600, 517, 122,
        373, 412, 377, 177, 682, 293,  30, 419], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1075, -0.1750,  0.2462,  ..., -0.0266, -0.0148,  0.0964],
        [ 0.3748, -0.0647, -0.4373,  ..., -0.0354,  0.0249,  0.1278],
        [ 0.0855,  0.4250, -0.5386,  ...,  0.0816,  0.3481,  0.2571],
        ...,
        [-0.0800,  0.3020,  0.6084,  ..., -0.2407,  0.2590,  0.0845],
        [ 0.3008, -0.0616, -0.3064,  ..., -0.3386,  0.2942,  0.0718],
        [ 0.0407,  0.0961, -0.1102,  ...,  0.1636,  0.3701,  0.2532]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 81, 592, 429, 160, 136, 111, 532, 249, 486, 461, 630, 192, 322,  46,
        293, 213, 141, 267, 470, 601, 606, 393, 126, 473, 723, 380,  23, 262,
        167, 216, 104, 512, 446, 160, 337, 409, 505, 544, 290, 106, 460, 516,
        619, 747, 326,   0, 578, 190,  30, 413, 286, 411, 205, 534, 221, 201,
        510, 542, 730, 103,  92, 402,  70,  48], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3831,  0.3625, -0.4072,  ..., -0.3962, -0.3494,  0.2009],
        [ 0.4426,  0.3579,  0.2178,  ..., -0.0083,  0.0725, -0.1614],
        [ 0.4829,  0.1632,  0.3071,  ...,  0.0453, -0.0085, -0.1085],
        ...,
        [ 0.3176,  0.1971,  0.7300,  ...,  0.0718, -0.0611,  0.0125],
        [ 0.0780, -0.0234,  0.3533,  ...,  0.2351, -0.1532,  0.1425],
        [ 0.7065,  0.3640,  0.3428,  ...,  0.0672,  0.2546,  0.4260]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([624,   6, 244, 459, 128, 105, 714,  11, 353, 309, 267,  33, 657, 176,
        403, 577, 155, 404, 334, 314, 201, 679,  21, 124, 229, 411, 633, 346,
        744, 409, 194, 213, 665, 601, 637, 331, 440, 419, 428, 430, 397, 357,
        343, 168, 655, 391, 381, 365, 122, 419, 184, 485, 575, 358,  94, 379,
        227, 704,  65, 430, 104, 404, 300, 319], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3406, -0.2018, -0.3506,  ...,  0.3123, -0.0658, -0.1531],
        [ 0.1510,  0.0767,  0.2717,  ..., -0.0735, -0.0293, -0.2102],
        [ 0.2815,  0.0099,  0.1148,  ...,  0.2161, -0.0360, -0.0800],
        ...,
        [ 0.5059,  0.2981,  0.1931,  ...,  0.1974,  0.0378,  0.3250],
        [ 0.6768,  0.3872, -0.1216,  ..., -0.0980, -0.0076,  0.1479],
        [ 0.1715,  0.2664,  0.2416,  ...,  0.0757,  0.2988, -0.1940]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([328, 160, 308, 152, 384,  48, 115, 239, 677, 432,   0, 565, 659,  46,
        342, 440, 326, 481, 460, 645, 129, 272, 338,  61, 297, 539, 385,  64,
        674,  45, 630, 427, 578, 264,  76, 499, 104, 607, 736, 383, 269, 462,
        261, 250,  27, 183, 416, 305, 289, 229,  59, 642, 325, 221, 113, 210,
        650, 606, 406, 326, 285, 398, 352, 637], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4424,  0.2228,  0.1902,  ...,  0.4758,  0.0941,  0.1359],
        [ 0.2423,  0.5312,  0.1174,  ...,  0.1168, -0.2747,  0.0251],
        [ 0.1063, -0.1064,  0.5747,  ...,  0.2303,  0.1512, -0.0148],
        ...,
        [ 0.5420, -0.0258, -0.1158,  ...,  0.0184,  0.2230, -0.0614],
        [ 0.2559,  0.2378,  0.3516,  ..., -0.1576,  0.0311, -0.3953],
        [ 0.1658, -0.4619, -0.0190,  ...,  0.0867,  0.2700,  0.0508]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([381, 477, 411, 342, 173, 160, 571, 357, 250, 180, 413, 643,  50,  19,
        598,  48, 503,  47, 403,  96, 327, 479, 151, 374, 418,  67, 134, 363,
        623, 493, 664, 124, 732, 213, 708, 486, 724, 217, 213, 398, 109, 608,
        736, 495, 305, 643, 653, 470, 213, 722, 245, 488, 123, 632, 363, 136,
        144, 344, 718, 335, 310, 115, 749, 432], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1025, -0.0790,  0.4006,  ..., -0.0329,  0.0936, -0.0357],
        [ 0.5283,  0.4070,  0.0922,  ...,  0.0298, -0.0090, -0.0125],
        [-0.1613,  0.1759, -0.3389,  ...,  0.1655, -0.1687, -0.0941],
        ...,
        [ 0.2432,  0.0809, -0.1489,  ...,  0.0018,  0.0995, -0.0105],
        [ 0.0891,  0.3215, -0.0974,  ...,  0.2969, -0.1420, -0.2622],
        [ 0.0986,  0.0787,  0.3726,  ..., -0.0736, -0.1765, -0.0096]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([227, 215,  96, 252, 628, 327, 611, 543, 597, 747, 607, 395, 558, 408,
        715, 407, 341, 306, 140,  68, 445, 748, 470, 642, 527, 369, 213, 147,
        368, 309, 426, 575,  33, 102, 708, 626, 336, 522,   2, 421, 144, 498,
         41, 494, 210, 250, 540, 427, 401,  22, 180, 346, 189, 232, 152, 101,
        402, 409, 492, 403, 293, 705, 319, 466], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3440,  0.1538,  0.2690,  ...,  0.2233, -0.0587,  0.1061],
        [ 0.1357,  0.1858,  0.0146,  ..., -0.0359,  0.1903,  0.4478],
        [ 0.2491, -0.1242,  0.0750,  ..., -0.0332,  0.0829, -0.2397],
        ...,
        [ 0.1018,  0.0034,  0.1957,  ..., -0.1364,  0.1284, -0.1580],
        [ 0.1710,  0.2793,  0.2352,  ...,  0.0726,  0.3003, -0.1962],
        [ 0.2869, -0.1295, -0.1750,  ...,  0.1666, -0.1194, -0.0869]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([212, 131, 111, 386, 398, 302, 650, 477,  48, 417, 179,  67, 620, 325,
        130, 212,  84, 502, 201, 241, 182, 699, 326, 611, 381, 136, 440,  46,
        721, 252, 667, 353,   6, 745, 667,  28, 314,  75, 384, 183, 389,  93,
        416, 241, 708, 443, 392,  48, 337, 416, 147, 459, 589, 145, 252, 368,
        422, 724, 113, 735, 367,  73, 189, 367], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5000,  0.3032,  0.0746,  ..., -0.0298,  0.0459,  0.2064],
        [ 0.3064,  0.0605, -0.0118,  ...,  0.0440,  0.0393,  0.2583],
        [ 0.4473,  0.0482,  0.3127,  ...,  0.0354,  0.2822,  0.0533],
        ...,
        [ 0.2568,  0.0882,  0.1681,  ...,  0.1796, -0.3218,  0.0249],
        [ 0.1605, -0.0934,  0.4468,  ...,  0.0124, -0.0257,  0.1063],
        [-0.0415,  0.3247, -0.0084,  ..., -0.3447,  0.1945, -0.0389]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([577, 173, 352, 733, 302, 607, 414, 427, 503, 324, 203, 379,  37,  30,
        363, 653, 731, 332, 129, 187, 484, 529, 604, 175,  26, 733, 121, 233,
        569, 476, 696, 246,  45,  97, 497, 453, 391, 411, 100,  66, 456, 397,
        209, 372, 727, 532, 398, 158, 716, 429,   8, 675, 466, 625, 629, 119,
        632, 129, 209,  89, 683, 512, 253, 212], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0163,  0.2433,  0.0870,  ...,  0.1447, -0.0772, -0.0638],
        [ 0.4009,  0.0607,  0.1681,  ...,  0.4192, -0.4348,  0.1501],
        [ 0.2502,  0.2554,  0.3081,  ..., -0.1530,  0.0194, -0.3843],
        ...,
        [ 0.2145, -0.0134,  0.0030,  ..., -0.1235,  0.0140,  0.1299],
        [ 0.3596, -0.1032,  0.4377,  ..., -0.0685, -0.0279,  0.5137],
        [ 0.5049,  0.3074,  0.0675,  ..., -0.0288,  0.0432,  0.2026]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([742, 218, 714, 397, 316, 327,  88, 399, 427,  11, 582,  11, 190, 490,
         87, 383, 291, 370, 646, 164, 129, 129, 368, 114, 525, 628, 335,  98,
        441, 718, 181, 249, 414, 301, 488, 269, 415, 288, 370, 550, 148, 301,
        601, 527,  38, 694,  70,  21, 123, 684, 522, 110,  30, 626, 292, 266,
        282, 638,  21, 414, 128,  45, 178,  22], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3213,  0.0305, -0.0458,  ..., -0.0142, -0.1263,  0.1260],
        [ 0.1754, -0.2705,  0.0199,  ..., -0.5571,  0.0016, -0.1720],
        [-0.0443,  0.2559, -0.0365,  ..., -0.0714, -0.0086,  0.2588],
        ...,
        [-0.0576,  0.1843,  0.4119,  ..., -0.2095,  0.1381,  0.2014],
        [ 0.2217, -0.3203,  0.1523,  ..., -0.0006,  0.0125, -0.1798],
        [ 0.3831, -0.0244,  0.2272,  ..., -0.0176,  0.3286,  0.2507]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([281, 434, 654, 283, 419, 304, 499, 693, 411, 308, 293, 420, 262, 704,
        293, 520,  13, 633, 699, 240, 523, 158, 297, 455, 369, 380, 388, 445,
        104, 575,  93, 660, 110, 424, 163, 219, 133,  53, 289, 283, 269, 231,
        702, 535, 166, 245, 500, 131, 601, 600, 479, 548,  44,   6,  46, 104,
        306, 317, 496, 750, 413, 662, 154, 549], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0833, -0.0398, -0.0605,  ...,  0.1156,  0.0041,  0.1569],
        [ 0.4126, -0.4875,  0.4958,  ...,  0.2710, -0.4148,  0.4524],
        [ 0.4136, -0.1157, -0.2145,  ..., -0.0294, -0.1268, -0.0731],
        ...,
        [ 0.2810, -0.1697,  0.0223,  ..., -0.0563,  0.2529, -0.1108],
        [ 0.3267,  0.2812,  0.1920,  ...,  0.0212,  0.1742,  0.0250],
        [ 0.4539, -0.2145, -0.0895,  ...,  0.1748, -0.2722, -0.3359]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([332, 661, 488, 526, 643, 659, 151, 572, 154, 211, 229, 180, 580,   8,
        105, 471, 621, 249, 508, 388, 440, 466, 255, 501, 736, 299, 496, 513,
        311, 536, 359, 478, 578, 120, 317, 661, 338, 749, 667,  27, 428, 135,
        368,  99, 742,  54,  51, 309, 699, 727, 341, 368, 190,  96, 695, 347,
        467, 314, 623,  48, 460, 132,   2, 661], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3247, -0.0210,  0.3943,  ..., -0.1782, -0.0431,  0.1155],
        [ 0.4004, -0.2466, -0.2445,  ..., -0.2832,  0.0881,  0.3835],
        [ 0.5552, -0.3782, -0.0379,  ..., -0.2191,  0.0565,  0.0118],
        ...,
        [ 0.1650,  0.0971, -0.2588,  ..., -0.0905, -0.3430, -0.1798],
        [ 0.2125, -0.1439, -0.1624,  ...,  0.1499,  0.0157, -0.1512],
        [ 0.4004, -0.2466, -0.2445,  ..., -0.2832,  0.0881,  0.3835]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([403, 556, 699, 425, 278,  50,  67, 533, 244, 359, 639, 447, 275, 388,
        328, 102, 465, 704, 171, 426, 483,  46, 446, 610, 369, 647,  77, 147,
        591, 257, 406, 687, 701, 684, 737, 743, 537, 386, 518, 686, 701, 406,
         73, 153, 411, 229, 292, 112, 490, 269, 540, 398,  48, 409, 330, 675,
        284, 309, 173, 609,  48,  44, 357, 138], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2485,  0.2737, -0.1372,  ..., -0.1737,  0.0185,  0.2355],
        [ 0.6470, -0.0630, -0.0294,  ..., -0.0865, -0.2045,  0.0829],
        [ 0.4614, -0.1107,  0.0023,  ..., -0.1656, -0.0077,  0.0027],
        ...,
        [ 0.8506, -0.3220,  0.0238,  ...,  0.0895,  0.1790, -0.0614],
        [ 0.5576,  0.2676,  0.4790,  ...,  0.1560,  0.2434, -0.0963],
        [-0.0042,  0.0759,  0.0079,  ..., -0.1697, -0.1635,  0.1055]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([130, 408, 173, 447, 643, 287, 434,  18, 212, 639, 442, 293,  67, 371,
        698, 433, 176, 369, 414, 710, 697, 305,  24,  24, 496, 373, 699, 424,
        512, 167,  11, 667, 513, 196, 136,  93, 362, 744, 633,  11, 622, 689,
        187, 153, 382, 394, 715, 196, 325, 160, 657, 658, 158,   6, 362, 594,
        459, 268, 497, 407, 242, 171, 104, 391], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4346,  0.1484,  0.2869,  ..., -0.0598,  0.0518,  0.0097],
        [-0.0344,  0.3574,  0.0971,  ...,  0.1118, -0.0479,  0.0862],
        [ 0.4255,  0.0486,  0.1879,  ...,  0.4263, -0.4253,  0.1537],
        ...,
        [ 0.2766,  0.0809,  0.0627,  ...,  0.0091,  0.1151,  0.1919],
        [ 0.5845,  0.2202,  0.3364,  ...,  0.1339, -0.0009,  0.2900],
        [ 0.4692,  0.1018,  0.0187,  ..., -0.1782,  0.0715, -0.0928]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([300, 578, 194, 630,  51, 507, 119, 154, 506, 750, 632, 677, 677, 637,
        286, 496, 641, 290,  91, 357, 411, 398,  76, 372,   0, 436, 698, 157,
        665, 280,  67, 750, 688, 643, 403, 373, 109, 400, 743, 249, 103,  19,
        360,  33, 145, 363,   6, 174, 275, 114, 489, 684, 673, 407, 375, 248,
        136, 182, 224, 637, 121, 146, 217, 530], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.6968,  0.4287,  0.0008,  ..., -0.2181,  0.0029,  0.1423],
        [ 0.1913, -0.1119,  0.0238,  ...,  0.1100,  0.0995,  0.1423],
        [ 0.0747, -0.2479,  0.2374,  ...,  0.0981,  0.1556, -0.0322],
        ...,
        [-0.0624,  0.2469,  0.1882,  ..., -0.0796,  0.0138,  0.1469],
        [ 0.3342,  0.0291,  0.0539,  ..., -0.0381, -0.1335,  0.0901],
        [-0.1674,  0.1642,  0.3745,  ...,  0.0275, -0.0053, -0.2198]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([167, 425,  25,  59, 113, 497, 297, 243, 496, 624, 331, 695,  51, 252,
        384, 520, 490, 511, 511, 197, 678, 516, 508,  39, 454,  44, 614,  26,
         51, 105, 181, 207, 727, 586, 717, 328, 634, 527, 241, 694, 212, 427,
         67, 383, 297, 498, 471, 416, 609, 403, 479, 638, 625, 373,  77, 410,
        356, 329, 513, 492, 299, 519,   6, 577], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1882,  0.0554, -0.1142,  ..., -0.1855,  0.1704,  0.0968],
        [ 0.4492, -0.3406,  0.2473,  ...,  0.3262, -0.0760,  0.3235],
        [ 0.2563, -0.1505, -0.1216,  ...,  0.0346, -0.5205,  0.1959],
        ...,
        [ 0.1997, -0.0147,  0.0342,  ..., -0.0975,  0.1094, -0.3403],
        [ 0.0836,  0.0931,  0.2341,  ..., -0.1021, -0.0218, -0.1479],
        [-0.0267,  0.2681,  0.0083,  ...,  0.1814, -0.0693, -0.0216]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([678, 726, 471, 673,  30, 118, 576, 109, 310, 342, 424, 731, 334, 583,
        401, 171,  60, 572, 301, 165, 348, 497, 578, 485, 664, 443, 138, 573,
        486, 111,  72, 525,  44, 730, 266, 385, 519, 357, 425, 118,  96, 563,
         51, 110, 461, 269, 409, 450, 112, 499, 204, 676, 327, 104, 578, 309,
         63, 445, 153, 379, 122, 418, 213, 598], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2727, -0.1097,  0.1147,  ..., -0.0088,  0.1979,  0.2156],
        [ 0.4399,  0.3467, -0.1647,  ..., -0.4573, -0.1792,  0.0885],
        [ 0.2603, -0.0379, -0.1603,  ...,  0.1761, -0.1777,  0.0803],
        ...,
        [ 0.2627, -0.0740,  0.1742,  ..., -0.1370,  0.2051,  0.1207],
        [ 0.0833,  0.1335, -0.4043,  ..., -0.1180,  0.4583,  0.0533],
        [ 0.0040, -0.1759,  0.1740,  ..., -0.1255, -0.1218, -0.2849]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([749, 576, 355, 319, 389, 653,  67, 266, 290,  51, 609,  87, 612, 400,
        191, 686, 399, 577, 338, 117, 179, 420, 511, 120, 513, 495, 128, 598,
        187, 167, 115, 490, 562, 412, 408, 134, 367, 660, 203, 374, 131, 103,
        221,  67, 594, 209,  67, 631, 474, 590,  67, 376, 394, 365,   6, 405,
        119, 132, 736, 147,   2, 150, 446, 585], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1653,  0.2197, -0.1329,  ...,  0.3118, -0.1442, -0.2686],
        [ 0.3120,  0.0866,  0.5312,  ...,  0.1953, -0.1812,  0.2954],
        [ 0.0282, -0.0989, -0.0773,  ..., -0.0705,  0.2312, -0.0915],
        ...,
        [ 0.3687,  0.2871, -0.4463,  ..., -0.0043,  0.0473,  0.2043],
        [ 0.1997,  0.1207,  0.3130,  ..., -0.0030,  0.0523, -0.0873],
        [ 0.0570,  0.0631,  0.2006,  ..., -0.1284,  0.1725,  0.1833]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 61, 672, 157, 519, 745, 305, 241, 362,  92, 500, 554, 679,  33,  27,
        400, 565,  86, 427, 608, 716, 664, 743, 678, 401, 688, 380, 436,  51,
        415, 434, 519, 531, 707, 402, 167, 617,   7,  77, 497, 342, 371,  63,
        530, 615, 497, 399, 387, 425, 142, 128, 149,  27, 629, 405, 479, 699,
        560, 229, 223, 667,  45, 446, 532, 343], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1628,  0.4812,  0.0627,  ...,  0.0056,  0.3875, -0.1466],
        [ 0.0921, -0.0389, -0.2189,  ...,  0.3452,  0.0024, -0.1229],
        [-0.0082,  0.2126,  0.0910,  ..., -0.0580,  0.0085,  0.3765],
        ...,
        [ 0.1837,  0.1166,  0.3135,  ...,  0.0091,  0.0623, -0.0892],
        [ 0.1787,  0.0044, -0.0586,  ...,  0.2025,  0.2335,  0.0012],
        [ 0.1221, -0.0974, -0.3743,  ...,  0.0551, -0.0665,  0.4771]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 88, 366,  53, 348, 337,  92, 424,  46, 418, 499,  98, 453, 661, 237,
        218, 720, 338, 710, 198,  96, 264, 338, 147, 373, 478, 491,  37, 427,
        384, 209, 346, 482, 280, 122, 298, 436, 642, 305,  51, 523, 103, 365,
        185, 712, 136, 742, 492, 119, 568, 368,  12, 589, 315, 339, 323, 407,
         45, 407, 517,  19, 460, 639, 597, 675], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1570,  0.0659, -0.3098,  ..., -0.0341, -0.1996, -0.0430],
        [ 0.4678, -0.1605, -0.1521,  ..., -0.0352, -0.0582,  0.1752],
        [-0.1084,  0.1059,  0.2148,  ...,  0.1046,  0.0041, -0.0776],
        ...,
        [ 0.3423, -0.2815, -0.4861,  ..., -0.0088, -0.0236, -0.0729],
        [ 0.4377,  0.0211, -0.1403,  ..., -0.0457,  0.0710,  0.1279],
        [ 0.3208,  0.0994, -0.1277,  ...,  0.1261,  0.1087,  0.2164]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([531, 598, 135, 416, 102, 161, 104, 185, 226, 383, 714, 675, 552, 166,
        676, 179, 507, 607,  30, 198, 545, 641, 632, 579, 136, 633, 134, 210,
        322, 345, 651, 378, 691, 416, 212,  50, 315,  28, 267, 625,  67, 606,
        104, 735, 342, 398, 636,  63, 131, 190, 362, 307, 251, 637, 104, 356,
        305, 323, 429,  46, 667,  50, 505, 743], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 1.5637e-01, -8.9905e-02, -3.1586e-02,  ..., -2.1375e-01,
          1.5210e-01, -2.3511e-01],
        [-1.8311e-02, -1.6553e-01,  1.8616e-01,  ..., -1.2708e-01,
         -1.6052e-01, -2.0337e-01],
        [-1.7590e-01,  1.8433e-01,  7.7454e-02,  ...,  2.1753e-01,
         -5.8899e-02,  1.9519e-01],
        ...,
        [-4.5052e-03, -3.2401e-04,  3.6865e-02,  ...,  4.2908e-02,
         -1.6675e-01,  1.0065e-01],
        [ 2.8394e-01, -1.3452e-01, -1.5393e-01,  ..., -4.6851e-01,
          2.7100e-01,  6.6040e-02],
        [ 3.1250e-01, -2.9712e-01, -7.1838e-02,  ..., -1.7395e-01,
          1.8823e-01, -3.8849e-02]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([429, 372, 606, 600, 282,  67, 135, 504, 214, 687, 339, 573, 514, 663,
        239, 343,  66,   8, 258, 414, 213, 384, 747, 531, 438,  18, 362, 489,
        190, 110, 227, 412, 695, 222, 526, 240, 223,   3,   0,  43,  83,  78,
        479, 608, 727, 695,  57, 409, 120, 430, 465, 168, 636, 269, 371, 212,
        413, 242, 480, 747, 220, 519, 363, 408], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4810,  0.1381,  0.3093,  ...,  0.0012, -0.0178, -0.1136],
        [ 0.3877,  0.1417,  0.1207,  ...,  0.0795, -0.4995,  0.2102],
        [ 0.3381,  0.0761,  0.1836,  ...,  0.1003,  0.0478, -0.2030],
        ...,
        [ 0.2124, -0.0278,  0.1188,  ..., -0.1192,  0.0853, -0.3013],
        [ 0.1527, -0.1173, -0.1842,  ...,  0.1091,  0.8311, -0.2747],
        [-0.0299,  0.3574,  0.0851,  ...,  0.0627, -0.0635,  0.0514]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([328,  61, 523, 514, 532, 671, 378,  55,  54,  80, 655, 713, 463,  93,
        253, 531, 289, 147, 383, 542, 149, 185, 527, 486, 736, 363, 287,  91,
        257, 548, 212, 499, 425, 311, 712, 136, 657, 257, 182, 564, 374, 143,
         45, 620, 167,   7, 104, 568, 368, 614, 201, 160, 539, 685, 266, 475,
        365, 451, 692, 673, 386,  44, 512, 115], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4985,  0.2759,  0.1948,  ...,  0.4463,  0.1120,  0.1698],
        [ 0.1508,  0.4519,  0.0696,  ..., -0.0024,  0.3433, -0.1594],
        [-0.1542, -0.0034,  0.0775,  ...,  0.4233, -0.0612, -0.2246],
        ...,
        [ 0.8677, -0.3621, -0.0087,  ...,  0.2151,  0.1537,  0.0121],
        [ 0.2238,  0.0224, -0.0519,  ..., -0.1008,  0.0265,  0.1541],
        [ 0.1989,  0.0725, -0.2288,  ..., -0.0133,  0.0979, -0.0179]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([110, 399,  94, 611, 679, 343, 315, 606, 153, 399, 709, 542, 252, 724,
        429, 259,  31, 403, 383, 136, 656, 504, 634, 319, 572, 297, 497, 675,
        663, 436, 567,  76, 490, 384, 215, 101, 544,  67, 391, 656, 557, 235,
        270, 316, 609, 374, 273, 227,  27, 235, 209, 348, 127, 176, 368, 140,
        328, 321,  59, 193, 122, 731, 190,  46], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3042, -0.2003, -0.0959,  ..., -0.1381, -0.1466,  0.4180],
        [ 0.0078, -0.1924,  0.0543,  ...,  0.2214, -0.0350,  0.2659],
        [ 0.0638, -0.1969, -0.1562,  ...,  0.0077,  0.1422, -0.1434],
        ...,
        [ 0.5469,  0.0954,  0.4065,  ...,  0.3608,  0.2581,  0.1490],
        [ 0.2776, -0.0783, -0.1760,  ...,  0.3181, -0.2622, -0.0478],
        [ 0.1479, -0.2507,  0.0747,  ..., -0.1497,  0.4761,  0.5298]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([527, 122, 232,  59,  57, 547, 378, 250,   6, 410, 342, 254, 605, 237,
        422, 371, 675, 247, 486, 717, 186, 386, 284, 411, 329,  27, 593, 315,
        185, 500, 586, 708, 676, 104, 331, 649,   0, 376, 333, 592, 575, 151,
         54, 217, 435, 407, 325, 587, 144, 598, 283, 493, 217, 419, 681, 437,
        588,  59, 314, 265, 598,  76, 535, 317], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2517,  0.0223,  0.1718,  ..., -0.0394, -0.4519,  0.2295],
        [ 0.2585,  0.2358,  0.0578,  ...,  0.1409, -0.0239,  0.1259],
        [ 0.2365, -0.1124,  0.0808,  ...,  0.0634, -0.0428, -0.3071],
        ...,
        [-0.0326,  0.2131,  0.1193,  ..., -0.0244,  0.5264, -0.0208],
        [ 0.0213,  0.0104,  0.0898,  ..., -0.0287, -0.0544,  0.1644],
        [ 0.2253, -0.1207,  0.1182,  ..., -0.2732, -0.2659, -0.0611]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([562,  76, 455, 481, 686, 120, 300, 629,  25, 598, 523,  63, 420,  89,
        525, 650, 304,  89, 715, 405, 568, 240, 719, 282,  48,  46,   3, 423,
        717, 659, 736, 369, 272, 256, 676,  53, 438, 269, 141, 565, 295, 328,
        636, 105,   5, 724, 154, 346, 555, 416, 688, 153, 480, 216, 158, 424,
        684, 176,  45, 749,  43,  63, 151, 114], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0214, -0.0534,  0.2329,  ..., -0.0120, -0.0816,  0.0226],
        [-0.0299,  0.2198,  0.1137,  ..., -0.0262,  0.5288, -0.0233],
        [ 0.1829, -0.0815,  0.7651,  ..., -0.2581, -0.1307, -0.0118],
        ...,
        [-0.0307,  0.1164,  0.4597,  ...,  0.3877, -0.5923,  0.0155],
        [ 0.2971, -0.1317,  0.2358,  ..., -0.1942,  0.0501, -0.1062],
        [ 0.4209,  0.1107,  0.3423,  ...,  0.1940, -0.0686, -0.2491]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([555, 743, 174, 580, 685, 572, 296, 748, 167,   5, 283, 677,  48, 137,
        393, 660, 519,  70, 329, 173, 421,  17, 593,  16, 486, 423, 522, 165,
        103,  33, 724, 111, 408, 321, 258,  50, 489, 309, 472, 531, 608, 707,
        259, 109, 140, 593, 427, 314, 335, 132,  90, 203, 374, 384, 272, 384,
        142, 560, 179, 402, 173, 298, 749, 402], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4395,  0.0240, -0.1841,  ..., -0.1042,  0.0846,  0.1493],
        [ 0.2278, -0.2725, -0.0103,  ..., -0.1855,  0.1714, -0.0888],
        [-0.0370, -0.1370, -0.0333,  ..., -0.1584,  0.1869,  0.0316],
        ...,
        [ 0.3120,  0.4221,  0.0427,  ...,  0.1090,  0.2512,  0.0448],
        [ 0.1008,  0.3501, -0.0796,  ...,  0.3662, -0.0858, -0.2363],
        [ 0.3716,  0.1555,  0.6616,  ...,  0.0498, -0.1069,  0.0116]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([403, 166, 558, 400, 522, 103, 581, 345, 538, 587, 333, 128, 352, 242,
         77, 704, 708,   0, 247, 736,  96, 355,  92, 211, 410,  11, 262, 199,
        353, 140, 121, 166, 247, 329, 438, 511,  61, 322, 278, 601,  46, 459,
        593, 104, 299, 355, 184, 667, 209, 611,  61, 547,   7, 744, 412, 550,
        376, 440, 309, 406, 655, 116, 431,  25], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1490,  0.2157, -0.1755,  ..., -0.0934,  0.0475,  0.1930],
        [ 0.5557,  0.0831,  0.0699,  ...,  0.0042,  0.2228,  0.2583],
        [ 0.6064,  0.1663, -0.0458,  ...,  0.1483,  0.2715,  0.1576],
        ...,
        [ 0.0820, -0.1185,  0.2981,  ...,  0.2499, -0.3948,  0.2062],
        [ 0.2961,  0.3167, -0.3242,  ..., -0.2639,  0.0709,  0.0778],
        [ 0.3418, -0.1052, -0.0569,  ...,  0.0501, -0.3933,  0.0778]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([113,  63, 712,  63, 714, 289, 317, 316, 122, 571, 481, 203, 365, 112,
         68, 265, 495, 425, 204, 196, 365,  67, 165, 428, 386, 207, 744, 693,
        343, 350, 258, 591,  33, 598, 378,  46, 425, 414, 563, 408,  76, 389,
        542, 263, 411, 197, 314, 353,  67, 371, 663, 659, 700, 357, 605, 372,
        615, 113, 104, 503, 424, 147, 237, 513], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.3074, -0.4929,  0.5518,  ..., -0.1046, -0.2546, -0.1343],
        [-0.0301,  0.0888,  0.4192,  ...,  0.4011, -0.5698, -0.0199],
        [ 0.3926,  0.0790,  0.0404,  ...,  0.1959,  0.1906,  0.1396],
        ...,
        [ 0.2332,  0.1089, -0.1146,  ...,  0.1786,  0.2849,  0.0439],
        [ 0.2362,  0.2515,  0.1562,  ..., -0.0052, -0.0525,  0.2749],
        [ 0.3096, -0.1037, -0.3442,  ..., -0.0740, -0.5210, -0.0358]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([  3, 405, 507,  67, 301, 442, 436, 380, 147, 109, 382, 314, 680, 117,
        442, 558, 282, 254, 147, 288, 373, 329, 143, 186, 236, 364, 136, 630,
         18, 359, 693, 543, 183, 567, 420, 317, 371, 223, 597, 111,  70, 200,
         44,  17,  72,  45, 613, 282, 114, 364, 585, 328, 417, 343, 480, 208,
        611,  61, 429, 479, 625, 632, 214, 227], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0064,  0.1725,  0.0956,  ..., -0.0604, -0.2610, -0.2778],
        [ 0.0870,  0.1107,  0.3289,  ..., -0.1276, -0.2188,  0.2629],
        [ 0.1055, -0.2103, -0.0269,  ..., -0.2018,  0.1829, -0.1700],
        ...,
        [-0.0390, -0.1614, -0.2878,  ..., -0.0602,  0.0605, -0.1277],
        [-0.1917, -0.1364,  0.1177,  ..., -0.2310,  0.1788, -0.1606],
        [ 0.3042,  0.2120,  0.2937,  ...,  0.1693, -0.0427,  0.0764]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([192, 153,  63, 558,  18,  57, 712, 585, 568, 527, 414, 148, 230,  54,
        258, 143, 571, 741, 251, 237, 165, 136, 200, 127, 565, 299, 572,  96,
        287, 557, 633, 405, 419, 434, 408,  28, 558, 365, 609, 367, 553, 546,
         88, 598,  74, 276, 458, 209, 511, 519, 630, 371, 122, 725, 429, 365,
        154, 293,  52, 568, 636, 278, 289, 287], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1871,  0.0938,  0.1648,  ..., -0.0026,  0.0933, -0.1562],
        [ 0.0295,  0.0938, -0.0206,  ...,  0.0546,  0.3374,  0.2524],
        [-0.0695,  0.1064,  0.4463,  ...,  0.3760, -0.5947,  0.0236],
        ...,
        [ 0.2446,  0.1764,  0.4797,  ..., -0.1185, -0.1484, -0.1222],
        [ 0.2527,  0.2162,  0.2905,  ...,  0.1415,  0.1694,  0.0019],
        [-0.1068, -0.1357,  0.4143,  ..., -0.0780,  0.0742, -0.3181]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([165, 436, 221,  67, 663, 149, 171, 113, 414, 637, 352, 243,  33, 479,
        294, 226, 287,  70, 693, 562, 266, 181, 492,  90, 305, 192,   6, 442,
        671, 154, 133, 537, 148, 332, 257, 374, 578, 727, 120, 495, 351, 522,
        749,  51, 606, 522, 694, 701, 120, 736, 262, 337, 486, 639, 203, 245,
        137, 221, 218, 104, 128, 118, 607, 427], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0365,  0.0844,  0.1438,  ...,  0.1204, -0.0172,  0.0346],
        [ 0.5928,  0.1074,  0.1034,  ...,  0.3789,  0.0633,  0.0069],
        [ 0.0879, -0.1034,  0.0767,  ...,  0.4336,  0.2688,  0.1105],
        ...,
        [ 0.1166, -0.1827,  0.1161,  ...,  0.0460,  0.4077,  0.0807],
        [ 0.3506,  0.1147, -0.0395,  ..., -0.0987,  0.0087, -0.1815],
        [ 0.2759,  0.4861, -0.0315,  ...,  0.5239, -0.2695,  0.1603]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([257, 699, 359, 513, 226,  67, 377, 299, 550, 697,  70, 232, 580, 667,
        648, 614,  25, 187, 312, 320, 109, 122, 248,  63, 390, 216, 474, 318,
        416, 566, 635,  96, 129, 514, 398, 379,  26,  93, 532, 446, 179, 175,
        600, 673, 261, 142, 213, 702,  72, 515, 507, 701, 213, 203, 585, 213,
        719, 446, 695, 287, 611, 490,  70, 643], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1160,  0.2007,  0.2947,  ..., -0.0539, -0.2211,  0.1197],
        [ 0.4846,  0.0116,  0.1189,  ...,  0.0727,  0.0284,  0.1137],
        [ 0.2776,  0.2228, -0.2988,  ..., -0.1367,  0.0934, -0.2898],
        ...,
        [ 0.0612, -0.3376,  0.2861,  ..., -0.1110, -0.1478,  0.1554],
        [ 0.1289, -0.1478,  0.3718,  ...,  0.3264,  0.0101,  0.2401],
        [ 0.1147,  0.4604, -0.2424,  ...,  0.0361,  0.0936, -0.0022]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([666, 726, 370, 637, 390, 120, 113,  46, 702, 315, 275, 204, 511, 166,
        734, 398, 722, 364, 527, 320, 293,  45, 648,  89, 678, 412, 179, 136,
        136, 356, 682, 217, 163, 618, 134, 662, 308, 136, 132,  94, 104, 112,
        630, 603, 283, 169, 290, 495, 569, 373, 352, 493, 296,  67, 132, 626,
        129, 379, 447, 694, 642, 598, 144, 339], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1383, -0.2104, -0.0269,  ...,  0.2661,  0.2394,  0.2072],
        [ 0.3721,  0.2781, -0.0969,  ..., -0.5303, -0.1582, -0.0306],
        [ 0.3042,  0.1799,  0.0840,  ..., -0.3022, -0.0124,  0.4250],
        ...,
        [-0.0015, -0.1088,  0.3672,  ..., -0.0743, -0.2057, -0.0673],
        [-0.0159, -0.3398, -0.1110,  ...,  0.1346,  0.1082, -0.1179],
        [ 0.1910, -0.0515,  0.1979,  ..., -0.0388,  0.2634, -0.4150]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([378, 618,  30, 104, 424, 738, 485,  61,   6, 386, 315, 330, 560, 745,
         67, 443,  26, 325, 148, 181, 676, 654, 621, 538, 114, 632, 609, 137,
        745, 336, 620,  70, 708, 305, 466, 310, 734, 699, 459, 613, 184, 601,
        583, 150, 617,  54, 375, 428, 651, 507, 151, 209, 635, 696,  63, 544,
        131, 318, 680, 212, 321, 195, 158, 521], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 2.3352e-01,  2.8369e-01, -1.1865e-01,  ..., -2.8961e-02,
         -4.0674e-01,  3.5691e-04],
        [ 1.3989e-01, -1.0059e-01, -7.7783e-01,  ..., -2.4463e-01,
          6.1554e-02, -5.4718e-02],
        [ 3.0737e-01, -2.9053e-02, -3.8110e-01,  ..., -3.0444e-01,
          3.1494e-01,  1.5955e-01],
        ...,
        [ 2.4084e-01, -8.0078e-02,  2.5171e-01,  ...,  1.4001e-01,
         -2.5391e-02,  2.1814e-01],
        [ 1.2378e-01, -8.2214e-02,  3.3057e-01,  ..., -8.6548e-02,
         -1.8872e-01,  3.0981e-01],
        [ 1.3696e-01,  1.7480e-01, -3.5425e-01,  ..., -5.4590e-01,
         -5.6152e-02, -1.7920e-01]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([342, 227, 256,  48, 372, 645, 359, 309, 135, 364, 607, 606, 408, 354,
        232, 291, 690, 398, 227, 686, 149, 201, 597, 217,  61,   0, 261, 649,
         57, 381, 738, 110, 287, 475, 584, 362, 354, 585, 725, 531, 371, 114,
        644, 522, 339, 216, 318, 262, 424, 351, 338,  21, 496, 247, 299, 715,
        321, 686, 645, 663, 359, 131, 652, 558], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0880, -0.5308,  0.0803,  ..., -0.2203, -0.0810,  0.1044],
        [ 0.3025,  0.2362,  0.2944,  ...,  0.1522, -0.0392,  0.0775],
        [ 0.1066, -0.0217, -0.0364,  ...,  0.0724,  0.6709,  0.2832],
        ...,
        [ 0.3215, -0.0381, -0.0022,  ...,  0.0534, -0.0265,  0.2896],
        [ 0.0890, -0.0658,  0.2920,  ...,  0.1984,  0.0837,  0.4871],
        [ 0.5889,  0.1799, -0.0613,  ...,  0.1044,  0.2932,  0.1351]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 72, 165, 298, 711, 337, 331, 427,  33, 253, 580, 518, 144, 267, 648,
        337, 612, 262, 284,  54, 152, 607, 674, 580,  48,  13, 420,  51, 136,
         67, 571, 416,  55, 653, 558, 667, 248, 264, 484, 422, 409,  19, 705,
        630, 616, 446, 160, 308, 216, 568, 649, 310, 359, 376, 715, 132, 142,
         77, 668, 536, 129, 176, 418,  46, 408], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2515,  0.0557, -0.1266,  ..., -0.2837, -0.1628,  0.1886],
        [ 0.0180,  0.0497,  0.1103,  ...,  0.1065, -0.0129,  0.0139],
        [ 0.4001,  0.3489,  0.0375,  ...,  0.0927,  0.1509,  0.1061],
        ...,
        [ 0.2260, -0.0549,  0.1128,  ..., -0.1559,  0.1853,  0.1383],
        [ 0.1869, -0.2274,  0.0396,  ..., -0.1118,  0.4446,  0.5908],
        [ 0.0110,  0.3218,  0.1106,  ...,  0.0279, -0.0359, -0.0249]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([400, 633, 301, 104, 526, 600, 364, 742, 509, 245, 597, 474, 500, 654,
         45, 529, 306, 742, 282, 735, 157,   4, 277,  46, 392, 573, 227, 649,
        136, 411, 689,  67, 645, 470, 305, 632, 245, 272, 247, 218, 180,  93,
        189, 241, 129, 344,  96, 314, 473,  27, 131, 363, 598, 232, 302, 187,
        657, 128,  67, 317,  67, 321, 466, 370], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3967, -0.0775, -0.3062,  ..., -0.3799,  0.1400, -0.1495],
        [-0.2949, -0.1012, -0.0578,  ..., -0.0065,  0.1609, -0.1259],
        [-0.2260, -0.0684,  0.2893,  ...,  0.0930,  0.5938,  0.0950],
        ...,
        [-0.0929,  0.6440, -0.0335,  ..., -0.1229,  0.1567,  0.2184],
        [ 0.1606, -0.3218,  0.1946,  ...,  0.1135, -0.1997, -0.0302],
        [ 0.2888,  0.1746,  0.0967,  ..., -0.3164, -0.0710,  0.4373]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([298, 219, 436, 700, 369, 684, 387, 267, 538, 589, 434, 317, 196,  44,
        498, 635, 499, 565, 341, 580,  48,  94, 481, 338, 164, 501, 450, 562,
        440, 750, 470, 492, 691, 312, 515, 586, 274, 133, 640, 576, 115,  81,
        427, 109, 109, 127, 599, 630,   6, 720, 119, 149, 182, 663, 153, 123,
        230, 399, 462, 153, 647, 111, 121, 161], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4304,  0.3298,  0.0226,  ...,  0.1058,  0.1365,  0.1315],
        [ 0.5098,  0.1713,  0.0746,  ..., -0.1177, -0.1882,  0.2595],
        [ 0.5981,  0.1072,  0.0465,  ...,  0.4048,  0.0183,  0.0486],
        ...,
        [ 0.4771,  0.1017,  0.3379,  ...,  0.0704,  0.2382,  0.1898],
        [-0.0196,  0.0211,  0.0902,  ..., -0.0931, -0.0056,  0.1478],
        [ 0.4905,  0.1915,  0.1476,  ..., -0.0584,  0.4761,  0.4116]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([536, 403,  13, 433, 675, 151, 575, 736, 434, 608, 380, 167, 385, 566,
        655, 522, 574,  33, 267, 314, 659, 567, 175, 641, 529, 690,  11, 463,
        525, 380, 131, 256, 591, 150, 113, 395, 453,  86, 594, 152, 210, 425,
        620, 108, 420, 469, 290, 720, 357, 600, 718, 353,  72, 715, 376, 485,
        181, 532, 101,  67, 578, 332, 374, 203], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2583,  0.1796,  0.0911,  ...,  0.0588,  0.1927,  0.0262],
        [ 0.0831,  0.1842, -0.2028,  ..., -0.0605,  0.0486,  0.1744],
        [-0.0487, -0.4104,  0.4214,  ...,  0.1636, -0.0058, -0.0140],
        ...,
        [ 0.1720, -0.0866,  0.3291,  ..., -0.1544, -0.0285,  0.2366],
        [ 0.3823,  0.0077,  0.2502,  ..., -0.0622, -0.4517, -0.1837],
        [ 0.1212, -0.4917,  0.0462,  ...,  0.0741,  0.0780,  0.1063]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([193, 650, 643, 148, 314,  56, 740, 480, 710, 505,  67, 729, 416, 358,
        329, 301, 674, 307, 340, 219, 700, 482, 207, 671,  45, 222, 655, 254,
        177, 367, 309, 663, 170, 340, 178, 215, 589, 728, 306, 135,  61, 112,
        581,  30, 503, 330, 342, 143,   3, 133, 149, 416, 131, 216, 131, 637,
        381, 590,  13, 579,  93, 175, 562, 476], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0533, -0.1722,  0.2874,  ..., -0.1432, -0.2285, -0.2559],
        [ 0.3647,  0.3701, -0.2148,  ..., -0.1824, -0.0491,  0.1550],
        [ 0.1003,  0.4553, -0.2729,  ...,  0.0304,  0.0771,  0.0057],
        ...,
        [ 0.3113,  0.0226, -0.1761,  ..., -0.1422, -0.2231,  0.0397],
        [ 0.0218, -0.1967,  0.1486,  ..., -0.0383, -0.0116,  0.0497],
        [ 0.4663, -0.1508,  0.2000,  ...,  0.3474, -0.2532,  0.1208]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([  0, 142, 437, 644, 288, 133, 186, 416, 115, 137, 646,  67, 313, 186,
         89, 102, 748, 594, 713, 152,  37, 109, 223, 289,   7, 180,  26, 328,
        174, 216, 328, 715,  12, 138, 443,  59, 424, 735,  48, 363, 554, 499,
        303,   6, 748, 112, 144, 403, 423, 630, 173, 632, 529,  26, 429, 122,
        268, 111, 315, 603, 653, 425, 452, 148], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2488,  0.0450,  0.1510,  ...,  0.0714,  0.2047, -0.1605],
        [ 0.3865,  0.3088,  0.0616,  ...,  0.3831, -0.0606,  0.3367],
        [ 0.2427, -0.0837,  0.5405,  ...,  0.4797, -0.3145,  0.2700],
        ...,
        [ 0.4307, -0.4375,  0.2847,  ...,  0.1942, -0.0664,  0.3320],
        [-0.1137, -0.2805, -0.1439,  ...,  0.1107, -0.2406, -0.2085],
        [ 0.3281,  0.2172, -0.0347,  ..., -0.1927, -0.1273,  0.0305]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([376, 297, 358, 347, 617,  49,   0, 104, 581, 745, 366, 648, 285, 210,
        119, 649, 315, 749, 344, 306, 280, 668, 234, 709, 627,  18, 342, 414,
        148,   6, 685, 323, 597, 317, 177, 384, 356, 556, 375, 129, 747, 298,
         69, 481, 129, 372,  59, 642, 183,  59, 379, 161,   0,  89, 151, 362,
        215, 696,  63, 293, 436, 195, 220, 328], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2817,  0.1565,  0.0963,  ...,  0.0908,  0.0914,  0.1987],
        [ 0.0804, -0.0830, -0.0967,  ...,  0.1072,  0.0032,  0.0953],
        [ 0.1334,  0.0257,  0.4622,  ...,  0.2581,  0.1554, -0.0854],
        ...,
        [ 0.2181, -0.0878,  0.2400,  ...,  0.1638, -0.0055,  0.1998],
        [ 0.0801,  0.2042,  0.1643,  ...,  0.0015, -0.0571, -0.0018],
        [ 0.4399,  0.2467,  0.1827,  ...,  0.3435,  0.1638,  0.3369]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([598, 603, 721, 213, 587, 605, 237, 613, 163, 179, 337, 609, 147, 203,
        294, 336, 129,  18, 385, 649, 177, 113, 422, 194, 140, 149,  44, 345,
        589, 429, 203, 565, 345, 149, 666, 636, 293, 284,  13, 601, 269, 321,
        287, 293, 318, 571,  94, 239, 281, 366, 425, 315, 378, 360, 286, 166,
        353, 250, 444, 423, 153,  78, 312, 107], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 6.4758e-02, -9.0759e-02,  4.6899e-01,  ...,  3.9520e-02,
         -2.5415e-01, -2.2182e-03],
        [-3.6499e-02,  7.6904e-02,  1.2347e-01,  ...,  2.6611e-01,
          2.2009e-01, -1.7041e-01],
        [-7.8796e-02, -2.4414e-01, -3.9746e-01,  ...,  4.2261e-01,
         -5.2393e-01,  1.3562e-01],
        ...,
        [-4.9543e-04,  1.0498e-01,  2.2437e-01,  ..., -1.6174e-02,
          9.8755e-02, -4.6326e-02],
        [ 2.4548e-01,  1.3489e-01, -7.9590e-02,  ...,  2.9541e-02,
          4.0820e-01,  1.6327e-02],
        [ 4.5996e-01,  7.2327e-02,  2.6646e-03,  ..., -2.0462e-02,
          1.7078e-01,  4.4360e-01]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
2025-04-03 13:08:38,656 transreid.train INFO: Epoch[1] Iteration[150/203] Loss: 8.016, Base Lr: 7.80e-05
label tensor([ 87, 729, 343, 617, 608, 114, 185, 238, 359, 127, 541, 648, 649, 688,
        111, 594, 416, 732, 675, 438, 414, 165, 686, 315, 102, 737, 110, 241,
        526, 477, 576,  44, 224, 665, 341, 339, 221, 591, 556, 679, 310, 649,
        618, 125,  97, 136, 520, 132, 153, 364, 130, 625, 636, 152, 302, 554,
        141, 498, 289, 387,  97,  43, 346, 512], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5752,  0.4500,  0.0723,  ...,  0.0765,  0.3201, -0.2666],
        [ 0.1842, -0.1387, -0.1062,  ..., -0.1549,  0.0356,  0.1661],
        [ 0.1758, -0.1404, -0.3193,  ...,  0.1305, -0.0811,  0.3635],
        ...,
        [-0.0257,  0.1234, -0.2141,  ...,  0.1847, -0.0070, -0.6729],
        [-0.0043,  0.0243,  0.1094,  ...,  0.0907, -0.0062, -0.1652],
        [ 0.2253,  0.0712, -0.1011,  ..., -0.1056,  0.0276,  0.1410]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 18, 248,  16, 428, 649, 209, 104,  16, 639, 300, 112, 403, 429, 345,
        387, 123, 219, 339, 632, 317,  85,  12, 251, 122, 403, 399, 102, 208,
        680, 376, 744, 226, 487, 242, 459, 126, 376, 573, 104, 526,   0, 554,
        738, 690, 255, 588, 368, 136, 244, 748,  49, 700, 558, 173, 486,  47,
        513, 330, 505, 532, 496, 136, 250, 619], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.7881,  0.4053, -0.0487,  ..., -0.0560, -0.1044,  0.1516],
        [ 0.1008,  0.3281,  0.1119,  ..., -0.1827,  0.1921, -0.5615],
        [ 0.1838,  0.0157,  0.1893,  ...,  0.0273, -0.0864,  0.0837],
        ...,
        [-0.1399, -0.2434,  0.4971,  ...,  0.0309, -0.2007, -0.0179],
        [ 0.1111,  0.1912,  0.0195,  ..., -0.0102, -0.0178,  0.1160],
        [ 0.6582,  0.0715, -0.3933,  ..., -0.0729,  0.2302,  0.1791]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([288, 272, 642, 141, 720, 631, 473, 104, 503, 669, 481, 103, 172, 154,
        748, 148, 474, 392, 743,  63, 332, 637, 330,  72, 428, 708, 132, 259,
        215,  34, 495, 616, 131, 392, 113, 254,  78, 222, 365,  72, 136, 522,
        497, 410, 112, 710,  29, 120, 101,  33, 341, 213,  21, 262, 362, 405,
        426, 366, 332, 321, 258, 593, 226, 717], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0351, -0.2152, -0.0053,  ...,  0.1106,  0.1126,  0.0553],
        [-0.0085,  0.0392,  0.3657,  ..., -0.0815,  0.2448,  0.0824],
        [ 0.2612,  0.0297,  0.3552,  ...,  0.1431,  0.1892,  0.1208],
        ...,
        [ 0.3291,  0.3074,  0.2051,  ..., -0.2067,  0.4976, -0.0038],
        [-0.0042, -0.2120,  0.3503,  ..., -0.0225,  0.0919,  0.0860],
        [ 0.7129,  0.1193,  0.1842,  ..., -0.1700,  0.2169,  0.4050]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([399, 146, 418, 385, 136,  72, 182, 454, 199, 662,  61, 568, 357,   1,
        285, 232, 662, 371, 140, 479, 702, 249,  33, 210, 523, 708, 151, 294,
        274, 560, 321, 193, 429, 658, 425, 161, 368, 104, 136, 101, 372, 140,
        722, 291, 422, 237, 231, 237, 249, 727, 503, 353, 105, 366, 341, 153,
        687, 167, 361, 748,  51, 668, 293, 462], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0208, -0.2727, -0.0082,  ...,  0.2434, -0.0063,  0.3047],
        [-0.0369,  0.2373,  0.1525,  ..., -0.0330, -0.1002,  0.0703],
        [ 0.2432, -0.0607,  0.0779,  ..., -0.1521,  0.1844,  0.1364],
        ...,
        [ 0.2471, -0.2695, -0.4775,  ...,  0.2244,  0.0599, -0.0275],
        [ 0.0464,  0.0385,  0.5952,  ..., -0.2817,  0.1844, -0.0396],
        [ 0.4387,  0.0791,  0.6426,  ..., -0.0131,  0.0258,  0.2617]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([529, 226, 140, 392, 116, 160, 636, 383,  72,  69, 427, 392, 472,  25,
        567, 215, 748, 654,  88, 421, 386,  18, 505, 614, 317, 646, 747, 539,
        403, 693, 599, 194, 364, 508, 321, 112, 196, 219, 318, 474, 534, 601,
        101, 659, 564, 520, 373,  45, 173,  45, 517, 271, 432,  88,  21, 131,
        398,  67, 305, 509, 254, 310, 399, 750], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3438, -0.5376, -0.2795,  ..., -0.0469, -0.1373,  0.1302],
        [-0.0187, -0.2321,  0.3516,  ..., -0.0089,  0.0931,  0.0799],
        [-0.0367,  0.2235,  0.0726,  ...,  0.0152, -0.1302, -0.2384],
        ...,
        [ 0.3826,  0.2898, -0.0157,  ...,  0.1661,  0.1083, -0.1864],
        [ 0.0198, -0.2771, -0.0119,  ...,  0.2434, -0.0036,  0.3057],
        [ 0.2805,  0.3997, -0.3157,  ...,  0.1838,  0.0283, -0.0019]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([562, 197, 349,  12, 560, 680, 654, 362, 637, 557, 525,  13, 686, 185,
        583, 706,  53, 112, 476, 389, 622, 137, 643, 659, 736, 379, 617, 470,
        363, 548, 336, 522, 138,   8, 518, 299,  46, 389, 593,  89, 128,  93,
        653, 151, 744, 173, 311, 594, 220, 386, 675, 470,  30, 557, 477, 725,
        337,  59,  86,  47, 425, 340, 708, 642], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 4.3640e-02, -2.5684e-01,  6.5002e-02,  ..., -5.4688e-02,
         -3.0579e-02,  6.2622e-02],
        [ 4.8584e-01,  6.3538e-02, -6.5796e-02,  ...,  2.9932e-01,
          1.7236e-01, -4.1687e-02],
        [ 2.1570e-01, -7.4463e-02, -1.1726e-02,  ..., -2.3169e-01,
          7.1289e-02,  4.3144e-03],
        ...,
        [-2.3961e-04, -6.2866e-02, -1.7871e-01,  ...,  1.1157e-01,
          4.6387e-01, -4.0649e-01],
        [ 1.5686e-01, -3.0005e-01,  7.5745e-02,  ...,  2.6855e-01,
          4.7241e-02,  2.3145e-01],
        [ 2.7197e-01,  4.1290e-02,  3.7183e-01,  ...,  1.4636e-01,
          1.8896e-01,  1.0529e-01]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([160,  54,  24,  21, 648, 376, 144, 647, 105, 585, 560, 681, 358,  72,
        234, 688, 503, 159, 136, 651, 640, 583, 158, 588, 356, 155, 182, 644,
        645, 416, 170, 589, 533,  48, 190, 380, 677, 136, 387,  90,  57, 152,
        378, 255, 345, 258, 398, 327, 554, 239, 633, 250, 364, 159, 120, 546,
         44, 217, 232, 649, 299, 363, 618, 607], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2190,  0.5015, -0.0445,  ...,  0.1837, -0.2952, -0.1073],
        [ 0.0602, -0.2644,  0.1499,  ..., -0.3594,  0.3057,  0.1068],
        [-0.0013,  0.1089,  0.1559,  ...,  0.0037,  0.2015, -0.1676],
        ...,
        [ 0.2260, -0.0801, -0.1021,  ...,  0.1827,  0.6577, -0.1782],
        [ 0.1371, -0.1149, -0.7056,  ..., -0.2340,  0.0601, -0.0647],
        [ 0.2825,  0.1351, -0.1058,  ..., -0.1693,  0.0352, -0.2198]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([522, 651, 481, 592, 357, 676, 459, 240, 428, 155, 704, 101, 448,  78,
        392, 147, 135, 637, 132,  72, 495,  18, 617, 433, 147, 304, 135,  97,
        625, 600, 182, 441, 190, 101, 624, 329, 339, 289, 748, 506, 474, 115,
        292, 411, 303, 475, 363, 655, 598, 414, 425, 366, 649, 148, 360, 145,
         67, 667, 740,  39, 379, 163, 343,  54], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0765,  0.2639,  0.2710,  ..., -0.0070,  0.5308,  0.2419],
        [ 0.2793, -0.2954,  0.0006,  ...,  0.1691,  0.2336,  0.3147],
        [ 0.2466, -0.0745,  0.1049,  ...,  0.2432, -0.1248, -0.0535],
        ...,
        [ 0.4607,  0.3530,  0.3796,  ..., -0.0989,  0.5303,  0.2749],
        [ 0.1552, -0.1362, -0.3350,  ...,  0.1069, -0.0679,  0.3909],
        [ 0.0651, -0.2656,  0.1556,  ..., -0.3506,  0.3169,  0.1091]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([529, 388, 256, 177, 529, 569, 384, 233,  47, 478, 181,  24, 433,  44,
        607, 637, 141, 217, 322, 347, 204, 479, 364, 240, 483, 484, 597, 675,
        248, 289, 500, 402, 490, 498, 167,  54, 112, 373, 242, 109, 575,  51,
        406, 405, 528, 701, 750, 220, 594, 462, 651, 165,  18, 521, 696, 633,
        136, 342, 510,  46, 696, 251, 272, 120], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 3.2080e-01, -5.5420e-01, -2.6855e-01,  ..., -4.5563e-02,
         -1.4258e-01,  1.2598e-01],
        [ 1.3733e-01, -6.4880e-02, -1.0602e-01,  ..., -2.9102e-01,
         -1.3818e-01,  1.2903e-01],
        [ 6.1371e-02,  1.0809e-01, -2.4338e-02,  ...,  8.7769e-02,
          7.3633e-01,  1.8811e-01],
        ...,
        [ 1.5161e-01, -2.5952e-01,  2.0630e-01,  ..., -4.1914e-04,
         -2.2424e-01, -1.9516e-02],
        [-2.1866e-02,  3.1830e-02,  3.8574e-01,  ..., -7.2083e-02,
          2.5244e-01,  4.7516e-02],
        [ 1.1279e-01,  1.0327e-01,  2.2278e-01,  ..., -2.1698e-02,
          3.2471e-01, -1.5515e-01]], device='cuda:0', dtype=torch.float16,
       grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([405, 589, 286, 436, 329, 218, 170, 545, 363, 399, 600, 176, 390, 493,
        438, 554, 297, 607, 226, 373,  45, 412, 428, 132, 194, 339, 599, 290,
        176, 232, 171, 730, 343, 608, 190, 113, 336, 244, 588, 577, 165, 342,
        130, 354, 522, 314, 332, 298, 406, 677,  93,  29, 292, 288, 743, 193,
        130, 569, 380, 383, 153, 711, 662,  79], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1696,  0.0692,  0.3416,  ..., -0.0753, -0.2437,  0.3252],
        [ 0.2808, -0.0147,  0.3384,  ...,  0.0169,  0.3828, -0.0911],
        [ 0.5859,  0.1411,  0.0849,  ..., -0.2822, -0.1439, -0.0143],
        ...,
        [ 0.2184,  0.3838,  0.5015,  ...,  0.0537, -0.2546, -0.3311],
        [ 0.2423, -0.2111,  0.0376,  ..., -0.0873,  0.2856, -0.2139],
        [ 0.5171, -0.0791,  0.1262,  ..., -0.3159, -0.0293,  0.3523]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 63, 224, 565, 177, 395, 167, 181, 130, 654, 642,  51, 698, 678, 286,
        207, 150, 285, 531, 329, 462, 173, 684,  76, 684, 647, 383, 479, 534,
        119, 712, 367, 720, 366, 372, 651, 659,   6, 442,  48, 361, 605, 314,
        563, 131, 355, 163, 601,  53, 518, 353, 427, 609,  51, 344, 653, 718,
        217, 586, 174, 336, 129, 617, 139, 596], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0557,  0.0686,  0.2373,  ...,  0.3101, -0.3354, -0.0609],
        [ 0.3020, -0.2053,  0.4197,  ..., -0.0751, -0.3857,  0.0761],
        [ 0.3704,  0.2588, -0.1655,  ..., -0.2181, -0.1755, -0.2578],
        ...,
        [ 0.2871, -0.0199, -0.0469,  ..., -0.0764, -0.1252,  0.1326],
        [ 0.1632, -0.0703, -0.0092,  ...,  0.0354,  0.0043,  0.0858],
        [ 0.4167, -0.0366, -0.1827,  ...,  0.3901,  0.0452,  0.1917]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([519,  56,  92, 338, 442, 411, 692, 572,  15, 601, 375, 425, 104,  37,
        383,  69, 577,  38, 364, 212,  25, 676, 428, 434, 141, 339, 312, 651,
        520, 514, 496,  44, 459, 247, 342, 442, 734, 379, 595, 522, 248,   9,
        343, 644,  33, 128,  70, 645, 194, 220, 539, 274, 235, 374, 379, 592,
        284, 314, 344, 403, 176, 232, 349,  31], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3433, -0.1481,  0.2771,  ..., -0.2617,  0.0963, -0.2222],
        [-0.0492,  0.0567, -0.1182,  ..., -0.2502, -0.2201,  0.3521],
        [ 0.1367,  0.0916, -0.0913,  ..., -0.2195,  0.0553, -0.3508],
        ...,
        [ 0.1242,  0.1161,  0.2234,  ...,  0.0050, -0.1060, -0.4912],
        [ 0.1991, -0.0019,  0.0975,  ..., -0.3521, -0.0350,  0.0707],
        [ 0.2739,  0.3174, -0.4507,  ..., -0.3289,  0.0769,  0.2469]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([141, 242, 585, 417, 577, 349, 632, 725, 600,  50, 689, 709, 733, 440,
        320, 707, 720, 477, 353, 144, 333, 259, 714, 630, 496, 350, 425, 425,
        650,  30, 293, 730, 165, 183, 514, 597, 435,  87, 166, 475, 338, 704,
        343, 512, 171, 582, 606, 496, 351, 133, 297, 493,  72, 411,  67, 609,
        505, 569, 156, 260, 639, 507, 535, 654], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.1234,  0.1814,  0.3464,  ...,  0.1085,  0.1193,  0.1493],
        [ 0.3459, -0.0464, -0.4080,  ...,  0.1432,  0.2087, -0.0417],
        [ 0.2206,  0.2583,  0.1603,  ..., -0.2108,  0.1125,  0.2522],
        ...,
        [ 0.0519, -0.3394,  0.0341,  ..., -0.2322,  0.1635, -0.2808],
        [ 0.0120, -0.0334,  0.0972,  ..., -0.0226,  0.0016,  0.1505],
        [ 0.4863, -0.1599, -0.2861,  ..., -0.0765, -0.0508, -0.0618]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([171,  46,   6, 695,  27, 364, 600,  87, 113, 398, 726, 678, 231, 296,
        578, 693, 251, 112,  61, 651, 531, 358, 405, 383, 421, 640, 718, 406,
        572, 315, 624, 505, 396, 725, 511, 461, 667, 473, 115, 384, 613, 392,
        402, 340, 377, 619, 403,  81, 712, 345, 175, 655, 539, 309, 746,  11,
        407, 718, 437, 114, 490, 713, 727, 134], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2781, -0.0986,  0.0158,  ...,  0.0668,  0.0021,  0.1404],
        [ 0.2277, -0.3030,  0.1148,  ..., -0.1002,  0.4094,  0.5737],
        [ 0.0256,  0.1008,  0.2573,  ..., -0.1100,  0.0036, -0.1304],
        ...,
        [ 0.1533,  0.1825,  0.3748,  ...,  0.1875, -0.0990, -0.3271],
        [ 0.4475, -0.1191,  0.0814,  ...,  0.1733,  0.4390, -0.0347],
        [ 0.3335,  0.3665,  0.3999,  ...,  0.1713, -0.0396,  0.0250]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([315, 411, 479, 392, 630, 523, 353, 329, 382, 519,  29, 500,  96,  44,
        293, 149, 399, 493, 617,  67, 515, 408, 110, 694, 496, 212,  67, 102,
         33, 346, 337, 340, 305, 338, 175, 293, 718,  25, 366,  54, 133, 190,
        611, 140, 151, 433, 557, 750, 213, 608, 327, 505, 176, 677, 130, 293,
        253, 220, 177, 309, 609, 589, 248, 429], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4734, -0.0699,  0.1575,  ...,  0.3511,  0.3450,  0.2585],
        [ 0.0677,  0.0771, -0.2483,  ...,  0.1209, -0.0173, -0.1967],
        [ 0.0884, -0.0821,  0.1407,  ..., -0.1131, -0.3013, -0.2201],
        ...,
        [ 0.3015, -0.0276,  0.3743,  ...,  0.0058,  0.3303, -0.0948],
        [ 0.0830,  0.3157,  0.0893,  ..., -0.1869,  0.2249, -0.5713],
        [ 0.4202,  0.2634,  0.3799,  ..., -0.0846,  0.0825, -0.0895]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([317, 585,  70, 204, 357, 434, 607, 691, 427, 640, 601,  26, 393, 284,
        481,  54,  72, 378, 495,  33, 433, 643,  67, 691, 216, 626,  57, 155,
         63, 120,  57, 404, 367, 286, 214, 234, 433, 122, 305, 132, 425, 710,
        132, 376, 131, 495, 473, 241, 585, 637, 722, 655, 598, 708, 309, 276,
          7,  63, 331, 698, 513, 216, 555, 718], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1212, -0.0366,  0.2734,  ..., -0.2000, -0.1929, -0.1996],
        [ 0.2363,  0.2776,  0.1569,  ..., -0.2273,  0.1102,  0.2595],
        [ 0.1305, -0.0989,  0.3516,  ...,  0.2756, -0.1869,  0.2056],
        ...,
        [ 0.1996,  0.0737,  0.4741,  ..., -0.3691,  0.0746,  0.0547],
        [ 0.4653, -0.0947, -0.0370,  ..., -0.0367,  0.0297,  0.1107],
        [ 0.5557, -0.2167,  0.0538,  ...,  0.1218, -0.0383, -0.0356]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([115, 627, 272, 338,  94, 351, 147, 482, 477, 368, 167, 356,  50, 724,
        418, 434, 302, 227, 597, 433, 153, 152, 554, 323, 678, 420, 703, 121,
        537, 112, 510,   6, 383, 272, 144, 341, 537,  98, 496, 282, 252, 495,
        747, 136, 464, 115, 314, 193, 282, 565, 237, 229, 630,   9, 429, 369,
        344,  72, 310,   6, 282, 320,  11, 425], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1808,  0.0663, -0.3171,  ...,  0.0174,  0.1282, -0.0067],
        [ 0.3625,  0.2024, -0.0322,  ..., -0.0411,  0.2708, -0.1185],
        [ 0.0027,  0.0184,  0.3662,  ..., -0.0618,  0.2537,  0.0482],
        ...,
        [ 0.4797, -0.4846, -0.2404,  ...,  0.0200,  0.2103,  0.1947],
        [ 0.3135,  0.0194,  0.0204,  ...,  0.0920,  0.2529,  0.2727],
        [ 0.4060, -0.3845,  0.3262,  ...,  0.3113, -0.0188,  0.3628]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([552, 492, 178, 326, 293, 217, 106, 506, 226, 516, 685, 540, 366,   9,
        725, 486, 166, 392, 683, 446, 734, 499, 312, 356, 678,  10,  76, 219,
        345,   0, 433, 210, 237, 523, 714, 682, 496,  26, 288, 154, 335, 531,
         96, 192, 417, 216, 131, 468, 176, 710, 176, 418, 501,  26, 305, 734,
        738, 566, 671, 296, 276,   6, 271, 354], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0756, -0.0111,  0.0404,  ...,  0.1076,  0.2173,  0.1401],
        [ 0.1990, -0.2301,  0.2323,  ...,  0.1530, -0.0539,  0.2146],
        [ 0.3708, -0.3562,  0.2595,  ...,  0.0835, -0.0637, -0.2153],
        ...,
        [ 0.0517,  0.1099,  0.2859,  ..., -0.1001, -0.0186, -0.1580],
        [ 0.2720,  0.1824, -0.6416,  ..., -0.0857,  0.0726,  0.2419],
        [ 0.1478, -0.1946,  0.3291,  ...,  0.2075,  0.0059, -0.0659]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([131, 722,  57, 451, 234, 598,   9, 250, 417, 682, 391, 269, 280, 210,
        167, 748, 269, 158, 314, 526, 259, 645, 736, 100, 169, 502, 655, 694,
        365, 630,  63, 637, 481, 667, 191, 357, 115, 215, 244, 420, 524, 179,
        371, 104, 136, 478, 650, 515,  63, 251, 392, 165, 563, 409, 318, 533,
        368, 127, 423, 414, 490, 555, 166, 709], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2465, -0.1917, -0.0476,  ...,  0.0100,  0.0117,  0.2939],
        [ 0.1956,  0.0206,  0.2126,  ..., -0.1130, -0.2952,  0.0930],
        [ 0.0270,  0.1520,  0.0337,  ...,  0.2732,  0.0812,  0.0794],
        ...,
        [ 0.5269, -0.1142,  0.0120,  ..., -0.0191,  0.0296,  0.0784],
        [ 0.6299,  0.1093,  0.0235,  ...,  0.0848,  0.2766,  0.2397],
        [ 0.0760,  0.1127,  0.1555,  ..., -0.0183, -0.0217, -0.1597]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([488, 721, 166, 210, 366, 513,  63, 367, 203, 198, 132, 712, 318, 121,
          6,  63, 296, 389,  33, 354, 439, 230, 198, 529, 309, 230, 653, 541,
        317, 648,  77, 146, 537, 136, 109, 486, 289, 289, 749,  34, 432, 494,
        257, 118, 364, 107, 580, 701, 712, 524, 399, 559, 707, 201, 378,  59,
        376, 376, 115, 737, 192, 290, 693, 175], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4673, -0.3269, -0.0245,  ..., -0.1816, -0.0252,  0.0671],
        [ 0.1781, -0.1844, -0.3396,  ...,  0.4438, -0.4683,  0.2046],
        [ 0.6284,  0.1237,  0.0199,  ...,  0.0761,  0.2793,  0.2482],
        ...,
        [ 0.5342, -0.0994,  0.0277,  ..., -0.0606, -0.1277, -0.1892],
        [ 0.0383, -0.1203, -0.1069,  ..., -0.3770, -0.4824,  0.0132],
        [ 0.3342, -0.0103, -0.0878,  ..., -0.1610, -0.1432,  0.0269]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([510, 497,  27, 216, 446, 584, 148, 297, 312, 604, 708, 104, 701, 258,
        624,   0,  12, 398, 684, 376, 715, 414, 379, 429, 258, 117, 691, 731,
        410, 363, 218, 657, 246, 233, 150, 175, 298,  72, 294,  67, 572, 402,
        386, 593, 679, 149, 238, 613, 579, 499,  27, 502,  46, 526, 549, 192,
        465, 102, 695, 717, 115, 315, 213, 297], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4082, -0.1040,  0.0979,  ...,  0.1948,  0.0079, -0.0839],
        [ 0.1722, -0.2391, -0.2281,  ..., -0.2559,  0.1161,  0.0588],
        [ 0.2549, -0.1367, -0.1055,  ...,  0.1759, -0.0046,  0.1857],
        ...,
        [ 0.4866, -0.0657,  0.1575,  ...,  0.3486,  0.3135,  0.2747],
        [ 0.0867,  0.1252, -0.4639,  ..., -0.0837,  0.4463,  0.0575],
        [ 0.1080, -0.0632, -0.1926,  ...,  0.1260, -0.0795,  0.1019]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([640, 147, 141, 224,  26,   3, 673, 425, 100, 281, 630, 163, 143, 649,
        355,   0, 630, 232, 474, 542, 598, 201, 648,  67, 400, 113, 741, 248,
        723, 718, 479, 727, 147, 545, 566, 517, 284, 231,  93,   0, 411, 511,
        407,  89, 667,  72, 744, 314,   0, 368,  51,  17, 536, 617, 654, 124,
        108, 250, 274, 506, 590, 223, 646, 190], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1667, -0.1093, -0.3726,  ...,  0.2505,  0.2681, -0.1812],
        [ 0.2072,  0.0571, -0.1804,  ...,  0.1245,  0.3511,  0.0246],
        [ 0.0798,  0.3320,  0.2109,  ...,  0.2225, -0.0025,  0.1840],
        ...,
        [ 0.6323, -0.1965,  0.7598,  ..., -0.2285, -0.2063, -0.0796],
        [ 0.2277,  0.1200, -0.0916,  ..., -0.3599, -0.0787,  0.2000],
        [ 0.2876, -0.1171, -0.2720,  ...,  0.2971, -0.2778,  0.0421]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([  6, 238,  45, 534, 355, 330, 359,  88, 526, 354, 188, 624, 288,  82,
        419, 330, 567, 237, 497, 112, 226, 258, 452,  98, 156, 600, 611, 369,
        484, 153, 368, 189, 403, 145, 385,  33,   6, 325, 181, 691, 653, 685,
        201, 314, 392, 531, 547,  30, 416, 699, 677, 471, 504, 201, 288,  33,
        294, 229, 295,  45, 149, 660,  46, 518], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0587,  0.1172,  0.3164,  ..., -0.0879, -0.0220, -0.1725],
        [-0.2756,  0.2192,  0.1676,  ..., -0.1841,  0.1849,  0.2646],
        [-0.0826,  0.0375,  0.2876,  ..., -0.2140,  0.2837,  0.2776],
        ...,
        [ 0.0606, -0.2294,  0.3137,  ..., -0.0498,  0.1260, -0.1309],
        [ 0.2434, -0.2776,  0.1273,  ..., -0.0763,  0.3914,  0.5815],
        [-0.1037,  0.2267, -0.0684,  ..., -0.1588, -0.0864, -0.3643]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([248, 471, 643,  53, 193,  28,  53, 377, 280, 603, 279, 336, 394, 428,
        480, 129, 349, 299, 318, 677, 422, 693, 574, 481, 220, 640,  70, 315,
        480, 654, 130, 723, 107, 716, 330, 306, 227, 364, 628, 330, 317, 374,
        640, 584, 112, 339, 496, 491,   8, 608, 358, 253, 289, 135,  45,  58,
        675, 298, 177,  96, 284,  12, 626, 145], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0714,  0.2910,  0.0673,  ..., -0.1765,  0.2566, -0.5723],
        [ 0.3420,  0.0256, -0.1094,  ...,  0.2072, -0.1943, -0.0125],
        [ 0.1434,  0.5103, -0.1624,  ...,  0.0572, -0.0307,  0.0858],
        ...,
        [ 0.0702, -0.2803, -0.3687,  ...,  0.0516, -0.3589,  0.0419],
        [ 0.3188,  0.3850,  0.1578,  ..., -0.1820,  0.1125, -0.2349],
        [ 0.2468,  0.2798, -0.0852,  ..., -0.1401,  0.0164,  0.2496]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([580, 325,   8, 124, 131, 422, 591, 611,   0, 399,  75, 544, 394, 102,
        257, 317, 263, 224, 400, 557,  59, 584,  30, 570, 589, 119,  54, 315,
        104, 689, 672,  77,  59, 443, 176, 600, 413, 314,  99, 147, 722, 562,
        531, 218, 134, 636, 164, 456, 581, 201, 551, 302, 596, 500, 369, 530,
        119, 262,  53, 750, 440, 434, 126,  18], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0605,  0.0510,  0.1239,  ...,  0.3557,  0.0712, -0.1223],
        [ 0.3564,  0.0515, -0.1486,  ..., -0.1213, -0.1091, -0.1754],
        [ 0.4106,  0.0376, -0.0340,  ...,  0.0294, -0.1089,  0.0924],
        ...,
        [ 0.1598, -0.4722,  0.4819,  ...,  0.1537, -0.2632,  0.2308],
        [ 0.4211, -0.1092, -0.3638,  ..., -0.0157, -0.0456,  0.2571],
        [ 0.8042,  0.2800,  0.1102,  ..., -0.0303, -0.0649,  0.0801]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([  0, 172, 184, 477, 121, 529, 112,  18, 318,  89, 264, 351, 194, 336,
        346, 201,  76, 314, 336,  33, 197, 724, 104, 301,  35, 585, 147, 643,
        124, 429, 434, 409, 591, 132, 201, 399, 288,  45, 341, 299, 502,  63,
        144, 260, 582, 259, 603, 189,  59, 327,  46, 369, 365,   0, 193,  14,
        563,  67, 730, 627, 114, 554,  18, 289], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1232,  0.0463,  0.3179,  ..., -0.0886,  0.1871, -0.2092],
        [-0.2961,  0.0374,  0.1029,  ...,  0.2479, -0.3296,  0.0051],
        [ 0.4033,  0.1730,  0.0285,  ..., -0.1292,  0.1501, -0.1479],
        ...,
        [ 0.3779, -0.3252, -0.0233,  ...,  0.1019,  0.1006, -0.0955],
        [ 0.8018,  0.2759,  0.1130,  ..., -0.0282, -0.0649,  0.0799],
        [ 0.1721,  0.2871,  0.2793,  ...,  0.0742,  0.1201, -0.0133]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([158, 448, 143, 167,   3, 608, 272, 400, 186, 637, 736, 449, 352, 587,
         13, 621, 293, 258,  91, 506, 520, 544, 286, 207, 460,  27, 233, 390,
        323,  63, 371, 354, 707, 392,  94,  31, 589, 149, 166, 512, 520,  29,
        416, 352,  51, 558, 516, 331,   0, 403,  37, 554, 510, 331, 165, 429,
        731, 646, 286, 201, 152, 577,  63, 490], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0355, -0.0489,  0.2727,  ..., -0.1237, -0.1840,  0.3098],
        [ 0.1515,  0.3555,  0.3684,  ..., -0.3047,  0.2000,  0.3865],
        [ 0.1628, -0.4465, -0.2164,  ...,  0.0497,  0.3560,  0.1666],
        ...,
        [ 0.1123,  0.2646,  0.1509,  ...,  0.2281, -0.2473, -0.2266],
        [-0.1763,  0.1187,  0.3579,  ...,  0.2656, -0.4343, -0.0032],
        [ 0.0305, -0.3713,  0.3088,  ..., -0.0766, -0.2471,  0.2493]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([253, 526, 248, 636,  48, 151,  72, 463, 185, 499, 515, 241,  98, 359,
        136, 599, 486, 720, 155,  49, 400, 722, 635, 220, 147, 259, 540, 270,
        658,  96, 457, 122, 118, 748, 312, 428, 192,  65,  66, 425, 278, 502,
         31, 582, 664, 210,  95, 410, 717, 611, 240, 130, 425, 162, 367,  98,
        127, 578, 625,  64, 295, 590, 237, 637], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1493, -0.1857,  0.4419,  ..., -0.0434,  0.0420,  0.4133],
        [ 0.5518, -0.1433, -0.0496,  ...,  0.0757, -0.3259,  0.1763],
        [ 0.0626,  0.2900,  0.0193,  ..., -0.1860,  0.2805, -0.5840],
        ...,
        [ 0.2098,  0.0631, -0.2089,  ...,  0.3000,  0.2023, -0.1556],
        [ 0.1135,  0.1602, -0.0195,  ...,  0.1041, -0.2825,  0.3013],
        [ 0.2744, -0.4666,  0.0365,  ...,  0.0994,  0.2452,  0.0731]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([606, 329, 226, 371, 398, 115,  67, 213, 115, 262, 581,  78, 459, 583,
         13, 492, 108,  46, 132, 321, 382, 311, 125, 179,  20,  12, 546, 129,
         45,  93, 363,  93,  87, 160,  91, 643, 381, 109, 130, 440, 326, 516,
        316, 522, 432, 275, 141, 714, 417,  66, 630, 101, 105, 289, 153, 318,
         15, 129, 397, 522, 335, 364, 725, 654], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2474,  0.0311,  0.1364,  ...,  0.0341,  0.0239, -0.2075],
        [-0.0631,  0.0496, -0.2111,  ..., -0.3113, -0.2250, -0.0692],
        [-0.0911, -0.2957,  0.3398,  ...,  0.0160,  0.0994,  0.0871],
        ...,
        [ 0.2129, -0.0938, -0.0462,  ..., -0.0964,  0.2571,  0.2039],
        [ 0.2321, -0.0486, -0.0648,  ...,  0.0292,  0.1026,  0.3801],
        [ 0.5015, -0.1829, -0.2744,  ..., -0.0991, -0.1349, -0.0187]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([375, 632,  57, 364, 406, 147, 606, 616, 558, 328, 668, 427, 618, 145,
        272, 573, 260, 110, 209, 730, 610, 581, 135, 686, 741, 220, 355, 120,
        405, 720, 590, 533, 113,  92, 408, 680, 219, 499, 105, 235,  19, 686,
        296, 279, 262, 598, 418, 690, 480, 513, 394, 607, 350, 444, 387, 406,
         27,  46, 373, 344, 633,  47, 131, 504], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4143,  0.1074,  0.0116,  ...,  0.0364, -0.2188, -0.1888],
        [-0.1461, -0.1768, -0.4255,  ..., -0.1340,  0.0132,  0.0376],
        [ 0.0571,  0.1467,  0.0419,  ...,  0.2664,  0.0584,  0.0636],
        ...,
        [ 0.3884, -0.0592, -0.2859,  ..., -0.0201, -0.0100,  0.3086],
        [ 0.2280, -0.2052, -0.0576,  ...,  0.0450,  0.0420,  0.2913],
        [ 0.0585,  0.0956, -0.2725,  ..., -0.0588,  0.0228, -0.0069]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 76, 531,  26, 708, 425,  63,  81, 318, 384,  44, 742, 735,  46,  70,
        659,  53, 545,  58, 284, 307, 597,  30, 561,  57, 114, 373,  90, 586,
        597, 133, 211, 109, 183, 469, 289, 376, 167,  98, 588, 293, 318, 149,
        584, 153, 236, 192,  57, 532, 617,  33, 299,  15, 121, 716,  18,  70,
        663, 683,  96, 176, 115, 708, 423, 483], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0765,  0.2563,  0.0640,  ..., -0.0203,  0.5078, -0.0540],
        [ 0.2369, -0.1978,  0.2002,  ..., -0.0303,  0.1582, -0.1344],
        [ 0.1522,  0.3333, -0.0545,  ...,  0.0513,  0.0707, -0.5449],
        ...,
        [ 0.1680, -0.4087,  0.1674,  ...,  0.3259,  0.0602,  0.2942],
        [ 0.1694, -0.2115, -0.0913,  ..., -0.2622,  0.1383, -0.1356],
        [ 0.3254, -0.3669, -0.4041,  ..., -0.1072, -0.2600,  0.1940]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([212, 688, 608, 647, 584, 518,  46, 135, 395,  51, 357,  93, 130, 385,
        667, 708, 347, 399, 182,  48, 640, 136, 329, 147, 416, 134, 135, 134,
        504, 549, 112, 568, 740, 319,  74, 614, 434, 649, 301, 104, 131, 696,
         11,  50, 623, 425, 236, 651, 308, 341, 671, 179, 115, 270, 488, 480,
         15, 312, 135, 344, 708, 401, 748, 216], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5815,  0.3049, -0.0057,  ...,  0.0252,  0.0659,  0.0337],
        [ 0.3108, -0.1915,  0.1246,  ...,  0.2661, -0.1943,  0.4326],
        [-0.0621, -0.1225,  0.5166,  ...,  0.0343, -0.3118,  0.3101],
        ...,
        [-0.1765,  0.1925, -0.3047,  ..., -0.3203, -0.0084,  0.1819],
        [ 0.6641,  0.0311,  0.3909,  ...,  0.1674, -0.1758,  0.1580],
        [ 0.1898,  0.2205, -0.0408,  ..., -0.2969, -0.1218,  0.0306]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([748, 131, 203, 709, 391, 307,   1, 249, 374,  49, 158, 147, 405, 293,
        465, 135,  36, 152, 571,   3, 561, 676, 239, 201, 346, 357, 577, 719,
        657, 217, 602,   2, 137, 295, 743,   6, 689, 715, 490,  45,  13, 124,
        229, 628,  46, 549, 434, 203,   7, 649, 654, 456, 343, 410,  72,  30,
        415, 362, 436, 432, 736, 544,  77, 364], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.6616,  0.0329,  0.3940,  ...,  0.1670, -0.1771,  0.1560],
        [ 0.2319, -0.2131, -0.0589,  ...,  0.0516,  0.0469,  0.2915],
        [ 0.1365, -0.5635,  0.1720,  ...,  0.1377,  0.1161,  0.0942],
        ...,
        [ 0.0127, -0.1791,  0.1143,  ..., -0.3916, -0.0632, -0.1172],
        [ 0.3193,  0.3733,  0.0540,  ..., -0.0113,  0.1791,  0.2837],
        [ 0.2362, -0.0890, -0.0754,  ..., -0.1276,  0.2494,  0.1892]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([608, 267, 403, 628, 165, 496,  71, 636, 665, 448, 407,  11,  98, 576,
        129,  72, 471,  88, 537, 427, 586,  48, 220, 658, 260, 332, 703, 429,
        704, 665, 262,  45, 516, 118, 177, 267, 666, 654, 305, 429, 259, 248,
         78, 691, 238, 414, 202, 370, 263, 167, 411, 411, 110, 655, 142, 434,
        256,  24,  27, 296, 529, 677, 470, 165], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0415, -0.1018,  0.5288,  ...,  0.0351, -0.3000,  0.3088],
        [ 0.0138, -0.4880,  0.1522,  ...,  0.0337,  0.1783,  0.1646],
        [ 0.0775,  0.1987, -0.2964,  ..., -0.0956, -0.0920,  0.2288],
        ...,
        [ 0.5063,  0.0939,  0.0091,  ...,  0.0723,  0.1003, -0.0479],
        [ 0.4973, -0.0687, -0.0671,  ..., -0.1296,  0.1654,  0.1453],
        [-0.0453, -0.0302,  0.0545,  ...,  0.2218, -0.0737,  0.0406]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([594, 500, 511, 153, 425, 134, 140, 383, 736, 442, 713,   6, 334, 477,
        580,  12, 128, 749, 367, 519,  70,  82, 517, 684, 606, 473, 718,  61,
         50, 153,  85, 391, 587, 662, 529, 608, 312, 343, 659,  56, 182, 216,
        698, 565,  48, 452, 273,  53, 160, 566, 361, 727, 258, 602, 501, 249,
         53,  37, 416, 349, 651, 115, 381, 151], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1047,  0.2883,  0.2448,  ...,  0.2473, -0.3596, -0.1183],
        [ 0.1010, -0.2114, -0.1561,  ...,  0.1175, -0.0495, -0.0902],
        [ 0.3604, -0.1865,  0.1680,  ..., -0.2184,  0.1874,  0.0385],
        ...,
        [ 0.2017,  0.0521, -0.3621,  ...,  0.1068,  0.1798, -0.0123],
        [ 0.1855, -0.1416,  0.4282,  ..., -0.1959,  0.1371, -0.0334],
        [ 0.3594, -0.0392,  0.2064,  ..., -0.0288,  0.0602, -0.2040]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([427, 491, 606, 232, 327, 183, 130,  70, 359, 696, 597,  30,  67,  76,
        350,   6, 206, 226, 121, 158, 183,  47, 352, 748,   3,  66,  44, 475,
        576, 554, 505, 395, 152, 391, 507, 610, 505, 233, 540, 663, 131, 115,
        512, 105, 118, 365, 295, 386, 257, 489, 373,  63, 612, 528, 304, 409,
        475, 436, 144, 701, 696, 216, 308, 417], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3125,  0.4929, -0.0820,  ...,  0.4741, -0.2390,  0.0817],
        [ 0.0274, -0.3818,  0.3027,  ..., -0.3696,  0.1404, -0.1721],
        [ 0.2605, -0.0081,  0.1766,  ...,  0.0104,  0.0572, -0.2313],
        ...,
        [ 0.1624,  0.1346,  0.3184,  ..., -0.3503, -0.0365,  0.0107],
        [ 0.1406, -0.2832,  0.5845,  ...,  0.0763,  0.0232,  0.0019],
        [ 0.2720,  0.4695, -0.0349,  ..., -0.2222, -0.1156,  0.2971]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 67, 277, 221, 312, 372, 322, 642, 269, 731, 339, 128, 121, 164, 505,
         19, 659, 115, 525, 255, 448, 282, 400, 398, 261, 602, 639, 689, 735,
          5, 596, 425, 297, 681, 292, 717, 550, 124, 589, 689, 331, 434,  44,
        667, 677, 290, 267,  98, 636, 736,  67, 378, 707, 136, 198, 544, 152,
        109, 495, 488, 245, 722, 677, 532, 246], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0982, -0.3230, -0.1455,  ..., -0.0067,  0.2004, -0.0851],
        [ 0.2725,  0.0822, -0.4272,  ...,  0.0433,  0.0653,  0.1385],
        [ 0.1120, -0.1538,  0.3621,  ...,  0.2754,  0.2102,  0.0423],
        ...,
        [ 0.5151,  0.0872, -0.0014,  ...,  0.0831,  0.0891, -0.0545],
        [ 0.1169,  0.0688,  0.0693,  ...,  0.1422,  0.2505, -0.1311],
        [ 0.5811, -0.0323,  0.1373,  ...,  0.2476,  0.1343, -0.0164]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([610, 694, 744,  11, 597, 748,  18, 398, 530, 158, 595, 227, 580, 179,
         62, 376, 114, 427,  72, 314, 128, 460,  87, 724, 241, 588, 525, 395,
        120,  27, 300, 702, 316, 182, 730, 122, 310, 667, 178,  65, 146, 212,
        484,  90, 335, 463, 562, 197, 440, 617,  63, 246, 269, 299,  96, 565,
        409, 659, 650, 742, 606, 141, 165, 164], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.6138,  0.4287, -0.2494,  ...,  0.4294, -0.3555,  0.2355],
        [ 0.3079, -0.2250,  0.0973,  ..., -0.3145,  0.0821,  0.2012],
        [ 0.4553, -0.0823,  0.5928,  ..., -0.1437,  0.0700,  0.2937],
        ...,
        [ 0.0717,  0.4417,  0.0627,  ...,  0.2079, -0.0174,  0.2517],
        [-0.0599, -0.0669,  0.0476,  ...,  0.2195, -0.0524,  0.0419],
        [ 0.5757,  0.0103,  0.3489,  ..., -0.1740,  0.0973,  0.2859]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 98, 191, 459, 410, 572, 205, 739,  34, 476, 726, 354,  34, 259, 479,
        440, 605, 491, 343, 673, 665,  98,  27, 542, 299, 242, 590, 128, 248,
        630, 185, 411, 367, 705, 129, 601, 130, 296, 359, 330, 630, 401, 267,
        357, 312, 129, 218, 678, 312, 158, 611, 361, 426, 127, 664, 688, 544,
        124, 722, 421, 434, 237, 361, 193, 398], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0136,  0.2976, -0.2155,  ...,  0.1605,  0.0535,  0.2791],
        [ 0.5430,  0.0892, -0.2617,  ..., -0.1029, -0.4331,  0.2598],
        [ 0.3535,  0.1608, -0.1230,  ..., -0.0807,  0.3452,  0.2130],
        ...,
        [ 0.1752,  0.1859, -0.0366,  ..., -0.0068,  0.0321, -0.0767],
        [ 0.0152, -0.4509,  0.4521,  ..., -0.1852, -0.2397, -0.1340],
        [ 0.3440, -0.1462, -0.4253,  ..., -0.1193,  0.2222, -0.1108]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([721,  96, 189, 293, 218, 633, 737,  72,  62, 402, 326, 238,  15, 601,
        309, 378,  44,  72, 367, 103, 483, 634, 126, 316, 131, 387, 625, 511,
        344, 318, 496,   0, 114, 190, 504, 423, 508, 365, 565, 257, 498, 509,
        204, 111, 275, 212, 629, 729, 446, 406, 477,  46,  22, 226, 411, 501,
        301, 258, 420, 333,  44, 167, 181, 353], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0500, -0.3057, -0.4307,  ...,  0.3972, -0.4209,  0.1437],
        [ 0.1277, -0.2886,  0.0659,  ...,  0.0587,  0.1702, -0.2032],
        [ 0.2030, -0.2126,  0.4175,  ...,  0.0549,  0.0107,  0.1282],
        ...,
        [ 0.1846,  0.2329, -0.1190,  ...,  0.0984,  0.4346, -0.0127],
        [ 0.4697,  0.1532,  0.0062,  ...,  0.2998,  0.2283, -0.0047],
        [-0.0153,  0.1448,  0.2676,  ..., -0.0698, -0.1619,  0.4475]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([ 31, 708, 214, 482, 191, 157, 365, 385, 676, 430, 105, 232, 369, 114,
        182, 646, 514, 111, 724,  50, 488,  46, 589, 416, 696, 516, 262, 259,
        147, 132, 265, 531, 292, 362, 474, 638, 739, 675, 326,  91, 104, 699,
        446, 490, 128, 206, 527, 299,  10, 104, 651,  98, 597, 479, 662, 254,
        397,  50, 368, 128, 134, 591,   9, 343], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0768,  0.2947, -0.4622,  ..., -0.1669, -0.0245,  0.1340],
        [ 0.1667, -0.4341,  0.2101,  ...,  0.3396,  0.0424,  0.2695],
        [-0.1667,  0.0466, -0.0592,  ..., -0.4070,  0.1389, -0.2496],
        ...,
        [ 0.2367,  0.2179,  0.1578,  ..., -0.1136, -0.1040,  0.1686],
        [ 0.2932, -0.0957,  0.1213,  ..., -0.0667,  0.1096,  0.1068],
        [ 0.0948, -0.1043, -0.2939,  ..., -0.1340, -0.0152,  0.5083]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([469, 463, 309, 731, 104, 361, 436,   2,   5, 106, 324, 424,  44, 332,
        437,  45, 436, 132, 484, 167,  76, 487, 443, 181, 563, 109, 575, 663,
         54,  33,  15, 636, 130, 509, 415, 386, 176, 468, 349, 128, 171, 637,
        676, 554, 424, 340, 131, 368, 668, 158, 600, 425, 749, 234,  98, 269,
         64, 355, 604,  47, 550, 513, 121, 130], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5635,  0.2883,  0.3994,  ..., -0.1481,  0.2700,  0.3345],
        [ 0.1191,  0.0270,  0.2343,  ...,  0.0921, -0.0149, -0.2554],
        [ 0.2964, -0.2179,  0.0868,  ..., -0.0942,  0.2734, -0.1818],
        ...,
        [ 0.3145, -0.0179, -0.2878,  ..., -0.0494, -0.5244, -0.0864],
        [-0.0422,  0.0645,  0.1257,  ..., -0.2162, -0.0681,  0.2274],
        [ 0.2703,  0.2478,  0.0312,  ..., -0.0031,  0.1186, -0.1064]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([357, 267, 436, 597, 137, 190, 457, 350, 176, 331,  17, 149, 722,  66,
        677, 520, 328, 385, 483, 693,  53, 237, 253, 712, 727, 155, 286, 181,
        323, 726, 566, 103, 385, 597, 179, 364, 298, 104,  48,   0, 414, 675,
        357, 564, 264, 637, 213,  20, 327, 265, 645, 601, 627, 677, 398, 520,
        442, 338, 260, 395, 496, 682, 744,   8], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3972,  0.0333,  0.4895,  ...,  0.2744,  0.0673, -0.3005],
        [-0.0729, -0.5054,  0.1104,  ...,  0.1439,  0.1428,  0.1577],
        [ 0.6719,  0.1119,  0.0583,  ...,  0.3254,  0.0561,  0.0513],
        ...,
        [ 0.2196,  0.1534,  0.1140,  ...,  0.0919,  0.0139,  0.1473],
        [ 0.4399, -0.0743,  0.5679,  ..., -0.1425,  0.0634,  0.3225],
        [ 0.3914,  0.0568,  0.0045,  ...,  0.0520, -0.1069,  0.1517]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([  6, 282, 702,  50, 628, 150, 334, 192, 670, 235, 187, 731, 580, 637,
         45, 286, 643,  41, 167, 176, 105, 298, 265, 188, 243, 496, 245,  86,
        537, 337, 642, 115, 272, 330,   3, 423, 566, 306, 269, 643,  33, 115,
        384, 438,  73, 363, 158, 738, 620, 572, 732, 487,  27, 536, 115, 198,
         46, 263, 691, 666, 544, 359, 615, 541], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0798,  0.1266,  0.3730,  ..., -0.0273, -0.0379, -0.2285],
        [ 0.2124, -0.2849,  0.6660,  ...,  0.4194,  0.2000,  0.0007],
        [ 0.1969,  0.2356,  0.1105,  ..., -0.0815,  0.2181,  0.1157],
        ...,
        [ 0.2568,  0.2517, -0.2744,  ..., -0.1344,  0.1107, -0.2412],
        [ 0.3250,  0.2046, -0.0235,  ...,  0.1941, -0.0077, -0.0782],
        [ 0.2125,  0.5386, -0.4487,  ...,  0.1084,  0.0873,  0.0723]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([167, 360, 136, 328, 185, 414, 293, 455, 474, 197,  51, 580, 209, 620,
        708, 289, 308, 382,  25, 516, 496, 165, 113, 335, 583, 713, 301, 175,
        166,  60, 436,  44,  72, 480, 425, 417, 155, 507, 392, 123,  60, 213,
         84, 381, 251, 175,  55, 411, 613, 601, 157, 115, 483, 104, 549, 262,
        359, 194, 183, 667,  73,   0, 376, 696], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.1748,  0.2443, -0.1316,  ...,  0.1198,  0.4568, -0.0168],
        [ 0.4067, -0.0648,  0.6709,  ...,  0.0300, -0.4158,  0.0828],
        [-0.3149, -0.3025,  0.4463,  ...,  0.1304, -0.1433,  0.0566],
        ...,
        [ 0.0977, -0.0202,  0.3972,  ..., -0.1312,  0.2076, -0.2214],
        [ 0.1460,  0.1321,  0.1388,  ...,  0.0513,  0.1772,  0.1400],
        [ 0.5679, -0.0262,  0.1418,  ..., -0.2437, -0.3169, -0.0446]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([358, 213, 448,  78, 352, 295, 482,  33, 325, 237, 264, 190, 509, 188,
        171,  54, 177, 408, 259,  26, 202, 233, 689, 434, 121, 421, 525, 616,
        482, 623, 682, 666, 385, 523, 147, 552, 152, 436, 141, 102, 360, 707,
        702,  53, 180, 269, 288, 717,  25, 287, 140,  73, 371,   7, 363, 290,
        258, 314, 530,  66, 596, 666, 128, 572], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0551,  0.0905,  0.3594,  ...,  0.2078,  0.1871, -0.0446],
        [ 0.1048,  0.1186, -0.5103,  ..., -0.0599,  0.4817, -0.0065],
        [ 0.1511,  0.3733,  0.3423,  ..., -0.3955,  0.1600,  0.3870],
        ...,
        [ 0.1013, -0.1764, -0.1335,  ...,  0.3472,  0.1604,  0.1229],
        [ 0.2864, -0.1838,  0.0338,  ...,  0.0836,  0.0391,  0.4763],
        [ 0.3320, -0.0515,  0.0351,  ..., -0.2812,  0.0833, -0.3152]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([111, 131,  90,  30, 283, 333, 433, 416, 203, 382, 345, 118, 386, 653,
         81, 364, 427, 303, 667,  82, 702, 585, 102, 219, 254, 643, 566, 611,
        312, 365, 294, 409, 121, 173, 575, 607,  53,  27, 369, 552, 450,  46,
        262, 110,  66, 503, 632, 299, 602, 281, 411, 173, 530, 352, 726, 597,
        222, 402, 312,  63, 364, 242, 330, 405], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.4658,  0.0460,  0.3708,  ...,  0.0912,  0.1714,  0.3018],
        [ 0.2661, -0.2266, -0.0298,  ...,  0.1050,  0.0245,  0.2805],
        [-0.0065,  0.0564, -0.1349,  ..., -0.1069,  0.1646, -0.0460],
        ...,
        [ 0.3625,  0.0378, -0.2510,  ...,  0.2219,  0.1628, -0.0511],
        [ 0.6001,  0.1054, -0.1443,  ..., -0.0229, -0.1755,  0.3542],
        [ 0.2036,  0.0294,  0.5464,  ..., -0.0430, -0.1553,  0.3525]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([151, 666, 434, 577,  82, 648, 182, 185, 556, 675,  67, 294, 618, 132,
        236, 528, 347,  72, 391, 293, 609, 447, 503, 715, 302, 328, 519, 307,
        392, 576, 494, 136, 155, 170, 397,  42, 385, 131, 411, 171, 429, 504,
        458, 567, 564, 289, 482, 740,   6, 525, 571,  93, 536, 654, 481, 301,
        217, 597, 508, 699,  26, 358,  46, 586], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.3743, -0.0054,  0.1865,  ..., -0.0037,  0.0074, -0.2605],
        [ 0.0999, -0.1659, -0.1466,  ...,  0.3511,  0.1410,  0.1215],
        [ 0.1425, -0.5327,  0.3557,  ...,  0.1486, -0.2944,  0.2805],
        ...,
        [ 0.0592,  0.0795,  0.3667,  ...,  0.2059,  0.1885, -0.0419],
        [ 0.1299, -0.3594, -0.0010,  ..., -0.0522,  0.3472,  0.4990],
        [ 0.2386,  0.0454,  0.0421,  ..., -0.0693,  0.0096, -0.0399]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([239, 266, 391, 104, 442, 342, 494,  79, 388,  26, 373, 193, 561, 289,
        389, 578, 398, 241, 435, 135, 664, 193, 172,   0, 607,  76,  78,  97,
        483, 543, 433, 211, 720, 611,  26, 612, 432, 313, 173, 383, 653,  92,
         95, 306, 328, 630, 114,  39, 415, 512, 136,  54,  53, 389, 703,  61,
        405,  16, 394, 602, 618, 319, 262, 608], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.0277, -0.1841,  0.0714,  ...,  0.1026,  0.2534, -0.0605],
        [ 0.1431,  0.1379,  0.0758,  ...,  0.1065, -0.1910,  0.0906],
        [ 0.4802,  0.1066, -0.0124,  ..., -0.1512,  0.0794, -0.0299],
        ...,
        [ 0.1350,  0.2051,  0.2705,  ...,  0.1350,  0.2522, -0.1593],
        [ 0.5757,  0.0232,  0.6182,  ..., -0.0265, -0.0737, -0.0311],
        [ 0.0218, -0.1152,  0.5693,  ...,  0.1635, -0.3420,  0.3564]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([531, 192, 151, 658, 584, 244, 529, 269, 129, 315,   7, 131, 405, 401,
        118, 150, 593, 398, 325,  54, 478, 498, 149, 132, 135, 636, 517, 321,
        303, 422, 378, 131, 392, 615, 319, 364, 701, 578,  53,  30, 387,  61,
        592, 310, 416, 560,  33, 363, 643, 350, 517, 579, 266, 295, 397, 213,
        581,  86, 485, 688, 713, 316,  33, 135], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2180, -0.1135,  0.1721,  ...,  0.0341,  0.1545, -0.1092],
        [ 0.0733,  0.0966,  0.0542,  ..., -0.0729, -0.0623, -0.2133],
        [ 0.3708, -0.0070,  0.1886,  ...,  0.0045,  0.0046, -0.2676],
        ...,
        [ 0.2732, -0.0547, -0.0316,  ..., -0.1963, -0.0469,  0.2966],
        [ 0.1318, -0.1641,  0.4570,  ..., -0.2153,  0.0175,  0.2213],
        [-0.1832,  0.2600, -0.0103,  ...,  0.0251,  0.0335,  0.2251]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
2025-04-03 13:08:54,860 transreid.train INFO: Epoch[1] Iteration[200/203] Loss: 7.764, Base Lr: 7.80e-05
label tensor([323, 505, 749, 180, 129, 314, 573, 213, 121, 643, 601,  89, 187, 157,
        313, 474, 317, 407, 565, 310, 594, 113, 686, 260, 648, 303, 530, 698,
        238,  74, 410, 415, 146,  98, 496, 542, 436, 127, 657, 301, 409, 545,
         61, 111, 147,  54, 415, 434, 336, 220, 252, 179, 743, 499, 525, 633,
        221, 528, 103, 610,  48, 239, 629, 392], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.0133,  0.1808,  0.0366,  ...,  0.1035,  0.4380,  0.0950],
        [ 0.2769, -0.0406, -0.2025,  ..., -0.3635,  0.3289,  0.0493],
        [ 0.0628,  0.3877,  0.0612,  ...,  0.2874, -0.0705,  0.0194],
        ...,
        [ 0.0110, -0.1847,  0.0626,  ...,  0.0967,  0.2563, -0.0643],
        [ 0.3652, -0.2297, -0.0722,  ..., -0.1324, -0.3281,  0.1858],
        [ 0.1523, -0.1417,  0.3049,  ...,  0.4058, -0.1398,  0.4541]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([633, 357, 602, 267, 373, 197, 299, 307, 743, 365, 321, 609, 387, 106,
         12, 131, 504, 416, 122, 596, 212, 488, 113,   2, 368, 707, 408,  16,
        611, 459,  54, 509, 327,   5, 549, 680, 724, 411, 290, 201, 652, 245,
        155, 131, 506, 119, 668, 672, 327, 705,  72, 669, 188, 129, 414, 675,
        487,  25, 121, 591, 629, 111, 410, 427], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[-0.1083, -0.0986, -0.1135,  ...,  0.0235,  0.2123, -0.1216],
        [ 0.3130,  0.0646,  0.5205,  ...,  0.2742,  0.0935, -0.3242],
        [-0.1399, -0.2314,  0.1713,  ..., -0.0371,  0.2600,  0.4038],
        ...,
        [ 0.4971,  0.0265,  0.3948,  ...,  0.1016,  0.1744,  0.3220],
        [ 0.3086,  0.0801,  0.3101,  ...,  0.3010, -0.0874,  0.0503],
        [ 0.2345,  0.5352,  0.0218,  ...,  0.5391, -0.2588,  0.1399]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([668, 136, 408, 649, 289, 407, 122, 445], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.2371, -0.1855, -0.4536,  ...,  0.2102,  0.1539, -0.0556],
        [-0.3682, -0.3179,  0.4419,  ...,  0.1512, -0.1455,  0.0826],
        [-0.0136,  0.3667,  0.0620,  ..., -0.0256,  0.0372, -0.2402],
        ...,
        [ 0.0947,  0.1155,  0.0817,  ..., -0.0549, -0.0318,  0.1268],
        [ 0.0753,  0.4827, -0.1782,  ..., -0.2625, -0.1725,  0.1387],
        [ 0.0937,  0.3823,  0.1296,  ..., -0.0858, -0.0374, -0.2683]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([8, 1024])
label tensor([691,  27, 338, 425, 198, 521, 436, 181, 244, 166, 213, 615, 701, 495,
        749, 567, 302,  33, 135, 718, 747,  72, 675, 523, 554, 296, 370, 406,
         51, 298, 660, 309, 167, 379, 323, 123, 497, 248, 314,  93, 500, 729,
        352, 220, 680, 220, 269, 362, 166, 337, 201, 354, 153, 199, 262, 298,
        715, 507, 121,  67, 371, 103, 628, 395], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
text_features tensor([[ 0.5273, -0.0105, -0.0991,  ...,  0.0093, -0.1772,  0.2025],
        [ 0.2410, -0.1553,  0.0059,  ...,  0.2515, -0.0116,  0.3191],
        [-0.0729,  0.0229,  0.0135,  ...,  0.0709,  0.0191, -0.3906],
        ...,
        [ 0.1478,  0.0434,  0.0631,  ..., -0.0283,  0.2622, -0.2140],
        [ 0.2522, -0.0648,  0.0891,  ...,  0.0540,  0.2194, -0.1180],
        [ 0.0605, -0.4255, -0.2169,  ...,  0.1227,  0.0248,  0.3511]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>) torch.Size([64, 1024])
label tensor([576, 529, 388,  36, 459, 419, 585, 512, 637, 213, 369, 530, 366, 723,
        328, 229, 173, 273,  18,  14, 661, 215, 134, 260,  48, 385, 121, 255,
        659, 678, 367, 131, 693, 368, 224, 516, 462, 647, 492, 552, 129, 315,
        629, 650, 720, 177, 446, 366, 399,  63, 318, 478, 289, 421, 711, 533,
        358,  25, 694, 374, 400,  98, 203,  89], device='cuda:0')
prompt tensor([[[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        ...,

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]],

        [[-0.0013,  0.0006,  0.0003,  ..., -0.0028, -0.0085, -0.0023],
         [ 0.0015,  0.0021,  0.0100,  ..., -0.0061, -0.0389,  0.0082],
         [ 0.0003,  0.0400, -0.0096,  ...,  0.0015,  0.0230,  0.0065],
         ...,
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259],
         [-0.0349, -0.0043, -0.0101,  ...,  0.0101,  0.0070, -0.0259]]],
       device='cuda:0', grad_fn=<CatBackward0>)
